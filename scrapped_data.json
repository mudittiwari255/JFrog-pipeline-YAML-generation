{"topics": [{"contentId": "hRYu_BM50UKyDC9adIFzag", "topic": {"id": "hRYu_BM50UKyDC9adIFzag", "title": "Bash", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-192b8616-d2e2-3130-7b78-9cd90636a566\" data-permalink=\"creating-pipelines/pipelines-steps/bash.html\" data-publication-date=\"1695975146\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680849818\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>Bash</strong></span> is a generic step type that enables executing any shell command. This general-purpose step can be used to execute any action that can be scripted, even with tools and services that haven't been integrated with JFrog Pipelines. This is the most versatile of the steps while taking full advantage of what the lifecycle offers.</p><p>All native steps derive from the Bash step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the Bash step definition, since it's the core of the definition of all other steps.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-Usage\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Usage</h5></div></div></div><p><span class=\"bold\"><strong>Bash</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:                       &lt;string&gt;\n    steps:\n      - name:           &lt;string&gt;\n        type:           Bash\n        configuration:\n          affinityGroup:        bldGroup \n          priority:             &lt;[0-10000]&gt;\n          timeoutSeconds:       &lt;job timeout limit&gt;\n          nodePool:             &lt;name of the nodePool&gt;\n          chronological:        &lt;true/false&gt;\n          allowFailure:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    &lt;true/false&gt;\n          environmentVariables:\n            env1:                       &lt;string&gt;\n            env2:                       &lt;string&gt;\n            env3:\n              default:      &lt;string&gt;\n              description:  &lt;string&gt;\n              values:       &lt;array&gt;\n              allowCustom:  &lt;true/false&gt;\n          integrations:\n            - name:             &lt;integration name&gt;\n          inputSteps:\n            - name:             &lt;step name&gt;\n              status:\n                -&nbsp;&lt;terminal_status&gt;\n                -&nbsp;&lt;terminal_status&gt;\n                -&nbsp;&lt;terminal_status&gt;\n          inputResources:\n            - name:             &lt;resource name&gt;\n              trigger:          &lt;true/false&gt;    # default true\n              newVersionOnly: &lt;true/false&gt;  # default false\n              branch:       &lt;string&gt;        # see description of defaults below\n          outputResources:\n            - name:             &lt;resource name&gt;\n              branch:       &lt;string&gt;        # see description of defaults below\n          runtime:            \n            type:                       &lt;image/host&gt;\n            image:\n              auto:\n                language: &lt;string&gt;\n                 version: &lt;string&gt;  # specifies a single version. Cannot be used if \"versions\" is defined.\n                 versions:          # specifies multiple versions. Cannot be used if \"version\" is defined.\n                               - &lt;string&gt;\n              custom:\n                name:                  &lt;string&gt;\n                tag:                       &lt;string&gt;\n                options:           &lt;string&gt;\n                registry:          &lt;integration&gt;   # optional integration for private registry\n                sourceRepository:  &lt;path&gt;          # required if registry is Artifactory. e.g. docker-local\n                region:                            # required if registry is AWS. e.g. us-east-1\n                autoPull:       &lt;true/false&gt;             # default true; pulls image before run\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onExecute:\n            - echo \"executing task command 1\"\n            - echo \"executing task command 2\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step. The name should be chosen to accurately describe what the step does, e.g. <code class=\"code\">prov_test_env</code> to represent a job that provisions a test environment. Names of steps must be unique within a pipeline.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">Bash</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all optional configuration selections for the step's execution environment.</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"width: 82.6311%;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">affinityGroup</code></p></td><td class=\"td\"><p>Label that controls affinity to a Node. All the steps with the same affinityGroup will be executed on the same node. This will allow sharing state between the steps. An example is having the same affinityGroup for DockerBuild and DockerPush steps in a Pipeline so that Image being built in the DockerBuild step can be used to published in the DockerPush step.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">priority</code></p></td><td class=\"td\"><p>Controls the priority of a step when there are parallel steps in a pipeline or multiple pipelines executing. It determines which step will run first across all steps that could run if there were no constraints on the number of steps running. Steps with a lower number will run before steps with higher numbers. For example, priority 10 will run before priority 100. The default priority is 9999.</p><p>Priority does not apply to steps that are still waiting for an input to complete or configured to run in a node pool with no available nodes. Also, if there are two steps ready to run and only one available node, the one with the lower priority number runs first, regardless of which pipeline each step belongs to.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">timeoutSeconds</code></p></td><td class=\"td\"><p>Time limit, in the number of seconds, for the step to complete. If the step does not complete in the given time limit, the step will be forced to a completion state of failed.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">nodePool</code></p></td><td class=\"td\"><p>Assigns the node pool the step executes on. If node pool isn't specified, a step will execute on the default node pool. <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/FgNxqTjxOh974ZxvWxmd4Q?section=UUID-dfe2cd0e-2376-213f-5455-fff9fd0634db_id_ManagingRuntimes-NodePools\" title=\"Node Pools\" data-ft-internal-link=\"intercept\"> See here</a> to learn more about node pool</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chronological</code></p></td><td class=\"td\"><p>Specifies the step must execute in chronological order, to ensure receipt of all state updates from preceding steps.</p><p>A step with <code class=\"code\">chronological:true</code> will only execute when that step is complete in all previously triggered runs.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">allowFailure</code></p></td><td class=\"td\"><p>If you do not want a step to contribute to the final status of the run, add&nbsp;allowFailure: true&nbsp;to the&nbsp;configuration&nbsp;section of that step. When this option is used, even when a step fails or is skipped, the final status of the run is not affected.</p><p>For more information, see&nbsp;<a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/mIj93y6uAm~8fdoA7FkaAA\" title=\"Conditional Workflows\" data-ft-internal-link=\"intercept\">Conditional Workflows</a>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">condition</code></p></td><td class=\"td\"><p>Create a condition based on the values of&nbsp;add_run_variables&nbsp;environment variable, so that a step can be skipped based on dynamically set variables before it gets assigned to a node.</p><p>For more information, see&nbsp;Run Variable Conditional Workflow.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">environmentVariables</code></p></td><td class=\"td\"><p>Assigns any environment variables and their values in key:value format. All environment variables assigned within a step definition are active only for the scope of the execution of that step.</p><p>If the following variables are set, they will be used:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"code\">JFROG_CLI_BUILD_NAME</code>: If set, the pipeline uses this value instead of the default pipeline name for the build info collected.</p></li><li class=\"listitem\"><p><code class=\"code\">JFROG_CLI_BUILD_NUMBER</code>: If set, the pipeline uses this value instead of the default run number for the build info collected.</p></li><li class=\"listitem\"><p><code class=\"code\">USE_LOCAL_JFROG_CLI</code>: If set as <code class=\"code\">true</code>, the local JFrog CLI on the host or in the image (depending on <code class=\"code\">runtime</code> configuration) is used instead of the version packaged with JFrog Pipelines. This is not recommended and native steps may not be able to run with the local JFrog CLI version.</p></li></ul></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>A collection of integrations that will be used by this step. Integrations can be used directly in step without a resource.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputSteps</code></p></td><td class=\"td\"><p>A collection of named steps whose completion will trigger execution of this step.</p><p>In addition, you can set&nbsp;status&nbsp;conditional workflow for input steps. When configured for a step, it executes only if an input step\u2019s status, during its current run, is satisfied. You can configure any number of statuses for an input step.</p><div class=\"note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>It is important to note that the status of an input step in the current run only is considered for conditional workflows. If a step is not part of the current run, it is always assumed that the condition for that input step is met.</p></div><p>For more information, see&nbsp;Step Status Conditional Workflow.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>A collection of named <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/cvMvKDVFYgYz9CAEi5V0DQ\" title=\"Pipelines Resources\" data-ft-internal-link=\"intercept\">Pipelines Resources</a> that will be used by this step as inputs.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><span class=\"bold\"><strong>trigger</strong></span>: By default, changes to these named resources will trigger execution of this step. This can be changed by declaring <code class=\"code\">trigger</code> as <code class=\"code\">false</code>.</p></li><li class=\"listitem\"><p><code class=\"code\">newVersionOnly</code> : Setting <code class=\"code\">newVersionOnly</code> as <code class=\"code\">true</code> on one or more inputs will cause the step to be skipped if one or more of those resources is an output resource of another step in the same run and none of the <code class=\"code\">inputResources</code> have been updated in the current run.</p></li><li class=\"listitem\"><p><code class=\"code\">branch</code> : A <code class=\"code\">branch</code> is only required when using a resource from another branch of a multi-branch source. By default, the resource from a single-branch source or from the same branch of a multi-branch pipeline is used. To use a multi-branch resource in a single-branch pipeline or another branch in a multi-branch pipeline, <code class=\"code\">branch</code> should be used to specify the branch to which the resource belongs.</p></li></ul></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>A collection of named <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/cvMvKDVFYgYz9CAEi5V0DQ\" title=\"Pipelines Resources\" data-ft-internal-link=\"intercept\">Pipelines Resources</a> that will be generated or changed by this step.</p><p><code class=\"code\">branch</code>: A <code class=\"code\">branch</code> is only required for resources from another branch of a multi-branch source. By default, the resource from a single-branch source or from the same branch of a multi-branch pipeline is assumed. To update a multi-branch resource in a single-branch pipeline or another branch in a multi-branch pipeline, <code class=\"code\">branch</code> should be used to specify the branch to which the resource belongs.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">runtime</code></p></td><td class=\"td\"><p>Specifies the runtime for the execution node.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declare sets of shell command sequences to perform for different execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Main commands to execute for the step</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><div class=\"note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p><code class=\"code\">onExecute</code>,&nbsp;<code class=\"code\">onStart</code>,&nbsp;<code class=\"code\">onSuccess</code>,&nbsp;<code class=\"code\">onFailure</code>, and&nbsp;<code class=\"code\">onComplete</code>&nbsp;are reserved keywords. Using these keywords in any other context in your execution scripts can cause unexpected behavior.</p></div></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The Pipelines DSL for these examples is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/Bash\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-Performabuildactivity\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Perform a build activity</h6></div></div></div><p>This is an example of how to use the Bash step to perform a build activity.</p><p><span class=\"bold\"><strong>Bash step to build</strong></span></p><pre class=\"programlisting\">- name: build\n  type: Bash\n  configuration:\n    nodePool: my_node_pool\n    environmentVariables:\n      env1: value1\n      env2:\n        default: value2\n        description: Example Variable\n        values:\n          - value2\n          - value3\n        allowCustom: false\n    runtime:\n      type: image\n      image:\n        auto:\n          language: node\n          versions:\n            - \"16\"\n    inputResources:\n      - name: src\n  execution:\n    onExecute:\n      - cd $res_src_resourcePath\n      - npm install\n      - mkdir -p testresults &amp;&amp; mkdir -p codecoverage\n      - $res_src_resourcePath/node_modules/.bin/mocha --recursive \"tests/**/*.spec.js\" -R mocha-junit-reporter --reporter-options mochaFile=testresults/testresults.xml\n      - $res_src_resourcePath/node_modules/.bin/istanbul --include-all-sources cover -root \"routes\" node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive \"tests/**/*.spec.js\"\n      - $res_src_resourcePath/node_modules/.bin/istanbul report cobertura --dir codecoverage\n      - save_tests $res_src_resourcePath/testresults/testresults.xml\n    onSuccess:\n      - send_notification mySlack \"build completed\"</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-Pythoninbashstep\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Python in bash step</h6></div></div></div><p>This is an example of how to use Python in a bash step.</p><p><span class=\"bold\"><strong>Python</strong></span></p><pre class=\"programlisting\">resources:\n  - name: script\n    type: GitRepo\n    configuration:\n      path: jfrog/sample-script\n      gitProvider: myGithub\npipelines:\n  - name: test_stepTestReports\n    steps:\n      - name: testReport\n        type: Bash\n        configuration:\n          inputResources:\n            - name: script\n        execution:\n          onExecute:\n            - cd $res_script_resourcePath\n            - ls\n            - python -m py_compile calc.py\n            - pip install --upgrade pip\n            - hash -d pip\n            - pip install pytest           \n            - py.test --verbose --junit-xml test-reports/results.xml test_calc.py\n          onComplete:\n            - save_tests $res_script_resourcePath/test-reports/results.xml</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-runtimeenvironmentVariablesandinputStepstags\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">runtime, environmentVariables, and inputSteps tags</h6></div></div></div><p>This example uses the <code class=\"code\">runtime</code>, <code class=\"code\">environmentVariables</code>, and <code class=\"code\">inputSteps</code> tags:</p><pre class=\"programlisting\">pipelines:\n  - name: api_steps\n    steps:\n      - name: api_steps\n        type: Bash\n        configuration:\n          runtime:\n            type: host\n          environmentVariables:\n            env1: value1\n            env2: value2\n        execution:\n          onExecute:\n            - touch cachefile.txt\n            - add_cache_files cachefile.txt my_file\n\n      - name: api_steps_2\n        type: Bash\n        configuration:\n          runtime:\n            type: host\n          inputSteps:\n            - name: api_steps\n        execution:\n          onExecute:\n            - echo \"step 2..\"\n\n  - name: api_steps_ProjectAdmin\n    steps:\n      - name: api_steps_ProjectAdmin\n        type: Bash\n        configuration:\n          runtime:\n            type: host\n          environmentVariables:\n            env1: value1\n            env2: value2\n        execution:\n          onExecute:\n            - touch cachefile.txt\n            - add_cache_files cachefile.txt my_file\n\n      - name: api_steps_ProjectAdmin_2\n        type: Bash\n        configuration:\n          runtime:\n            type: host\n          inputSteps:\n            - name: api_steps_ProjectAdmin\n        execution:\n          onExecute:\n            - echo \"step 2..\"\n\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-affinityGroupandprioritytags\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">affinityGroup and priority tags</h6></div></div></div><p>This example uses the <code class=\"code\">affinityGroup</code> and <code class=\"code\">priority</code> tags:</p><pre class=\"programlisting\">pipelines:\n  - name: S_WF_019\n    steps:\n      - name: S_WF_019_001\n        type: Bash\n        execution:\n          onStart:\n            - add_run_variables step_1_var=\"step_1\"\n          onExecute:\n            - echo \"step 1 is running\"\n\n      - name: S_WF_019_002\n        type: Bash\n        configuration:\n          inputSteps:\n            - name: S_WF_019_001\n          affinityGroup: ag_foo\n          priority: 4\n        execution:\n          onStart:\n            - echo \"step_4_var - ${step_4_var}\"\n            - if [ \"$step_4_var\" != \"step_4\" ]; then exit 1; fi\n            - add_run_variables step_2_var=\"step_2\"\n          onExecute:\n            - echo \"step 2 is running\"\n\n      - name: S_WF_019_003\n        type: Bash\n        configuration:\n          inputSteps:\n            - name: S_WF_019_001\n          affinityGroup: ag_foo\n          priority: 1\n        execution:\n          onStart:\n            - echo \"step_1_var - ${step_1_var}\"\n            - if [ \"$step_1_var\" != \"step_1\" ]; then exit 1; fi\n            - add_run_variables step_3_var=\"step_3\"\n          onExecute:\n            - echo \"step 3 is running\"\n\n      - name: S_WF_019_004\n        type: Bash\n        configuration:\n          inputSteps:\n            - name: S_WF_019_001\n          affinityGroup: ag_foo\n          priority: 3\n        execution:\n          onStart:\n            - echo \"step_3_var - ${step_3_var}\"\n            - if [ \"$step_3_var\" != \"step_3\" ]; then exit 1; fi\n            - add_run_variables step_4_var=\"step_4\"\n          onExecute:\n            - echo \"step 4 is running\"\n\n      - name: S_WF_019_005\n        type: Bash\n        configuration:\n          inputSteps:\n            - name: S_WF_019_002\n            - name: S_WF_019_003\n            - name: S_WF_019_004\n          affinityGroup: ag_foo\n          priority: 4\n        execution:\n          onStart:\n            - echo \"step_6_var - ${step_6_var}\"\n            - if [ \"$step_6_var\" != \"step_6\" ]; then exit 1; fi\n            - add_run_variables step_5_var=\"step_5\"\n          onExecute:\n            - echo \"step 5 is running\"\n\n      - name: S_WF_019_006\n        type: Bash\n        configuration:\n          inputSteps:\n            - name: S_WF_019_002\n            - name: S_WF_019_003\n            - name: S_WF_019_004\n          affinityGroup: ag_foo\n          priority: 2\n        execution:\n          onStart:\n            - echo \"step_2_var - ${step_2_var}\"\n            - echo \"step_3_var - ${step_3_var}\"\n            - echo \"step_4_var - ${step_4_var}\"\n            - if [ \"$step_2_var\" != \"step_2\" ]; then exit 1; fi\n            - if [ \"$step_3_var\" != \"step_3\" ]; then exit 1; fi\n            - if [ \"$step_4_var\" != \"step_4\" ]; then exit 1; fi\n            - add_run_variables step_6_var=\"step_6\"\n          onExecute:\n            - echo \"step 6 is running\"\n\n      - name: S_WF_019_007\n        type: Bash\n        configuration:\n          inputSteps:\n            - name: S_WF_019_005\n            - name: S_WF_019_006\n          affinityGroup: ag_foo\n          priority: 2\n        execution:\n          onStart:\n            - echo \"step_1_var - ${step_1_var}\"\n            - echo \"step_2_var - ${step_2_var}\"\n            - echo \"step_3_var - ${step_3_var}\"\n            - echo \"step_4_var - ${step_4_var}\"\n            - echo \"step_5_var - ${step_5_var}\"\n            - echo \"step_6_var - ${step_6_var}\"\n            - if [ \"$step_1_var\" != \"step_1\" ]; then exit 1; fi\n            - if [ \"$step_2_var\" != \"step_2\" ]; then exit 1; fi\n            - if [ \"$step_3_var\" != \"step_3\" ]; then exit 1; fi\n            - if [ \"$step_4_var\" != \"step_4\" ]; then exit 1; fi\n            - if [ \"$step_5_var\" != \"step_5\" ]; then exit 1; fi\n            - if [ \"$step_6_var\" != \"step_6\" ]; then exit 1; fi\n          onExecute:\n            - echo \"step 7 is running\"\n\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-chronologicaltag\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">chronological tag</h6></div></div></div><p>This examples uses the <code class=\"code\">chronological</code> tag:</p><pre class=\"programlisting\">pipelines: \n  - name: bash_chronological\n    steps: \n      - name: Start\n        type: Bash\n        execution: \n          onExecute: \n            - echo \"It's a start.\"\n      - name: Step1\n        type: Bash\n        configuration:\n          chronological: true\n          inputSteps: \n            - name: Start\n        execution: \n          onExecute: \n            - add_run_variables step1=foo\n      - name: Step2\n        type: Bash\n        configuration: \n          chronological: true\n          inputSteps: \n            - name: Start\n        execution: \n          onExecute: \n            - add_run_variables step2=bar\n      - name: Step3\n        type: Bash\n        configuration: \n          chronological: true\n          inputSteps: \n            - name: Start\n        execution: \n          onExecute: \n            - add_run_variables step3=baz\n      - name: Finish\n        type: Bash\n        configuration: \n          inputSteps: \n            - name: Step1\n            - name: Step2\n            - name: Step3\n        execution: \n          onExecute: \n            - |\n              echo \"Step1: $step1\"\n              echo \"Step2: $step2\"\n              echo \"Step3: $step3\"\n\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-timeoutSecondstag\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">timeoutSeconds tag</h6></div></div></div><p>This example uses the <code class=\"code\">timeoutSeconds</code> tag:</p><pre class=\"programlisting\">pipelines:\n  - name: pipelines_S_Bash_0023\n    steps:\n      - name: S_Bash_0023\n        type: Bash\n        configuration:\n          timeoutSeconds: 10\n        execution:\n          onExecute:\n            - sleep 3m</pre></section></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "g72yqxSuwWDhGCt07xKsPw", "topic": {"id": "g72yqxSuwWDhGCt07xKsPw", "title": "CreateReleaseBundle", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-c1a0258f-c725-741f-51e2-9bdc6f83c5e2\" data-permalink=\"creating-pipelines/pipelines-steps/createreleasebundle.html\" data-publication-date=\"1695975146\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680849892\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>CreateReleaseBundle</strong></span>is a native step that produces a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-42809980-59fc-afdb-2e89-190fa11e7fc3\" data-ft-xmap-link=\"intercept\">Release Bundle</a>for distribution to an <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-527c94b7-c7cd-4a1e-592f-35f17ae5b712\" data-ft-xmap-link=\"intercept\">Artifactory Edge Node</a>.The step can be used to create a signed or unsigned release bundle. When the <code class=\"code\">sign</code> tag is set as <code class=\"code\">true</code> in your yaml, this step saves artifact information to support signed pipelines.<span class=\"linktextprovider\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_N651686d33c0ec\" style=\"display:none !important;\">Release Bundle Repositories</span><span class=\"linktextprovider\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_N651686d33ce2b\" style=\"display:none !important;\">JFrog Artifactory Edge</span></p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for DockerBuild native step is as follows:</p><p><span class=\"bold\"><strong>CreateReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:    &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: CreateReleaseBundle\n        configuration:\n          #inherits all the tags from bash\n          releaseBundleName:        &lt;string&gt;\n          releaseBundleVersion:     &lt;string&gt;\n          dryRun:                   &lt;boolean&gt;   # default true\n          sign:                     &lt;boolean&gt;   # default false\n          description:              &lt;string&gt;    # optional\n          failOnValidate:           &lt;boolean&gt;   # optional (Signed Pipelines must be enabled)\n          releaseNotes:                         # optional\n            content:                &lt;string&gt;    # \"markdown|asciidoc|plain_text\"\n            syntax:                 &lt;string&gt;    # required in releaseNotes\n \n          inputResources:\n            - name:                 &lt;BuildInfo resource&gt;  # one or more BuildInfo, or\n            - name:                 &lt;Aql resource&gt;        # one Aql\n          outputResources:\n            - name:                 &lt;ReleaseBundle resource&gt;\n \n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">CreateReleaseBundle </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"width: 83.9243%;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify either a named <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource(s) <span class=\"underline\">or</span> an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/GeWo4oOocYs0_yCgpqlCnw\" title=\"Aql\" data-ft-internal-link=\"intercept\">Aql</a> resource. CreateReleaseBundle step does not accept other input resources.</p><p>If BuildInfo <code class=\"code\">inputResources</code> are provided, the query for the release bundle is constructed using the <code class=\"code\">buildName</code>, <code class=\"code\">buildNumber</code>, and <code class=\"code\">targetRepo</code> of each BuildInfo input.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a>resource.</p><p>The <code class=\"code\">name</code>, <code class=\"code\">version</code>, and <code class=\"code\">isSigned</code> settings in the output ReleaseBundle are updated to the step's <code class=\"code\">releaseBundleName</code>, <code class=\"code\">releaseBundleVersion</code>, and <code class=\"code\">sign</code> values respectively (or any environment variable values that replaced environment variable placeholders for those values).</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">releaseBundleName</code></p></td><td class=\"td\"><p>An alphanumeric name for the release bundle.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">releaseBundleVersion</code></p></td><td class=\"td\"><p>Version string for the release bundle.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dryRun</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code> parse and validate only to test whether a release bundle version can be created.</p><p>Default is true.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">sign</code></p></td><td class=\"td\"><p>Specifies whether the release bundle version will be signed as part of this step.</p><p>Default is false.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">GPG Signing Key Passphrase</h3><p>When configuring <code class=\"code\">sign=true</code>, and when your Distribution release bundle <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-da8b4d63-cc79-dc15-1e9a-da808a0836f0\" data-ft-xmap-link=\"intercept\">GPG signing key</a>is passphrase protected, remember to provide the GPG Signing Key Passphrase when creating/updating your <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/jpMSqrZc~dy_aOgM9k7ezw\" title=\"Distribution Integration\" data-ft-internal-link=\"intercept\"> Distribution Integration</a>.<span class=\"linktextprovider\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_N651686d33e01b\" style=\"display:none !important;\">GPG Signing</span></p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">description</code></p></td><td class=\"td\"><p>Description of the release bundle.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">releaseNotes</code></p></td><td class=\"td\"><p>Describes the release notes for the release bundle version.</p><p><code class=\"code\">syntax</code> specifies the format of release notes: <code class=\"code\">plain_text</code>, <code class=\"code\">markdown</code>, or <code class=\"code\">asciidoc</code>. Default is <code class=\"code\">plain_text</code>.</p><p><code class=\"code\">content</code> is the release notes string in the specified syntax format. Use the <code class=\"code\">|</code> character to denote a string preserving newlines.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnValidate</code></p></td><td class=\"td\"><p>Fail the step if one of the signatures of the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> input resource artifacts cannot be verified.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional ( <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/FSpeRSIsSzq_~LyEEREqew\" title=\"Signed Pipelines\" data-ft-internal-link=\"intercept\">Signed Pipelines</a> must be enabled)</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p><div class=\"note\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_note-idm73354438522266\"><h3 class=\"title\">Note</h3><p><code class=\"code\">onExecute</code>,&nbsp;<code class=\"code\">onStart</code>,&nbsp;<code class=\"code\">onSuccess</code>,&nbsp;<code class=\"code\">onFailure</code>, and&nbsp;<code class=\"code\">onComplete</code>&nbsp;are reserved keywords. Using these keywords in any other context in your execution scripts can cause unexpected behavior.</p></div></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show which settings to configure for a few different release bundles.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-UnsignedReleaseBundleCreatedusingBuildInfoResource\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Unsigned Release Bundle Created using BuildInfo Resource</h6></div></div></div><p>A simple, unsigned release bundle created using a BuildInfo resource. In this case, the release bundle version will be the run number and will have no description or release notes.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/jpMSqrZc~dy_aOgM9k7ezw\" title=\"Distribution Integration\" data-ft-internal-link=\"intercept\">Distribution Integration</a>.</p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/CreateSignDistributeReleaseBundle\" rel=\"noopener\" target=\"_blank\">this repository</a>in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li></ul></div><p><span class=\"bold\"><strong>CreateReleaseBundle</strong></span></p><pre class=\"programlisting\">template: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  # Build info of first build to bundle\n  - name: gosvc_promoted_build_info\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.myArtifactoryIntegration }}\n      buildName: svc_build\n      buildNumber: 1\n\n  # Build info of second build to bundle\n  - name: appl_promoted_build_info\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.demoArtifactoryIntegration }}\n      buildName: backend_build\n      buildNumber: 1\n\n  # Release bundle\n  - name: release_bundle\n    type: ReleaseBundle\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      name: demo_rb\n      version: v1.0.0\n\n  # Signed version of the same release bundle\n  - name: signed_bundle\n    type: ReleaseBundle\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      name: demo_rb\n      version: v1.0.0\n\n  # Distribution rules\n  - name: distribution_rules\n    type: DistributionRule\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      serviceName: \"*\"\n      siteName: \"*\"\n      cityName: \"*\"\n      countryCodes:\n        - \"CN\"\n        - \"GB\"\n\npipelines:\n  - name: demo_release_mgmt\n    steps:\n      - name: bundle\n        type: CreateReleaseBundle\n        configuration:\n          releaseBundleName: demo_rb\n          releaseBundleVersion: v1.0.${run_number}\n          dryRun: false\n          sign: false\n          description: \"some random test description\"\n          inputResources:\n            - name: gosvc_promoted_build_info\n              trigger: true\n            - name: appl_promoted_build_info\n              trigger: true\n          outputResources:\n            - name: release_bundle\n          releaseNotes:\n            syntax: markdown\n            content: |\n              ## Heading\n                * Bullet\n                * Points\n            \n      - name: sign\n        type: SignReleaseBundle\n        configuration:\n          inputResources:\n            - name: release_bundle\n          outputResources:\n            - name: signed_bundle\n\n      - name: distribute\n        type: DistributeReleaseBundle\n        configuration:\n          dryRun: false\n          inputResources:\n            - name: signed_bundle\n            - name: distribution_rules</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-CreateandSignReleaseBundle\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Create and Sign Release Bundle</h6></div></div></div><p>Create and immediately sign a release bundle, with a description and release notes added to the release bundle.</p><p><span class=\"bold\"><strong>CreateReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: createReleaseBundlePipeline\n    steps:\n      - name: createReleaseBundleStep\n        type: CreateReleaseBundle\n        configuration:\n          releaseBundleName: myReleaseBundle\n          releaseBundleVersion: \"${run_number}\"\n          dryRun: false\n          sign: true\n          description: \"My release bundle\"\n          releaseNotes:\n            syntax: plain_text\n            content: \"Release of ${run_number} by ${step_name}\"\n          inputResources:\n            - name: myBuildInfo\n          outputResources:\n            - name: myReleaseBundle\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-TriggeraDryRun\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Trigger a Dry Run</h6></div></div></div><p>Trigger a dry run of the release bundle creation. No release bundle will be created.</p><p><span class=\"bold\"><strong>CreateReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: createReleaseBundlePipeline\n    steps:\n      - name: createReleaseBundleStep\n        type: CreateReleaseBundle\n        configuration:\n          releaseBundleName: myReleaseBundle\n          releaseBundleVersion: \"${run_number}\"\n          dryRun: true\n          inputResources:\n            - name: myBuildInfo\n          outputResources:\n            - name: myReleaseBundle\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-decc6ab6-1e13-2b88-6bde-be77c0430957_id_CreateReleaseBundle-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>CreateReleaseBundle</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (configure cli with the integration in the input resource)</p></li><li class=\"listitem\"><p>jfrog rt curl (get the Artifactory service_id)</p></li><li class=\"listitem\"><p>validate_artifact (use the signed pipelines feature to verify the incoming BuildInfo)</p></li><li class=\"listitem\"><p>Create the release bundle creation payload (the JSON object that will be in the request to Distribution)</p></li><li class=\"listitem\"><p>curl (send the release bundle creation payload to Distribution)</p></li><li class=\"listitem\"><p>write_output (update the output ReleaseBundle resource)</p></li><li class=\"listitem\"><p>save_artifact_info (if the bundle was signed, save the data for use with signed pipelines)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "HBjljbu1fRcvWeueYSjRGA", "topic": {"id": "HBjljbu1fRcvWeueYSjRGA", "title": "DistributeReleaseBundle", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-ba66c7fc-4fad-f258-1e51-6f906c63e1b3\" data-permalink=\"creating-pipelines/pipelines-steps/distributereleasebundle.html\" data-publication-date=\"1695975146\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680849932\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>DistributeReleaseBundle </strong></span>native step triggers the distribution of <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-8e41134e-8d68-1257-8b5e-1d11798224e2\" data-ft-xmap-link=\"intercept\">Release Bundles</a> to an <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-527c94b7-c7cd-4a1e-592f-35f17ae5b712\" data-ft-xmap-link=\"intercept\">Artifactory Edge Node</a>. This step requires a signed release bundle and one or more distribution rules to successfully execute.<span class=\"linktextprovider\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_N651686d3415d8\" style=\"display:none !important;\">Distributing Release Bundles</span><span class=\"linktextprovider\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_N651686d3479d8\" style=\"display:none !important;\">JFrog Artifactory Edge</span></p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for DistributeReleaseBundle native step is as follows:</p><p><span class=\"bold\"><strong>DistributeReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:    &lt;string&gt;\n    steps:\n      - name: my_distribute\n        type: DistributeReleaseBundle\n        configuration:\n                #inherits all the tags from bash; \n          dryRun: &lt;boolean&gt;                # optional\n          inputResources:\n            - name: my_releaseBundle      # one ReleaseBundle is required\n              trigger: false   \n            - name: my_distributionRule   # one DistributionRule is required\n              trigger: false    # default true\n          outputResources:\n            - name: my_releaseBundleOutput # one ReleaseBundle is optional\n \n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">DistributeReleaseBundle </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a> resource and one <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/W7XcJhABW0Q9mLPAcaYnaQ\" title=\"DistributionRule\" data-ft-internal-link=\"intercept\">DistributionRule</a> resource.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>May specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a> resource to be updated with the <code class=\"code\">name</code> and <code class=\"code\">version</code> of the input ReleaseBundle.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"width: 96.1898%;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">dryRun</code></p></td><td class=\"td\"><p>Controls whether this should be a dry run to test if the release bundle can distribute to the Edge nodes matching the distribution rule.</p><p>The default is true.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a DistributeReleaseBundle step to distribute or for a dry run.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-DistributeInputReleaseBundleEdgeNode\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Distribute Input Release Bundle Edge Node</h6></div></div></div><p>Distributes the input release bundle to the edge nodes defined in the distribution rule.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/jpMSqrZc~dy_aOgM9k7ezw\" title=\"Distribution Integration\" data-ft-internal-link=\"intercept\">Distribution Integration</a>.</p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/CreateSignDistributeReleaseBundle\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li></ul></div><p><span class=\"bold\"><strong>DistributeReleaseBundle</strong></span></p><pre class=\"programlisting\">template: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  # Build info of first build to bundle\n  - name: gosvc_promoted_build_info\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.myArtifactoryIntegration }}\n      buildName: svc_build\n      buildNumber: 1\n\n  # Build info of second build to bundle\n  - name: appl_promoted_build_info\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.demoArtifactoryIntegration }}\n      buildName: backend_build\n      buildNumber: 1\n\n  # Release bundle\n  - name: release_bundle\n    type: ReleaseBundle\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      name: demo_rb\n      version: v1.0.0\n\n  # Signed version of the same release bundle\n  - name: signed_bundle\n    type: ReleaseBundle\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      name: demo_rb\n      version: v1.0.0\n\n  # Distribution rules\n  - name: distribution_rules\n    type: DistributionRule\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      serviceName: \"*\"\n      siteName: \"*\"\n      cityName: \"*\"\n      countryCodes:\n        - \"CN\"\n        - \"GB\"\n\npipelines:\n  - name: demo_release_mgmt\n    steps:\n      - name: bundle\n        type: CreateReleaseBundle\n        configuration:\n          releaseBundleName: demo_rb\n          releaseBundleVersion: v1.0.${run_number}\n          dryRun: false\n          sign: false\n          description: \"some random test description\"\n          inputResources:\n            - name: gosvc_promoted_build_info\n              trigger: true\n            - name: appl_promoted_build_info\n              trigger: true\n          outputResources:\n            - name: release_bundle\n          releaseNotes:\n            syntax: markdown\n            content: |\n              ## Heading\n                * Bullet\n                * Points\n            \n      - name: sign\n        type: SignReleaseBundle\n        configuration:\n          inputResources:\n            - name: release_bundle\n          outputResources:\n            - name: signed_bundle\n\n      - name: distribute\n        type: DistributeReleaseBundle\n        configuration:\n          dryRun: false\n          inputResources:\n            - name: signed_bundle\n            - name: distribution_rules</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-TriggeraDryRun\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Trigger a Dry Run</h6></div></div></div><p>Triggers a dry run of the distribution.</p><p><span class=\"bold\"><strong>DistributeReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: distributeReleaseBundlePipeline\n    steps:\n      - name: distributeReleaseBundleDryRun\n        type: DistributeReleaseBundle\n        configuration:\n          dryRun: true\n          inputResources:\n            - name: myReleaseBundle\n            - name: myInputDistributionRule\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-TriggersDistributionandUpdatesOutputResource\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Triggers Distribution and Updates Output Resource</h6></div></div></div><p>Triggers a distribution and updates the output resource with the name and version of the input.</p><p><span class=\"bold\"><strong>DistributeReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: distributeReleaseBundlePipeline\n    steps:\n      - name: distributeReleaseBundleDryRun\n        type: DistributeReleaseBundle\n        configuration:\n          dryRun: false\n          inputResources:\n            - name: myReleaseBundle\n            - name: myInputDistributionRule\n          outputResources:\n            - name: myOutputReleaseBundle\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-SameStepforDryRunsandtoDistribute\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Same Step for Dry Runs and to Distribute</h6></div></div></div><p>In this example, the same step is used for both dry runs and to distribute the release bundle to Edge Nodes. The dry_run variable may be set in the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PfQ_oIQbrM7fhWxR1Hmstw?section=UUID-7c340617-0c30-586e-53db-2df9d4b3d3a2_id_PipelinesEnvironmentVariables-Pipelines\" title=\"Pipelines\" data-ft-internal-link=\"intercept\"> pipeline configuration section</a> or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PfQ_oIQbrM7fhWxR1Hmstw?section=UUID-7c340617-0c30-586e-53db-2df9d4b3d3a2_id_PipelinesEnvironmentVariables-Steps\" title=\"Steps\" data-ft-internal-link=\"intercept\"> step configuration</a> or added as a run variable by an earlier step in the pipeline using  add_run_variable.</p><p><span class=\"bold\"><strong>DistributeReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: distributeReleaseBundlePipeline\n    steps:\n      - name: distributeReleaseBundleStep\n        type: DistributeReleaseBundle\n        configuration:\n          dryRun: ${dry_run}\n          inputResources:\n            - name: myReleaseBundle\n            - name: myInputDistributionRule\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-efdf54c6-2bb1-0802-1fdf-62e775b93451_id_DistributeReleaseBundle-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>DistributeReleaseBundle</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>Create the distribution payload (the JSON object that will be in the request to Distribution)</p></li><li class=\"listitem\"><p>curl $distributionUrl/api/v1/distribution/$releaseBundleName/$releaseBundleVersion (send the distribution or dry run payload to Distribution)</p></li><li class=\"listitem\"><p>curl $distributionUrl/api/v1/release_bundle/$releaseBundleName/$releaseBundleVersion/distribution/$trackerId (if not a dry run, using the tracker ID returned by Distribution, check if the distribution is complete)</p></li><li class=\"listitem\"><p>write_output (update the output ReleaseBundle resource)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "znLtBvACgqUupJjzA5Pcbg", "topic": {"id": "znLtBvACgqUupJjzA5Pcbg", "title": "DockerPush", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-49590041-1d76-1e9f-52ae-db0185b04c18\" data-permalink=\"creating-pipelines/pipelines-steps/dockerpush.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1693372047\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487\" lang=\"en\" xml:lang=\"en\"><p>The <code class=\"code\">DockerPush </code>native step pushes a Docker Image to a Docker registry.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>Currently, only Docker registries in Artifactory are supported.</p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CMyzVpgNkZRhMCAGBV3WUQ\" title=\"DockerBuild\" data-ft-internal-link=\"intercept\">DockerBuild</a> and DockerPush steps must be assigned to the same <code class=\"code\">affinityGroup</code> to share state. If they are not, the output of DockerBuild will not be available to DockerPush. For more information on <code class=\"code\">affinityGroup</code> see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/eJJdeVT9Cq2zK4TzJpEaOg?section=UUID-c9f2a58e-267d-94f7-b9df-1458c35267da_id_PipelinesSteps-configurationStepConfiguration\" title=\"Step Configuration\" data-ft-internal-link=\"intercept\">Pipelines Steps</a>.</p></li></ul></div></div><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Docker Build and Push Quickstart</h3><p>This <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JoZ0CmaGcZWJ31rZfoNkKQ\" title=\"Pipeline Example: Docker Build and Push\" data-ft-internal-link=\"intercept\">Docker Build and Push</a> quickstart demonstrates the definition of a pipeline that uses the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CMyzVpgNkZRhMCAGBV3WUQ\" title=\"DockerBuild\" data-ft-internal-link=\"intercept\">DockerBuild</a> and DockerPush native steps to build a single Docker Image, push it to Artifactory, and then publish the BuildInfo.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for DockerPush native step is as follows:</p><p><span class=\"bold\"><strong>DockerPush</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: DockerPush\n        configuration:\n          #inherits all the tags from bash\n          affinityGroup:        &lt;string&gt;\n          targetRepository:     &lt;string&gt;        #  may be required. Must be a local repository. Virtual repositories are not supported.\n          forceXrayScan:        &lt;boolean&gt;       # default false\n          failOnScan:           &lt;boolean&gt;       # default true\n          autoPublishBuildInfo: &lt;boolean&gt;       # default false\n\n          integrations:\n            - name:             &lt;artifactory integration&gt;  # required\n          inputSteps:\n            - name:             &lt;DockerBuild step&gt;         # required\n          outputResources:\n            - name:                 &lt;Image resource&gt;           # optional\n            - name:                 &lt;BuildInfo resource&gt;       # required if autoPublishBuildInfo is true\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: \n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">DockerPush</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">affinityGroup</code></p></td><td class=\"td\"><p>Must specify an affinity group string that is the same as specified in a prior <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CMyzVpgNkZRhMCAGBV3WUQ\" title=\"DockerBuild\" data-ft-internal-link=\"intercept\">DockerBuild</a> step.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a>.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputSteps</code></p></td><td class=\"td\"><p>Typically the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CMyzVpgNkZRhMCAGBV3WUQ\" title=\"DockerBuild\" data-ft-internal-link=\"intercept\">DockerBuild</a> step that built the image. The DockerBuild step must always be in the same affinity group, but other steps, such as Bash or PowerShell, are also permitted in the same affinity group, between DockerBuild and DockerPush.</p></td><td class=\"td\"><p>May be Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>May specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ptcL79OBsi81Y7VQxNO~cg\" title=\"Image\" data-ft-internal-link=\"intercept\">Image</a> resource. If one is specified, the <code class=\"code\">imageTag</code> property of that resource will be updated with the <code class=\"code\">dockerImageTag</code> of the preceding <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CMyzVpgNkZRhMCAGBV3WUQ\" title=\"DockerBuild\" data-ft-internal-link=\"intercept\">DockerBuild</a> step.</p><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource if <code class=\"code\">autoPublishBuildInfo</code> is set to <code class=\"code\">true</code>. If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> is set as an environment variable for the pipeline or the input <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CMyzVpgNkZRhMCAGBV3WUQ\" title=\"DockerBuild\" data-ft-internal-link=\"intercept\">DockerBuild</a> step, that name and/or number is used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code>and <code class=\"code\">buildNumber</code> are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number</code> respectively.</p></td><td class=\"td\"><p>Optional</p><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well as that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">targetRepository</code></p></td><td class=\"td\"><p>The name of the Docker repository in Artifactory. Required when using JFrog CLI v1 and not used when the pipeline is configured to use JFrog CLI v2.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Must be a local repository. Virtual repositories are not supported.</p></div></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When <code class=\"code\">true</code>, forces a scan of the pushed image by JFrog Xray.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, and when the Xray Policy Rule <a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\"> Fail Build</a> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, publishes build info with the Docker image.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a DockerPush step to push a Docker image.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-PushImagetoArtifactory\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Push Image to Artifactory</h6></div></div></div><p>Pushes the image created by the DockerBuild input step to Artifactory. Does not trigger a scan.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_N651686d34a69b\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li><li class=\"listitem\"><p>For a full tutorial, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JoZ0CmaGcZWJ31rZfoNkKQ\" title=\"Pipeline Example: Docker Build and Push\" data-ft-internal-link=\"intercept\">Pipeline Example: Docker Build and Push</a>.</p></li></ul></div><p><span class=\"bold\"><strong>DockerPush</strong></span></p><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  - name: app_repo1\n    type: GitRepo\n    configuration:\n      gitProvider: {{ .Values.gitIntegration }}                      \n      path: {{ .Values.gitRepositoryPath }}    \n      branches:\n        include: master\n\n  - name: app_buildinfo1\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\n  - name: app_promoted_buildinfo1\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\npipelines:\n  - name: app_dev_pipeline\n    steps:\n      - name: app_build\n        type: DockerBuild\n        configuration:\n          affinityGroup: docker_group\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: {{ .Values.artifactoryUrl }}/{{ .Values.sourceRepository }}/{{ .Values.imageName }}  \n          dockerImageTag: ${run_number}\n          inputResources:\n            - name: app_repo\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}         \n            \n      - name: app_push\n        type: DockerPush\n        configuration:\n          affinityGroup: docker_group\n          targetRepository: {{ .Values.sourceRepository }}\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}                            \n          inputSteps:\n            - name: app_build\n\n      - name: publish_app_build\n        type: PublishBuildInfo\n        configuration:\n          affinityGroup: docker_group\n          inputSteps:\n            - name: app_push\n          outputResources:\n            - name: app_buildinfo\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-AffinityGroup\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Affinity Group</h6></div></div></div><p>This extends one of the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CMyzVpgNkZRhMCAGBV3WUQ?section=UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-Examples\" title=\"Examples\" data-ft-internal-link=\"intercept\">DockerBuild examples</a>, pushing that image to Artifactory. Note that an affinity group has been specified in both steps.</p><p><span class=\"bold\"><strong>DockerPush</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: demo_pipeline\n    steps:\n      - name: bld_image\n        type: DockerBuild\n        configuration:\n          affinityGroup: dockerGroup\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: docker.artprod.mycompany.com/gosvc   # replace with your fully qualified Docker registry/image name\n          dockerImageTag: ${run_number}\n          dockerOptions: --build-arg build_number_env_variable=${run_number}          \n          inputResources:\n            - name: gosvc_app\n          integrations:\n            - name: MyArtifactory\n\n      - name: dockerPushStep\n        type: DockerPush\n        configuration:\n          affinityGroup: dockerGroup\n          targetRepository: dockerRepo\n          inputSteps:\n            - name: bld_image\n          outputResources:\n            - name: outputBuildInfo\n          integrations:\n            - name: MyArtifactory\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-PublishBuildInfoTriggerXrayScanUpdateOutputImageResource\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish Build Info, Trigger Xray Scan, Update Output Image Resource</h6></div></div></div><p>In this, publishing build info, triggering an Xray scan, and updating an output Image resource has been added to the previous example.</p><p><span class=\"bold\"><strong>DockerPush</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: demo_pipeline\n    steps:\n      - name: bld_image\n        type: DockerBuild\n        configuration:\n          affinityGroup: dockerGroup\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: docker.artprod.mycompany.com/gosvc   # replace with your fully qualified Docker registry/image name\n          dockerImageTag: ${run_number}\n          dockerOptions: --build-arg build_number_env_variable=${run_number}          \n          inputResources:\n            - name: gosvc_app\n          integrations:\n            - name: MyArtifactory\n\n      - name: dockerPushStep\n        type: DockerPush\n        configuration:\n          affinityGroup: dockerGroup\n          targetRepository: dockerRepo\n          autoPublishBuildInfo: true\n          forceXrayScan: true\n          inputSteps:\n            - name: bld_image\n          outputResources:\n            - name: outputBuildInfo\n            - name: outputImage\n          integrations:\n            - name: MyArtifactory\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-85b9acae-42db-b3b4-e2a7-d0c84561e487_id_DockerPush-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>DockerPush</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt use (to set the current default Artifactory configuration to the one set up for the integration in <code class=\"code\">integrations</code>)</p></li><li class=\"listitem\"><p>restore_run_files (copy the build information saved from the DockerBuild step)</p></li><li class=\"listitem\"><p>jfrog rt docker-push (push the image to Artifactory)</p></li><li class=\"listitem\"><p>jfrog rt build-publish (if <code class=\"code\">autoPublishBuildInfo</code> is true, publish the build info)</p></li><li class=\"listitem\"><p>write_output (if <code class=\"code\">autoPublishBuildInfo</code> is true, update the BuildInfo buildName and buildNumber)</p></li><li class=\"listitem\"><p>write_output (if there is an output Image resource, update the Image imageTag)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (if forceXrayScan is true, trigger a scan)</p></li><li class=\"listitem\"><p>add_run_files (save/update the build information in the run state for later publish steps)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "tCsxWffAKuayPshQuldt_A", "topic": {"id": "tCsxWffAKuayPshQuldt_A", "title": "DockerBuild", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-f4c4848e-7b3d-7474-152c-9dd63ae146a6\" data-permalink=\"creating-pipelines/pipelines-steps/dockerbuild.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1684300388\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>DockerBuild</strong></span> native step performs a build to produce a Docker image from a Dockerfile in a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> source repository resource.</p><p>In the step configuration, you must provide the name ( <code class=\"code\">dockerFileName</code> ) and directory ( <code class=\"code\">dockerFileLocation</code> ) of the <a class=\"link ft-external-link\" href=\"https://docs.docker.com/engine/reference/builder/\" rel=\"noopener\" target=\"_blank\">Dockerfile</a> that contains the command to be processed by a <code class=\"code\">docker build</code> command, as well as the name ( <code class=\"code\">dockerImageName</code> ) and tag ( <code class=\"code\">dockerImageTag</code> ) of the resulting image. The image is built on the build node, and information about that image is stored in the run state.</p><p>To build a Docker image that relies on a private base image:</p><div class=\"procedure\"><ol class=\"procedure\" type=\"1\"><li class=\"step\"><p>Define the base image as an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ptcL79OBsi81Y7VQxNO~cg\" title=\"Image\" data-ft-internal-link=\"intercept\">Image</a> resource, with <code class=\"code\">autoPull</code> set to <code class=\"code\">true</code>.</p></li><li class=\"step\"><p>Specify the Image resource as one of the <code class=\"code\">inputResources</code> of the DockerBuild step.</p></li></ol></div><p>To include artifacts in the Docker image that are not part of the GitRepo source repository:</p><div class=\"procedure\"><ol class=\"procedure\" type=\"1\"><li class=\"step\"><p>Define a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource that specifies the files to include from Artifactory.</p></li><li class=\"step\"><p>Specify the FileSpec resource as one of the <code class=\"code\">inputResources</code>of the DockerBuild step.</p></li></ol></div><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Proper usage of DockerBuild step</h3><p>DockerBuild and <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CBbQUEleXOAdEK~sv3QSIg\" title=\"DockerPush\" data-ft-internal-link=\"intercept\">DockerPush</a> steps must be assigned to the same <code class=\"code\">affinityGroup</code> to share state. If this is not done, the output of DockerBuild will not be available for DockerPush. For more information on using <code class=\"code\">affinityGroup</code>, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/7NKc4hCOH8rwYJZOVYMMeQ\" title=\"Running Multiple Steps on the Same Build Node\" data-ft-internal-link=\"intercept\">Running multiple steps on the same build node</a>.</p></div><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Docker Build and Push Quickstart</h3><p>This <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JoZ0CmaGcZWJ31rZfoNkKQ\" title=\"Pipeline Example: Docker Build and Push\" data-ft-internal-link=\"intercept\">Docker Build and Push</a> quickstart demonstrates the definition of a pipeline that uses the DockerBuild and <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CBbQUEleXOAdEK~sv3QSIg\" title=\"DockerPush\" data-ft-internal-link=\"intercept\">DockerPush</a> native steps to build a single Docker Image, push it to Artifactory, and then publish the BuildInfo.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for DockerBuild native step is as follows:</p><p><span class=\"bold\"><strong>DockerBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: DockerBuild\n        configuration:\n          #inherits all the tags from bash\n          affinityGroup:       &lt;string&gt;\n          dockerFileLocation:  &lt;string&gt;\n          dockerFileName:      &lt;string&gt;\n          dockerImageName:     &lt;string&gt;\n          dockerImageTag:      &lt;string&gt;\n          dockerOptions:       &lt;string&gt;\n\n          integrations:\n            - name:            &lt;artifactory or docker registry integration&gt;  # required\n\n          inputResources:\n            - name:             &lt;GitRepo resource&gt;        # required, git repository containing your Dockerfile\n            - name:             &lt;Image resource&gt;          # optional base image\n            - name:             &lt;FileSpec resource&gt;       # optional\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">DockerBuild</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"width: 80.8511%;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">affinityGroup</code></p></td><td class=\"td\"><p>Must specify an affinity group string that is the same as specified in a subsequent <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CBbQUEleXOAdEK~sv3QSIg\" title=\"DockerPush\" data-ft-internal-link=\"intercept\">DockerPush</a> step.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> resource (that contains the Dockerfile)</p></li></ul></div><p>Optionally, you may also specify:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>One or more <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ptcL79OBsi81Y7VQxNO~cg\" title=\"Image\" data-ft-internal-link=\"intercept\">Image</a> resources to pull base images used in the build or to trigger this build.</p></li><li class=\"listitem\"><p>One or more <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resources that specify what files to include in the build context. These files are automatically copied to <code class=\"code\">dockerFileLocation</code>.</p></li></ul></div></td><td class=\"td\"><p>Required/Optional</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">dockerFileLocation</code></p></td><td class=\"td\"><p>Directory containing the Dockerfile, which is the file that has Docker build configuration. This file is also used as the context for the Docker build. The path provided should be relative to the root of the input GitRepo repository. If no location is provided, the default is the root of the GitRepo repository.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dockerFileName</code></p></td><td class=\"td\"><p>Name of the Dockerfile.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dockerImageName</code></p></td><td class=\"td\"><p>The name of the Docker image to create. This can be set using environment variables or triggering a run using parameters.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dockerImageTag</code></p></td><td class=\"td\"><p>The tag for the Docker image to create. This can be set using environment variables or triggering a run using parameters.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dockerOptions</code></p></td><td class=\"td\"><p>Additional options for the <a class=\"link ft-external-link\" href=\"https://docs.docker.com/engine/reference/commandline/build/\" rel=\"noopener\" target=\"_blank\">docker build</a> command.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_section-idm73368600673626\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples use a GoLang Git repository represented by a GitRepo resource named <code class=\"code\">gosvc_app</code> to create a Docker image that is published to Artifactory. They assume that an Artifactory integration named <code class=\"code\">MyArtifactory</code> has been created, and that the Artifactory instance has a Docker repository mapped to <code class=\"code\">docker.artprod.company</code>.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>These examples require an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_N651686d34c7ea\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for a similar example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/blob/main/DockerBuild/example1.yml\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li><li class=\"listitem\"><p>For a full tutorial, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JoZ0CmaGcZWJ31rZfoNkKQ\" title=\"Pipeline Example: Docker Build and Push\" data-ft-internal-link=\"intercept\">Pipeline Example: Docker Build and Push</a>.</p></li></ul></div><p>The following resources declarations support these examples. Not all of these resources are used in all examples.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-Resources\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Resources</h6></div></div></div><pre class=\"programlisting\">resources:\n# Application source repository\n  - name: gosvc_app\n    type: GitRepo\n    configuration:\n      gitProvider: myGithub\n      path: myuser/myrepo                   # replace with your repository name\n      branches:\n        include: master\n\n# Docker image in an Artifactory repository\n  - name: base_image\n    type: Image\n    configuration:\n      registry: myArtifactory\n      sourceRepository: docker-local        # replace with your repository name\n      imageName: docker.artprod.mycompany.com/baseimage\n      imageTag: latest\n      autoPull: true\n\n# Files in an Artifactory repository\n  - name: icon_files\n    type: FileSpec\n    configuration:\n      sourceArtifactory: myArtifactory\n      pattern: my-local-repo/all-my-images/\n      target: icons/</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-BuildaDockerimagefromasourcerepository\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Build a Docker image from a source repository</h6></div></div></div><p>This example builds a Docker image to a Docker registry in Artifactory. The tag for the image is set to the pipeline's run number.</p><pre class=\"programlisting\">pipelines:\n  - name: demo_pipeline\n    steps:\n      - name: bld_image\n        type: DockerBuild\n        configuration:\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: docker.artprod.mycompany.com/gosvc    # replace with your fully qualified Docker registry/image name\n          dockerImageTag: ${run_number}\n          inputResources:\n            - name: gosvc_app\n          integrations:\n            - name: MyArtifactory</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-BuildaDockerimagewithdockerOptions\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Build a Docker image with dockerOptions</h6></div></div></div><p>This example demonstrates use of the <code class=\"code\">dockerOptions</code> tag to set the <code class=\"code\">build-arg</code> option for the Docker command. An environment variable named <code class=\"code\">build_number_env_variable</code> is dynamically set to the pipeline's run number. The example assumes the environment variable is used in the Dockerfile commands.</p><pre class=\"programlisting\">pipelines:\n  - name: demo_pipeline\n    steps:\n      - name: bld_image\n        type: DockerBuild\n        configuration:\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: docker.artprod.mycompany.com/gosvc   # replace with your fully qualified Docker registry/image name\n          dockerImageTag: ${run_number}\n          dockerOptions: --build-arg build_number_env_variable=${run_number}           \n          inputResources:\n            - name: gosvc_app\n          integrations:\n            - name: MyArtifactory</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-BuildaDockerimagewithaprivatebaseimage\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Build a Docker image with a private base image</h6></div></div></div><p>This example builds a Docker image that relies on a private base image stored in an Artifactory Docker repository.</p><pre class=\"programlisting\">pipelines:\n  - name: demo_pipeline\n    steps:\n      - name: bld_image\n        type: DockerBuild\n        configuration:\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: docker.artprod.mycompany.com/gosvc       # replace with your fully qualified Docker registry/image name\n          dockerImageTag: ${run_number}\n          inputResources:\n            - name: gosvc_app\n            - name: base_image\n          integrations:\n            - name: MyArtifactory</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-BuildaDockerimagewithfilesoutsidethecurrentpath\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Build a Docker image with files outside the current path</h6></div></div></div><p>This example demonstrates building a Docker image that includes files outside of the current path. It pulls icon files stored in an Artifactory repository for integration art named <code class=\"code\">my-local-repo</code>. It is assumed that the Dockerfile has a command that will include the files in <code class=\"code\">/icons</code> into the image.</p><pre class=\"programlisting\">pipelines:\n  - name: demo_pipeline\n    steps:\n      - name: bld_image\n        type: DockerBuild\n        configuration:\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: docker.artprod.mycompany.com/gosvc         # replace with your fully qualified Docker registry/image name\n          dockerImageTag: ${run_number}\n          inputResources:\n            - name: gosvc_app\n            - name: icon_files\n          integrations:\n            - name: MyArtifactory</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-764792c6-e2fd-be5c-e63c-b71ff1b90b18_id_DockerBuild-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>DockerBuild</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>cp (if there is a FileSpec input, copy those files to the root of the cloned GitRepo input)</p></li><li class=\"listitem\"><p>docker build</p></li><li class=\"listitem\"><p>add_run_variables (add several variables that are later used when pushing the Docker image or publishing build info)</p></li><li class=\"listitem\"><p>jfrog rt build-collect-env (collect environment information to be later published as part of build info)</p></li><li class=\"listitem\"><p>add_run_files (save information collected for build info)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "r83buLYZReePNYSo4E3dtw", "topic": {"id": "r83buLYZReePNYSo4E3dtw", "title": "GoBuild", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-aa0544b0-18f2-7ba1-3a87-f6af108ce114\" data-permalink=\"creating-pipelines/pipelines-steps/gobuild.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1695715967\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>GoBuild </strong></span>native step performs a build from Go (GoLang) source.</p><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The <code class=\"code\">GoBuild</code> native step uses Go runtime image by default. If runtime image of any other type is configured at pipeline-level for this native step, it will be ignored.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for GoBuild native step is as follows:</p><p><span class=\"bold\"><strong>GoBuild </strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: GoBuild\n        configuration:\n          #inherits all the tags from bash\n          sourceLocation:   &lt;string&gt;  # optional\n          outputLocation:   &lt;string&gt;  # optional\n          outputFile:       &lt;string&gt;  # optional\n          resolverRepo:     &lt;string&gt;  # optional\n          repository:       &lt;string&gt;  # optional\n          goCommand:        &lt;string&gt;  # optional\n\n          integrations:\n            - name:         &lt;artifactory integration&gt;  # may be required\n          inputResources:\n            - name:         &lt;GitRepo resource&gt;         # required\n            - name:         &lt;FileSpec resource&gt;        # optional\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete:                                  #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">GoBuild </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Specifies an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> where modules will be published. If a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource is specified in <code class=\"code\">inputResources</code> then this is optional. Otherwise, it is required.</p></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> resource that has Go source files in <code class=\"code\">sourceLocation</code>.</p><p>Also may specify an optional <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource that specifies what files to copy to <code class=\"code\">sourceLocation</code>to build.</p></td><td class=\"td\"><p>Required</p><p>Optional</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">sourceLocation</code></p></td><td class=\"td\"><p>Location where the Go source files are available, relative to the root of the GitRepo repository. If not specified, the default is the root of the GitRepo repository.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputLocation</code></p></td><td class=\"td\"><p>Location where the built Go modules should be published.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputFile</code></p></td><td class=\"td\"><p>File that has the output of the Go command. The default filename is the name of the step.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">resolverRepo</code></p></td><td class=\"td\"><p>Name of the Artifactory repository to be used to resolve dependencies.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">repository</code></p></td><td class=\"td\"><p>Alternative to <code class=\"code\">resolverRepo</code>. Only one of these options may be specified.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">goCommand</code></p></td><td class=\"td\"><p>Specifies a command line string of options to use with the Go client.</p><p><span class=\"bold\"><strong>Default</strong></span>: <code class=\"code\">build -o $outputLocation/$outputFile</code></p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a GoBuild step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-FullPipelineExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Full Pipeline Example</h6></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_N651686d34e146\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/GoBuild\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li><li class=\"listitem\"><p>For a full tutorial, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/2lw3~AJON5ghZORY0eS1Mw\" title=\"Pipeline Example: Go Build\" data-ft-internal-link=\"intercept\">Pipeline Example: Go Build</a>.</p></li></ul></div><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file. For more information, see the 'Pipeline Example: Go Build' quickstart.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  # Sample Go app in a GitRepo\n  - name: go_repo\n    type: GitRepo\n    configuration:\n      path: {{ .Values.repoPath }}\n      branches:\n        include: main\n      gitProvider: {{ .Values.gitProvider }}\n\n  # Build info for the published Go app\n  - name: go_buildinfo\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactory }}\n\n\npipelines:\n  - name: go_build_pipeline_example\n    steps:\n      # Build the Go sample app from the GitRepo\n      - name: build_go\n        type: GoBuild\n        configuration:\n          sourceLocation: .\n          resolverRepo: go-virtual\n          noRegistry: true\n          inputResources:\n            - name: go_repo\n          integrations:\n            - name: {{ .Values.artifactory }}\n\n              # Publish the Go sample app binary to Artifactory\n      - name: publish_go_binary\n        type: GoPublishBinary\n        configuration:\n          inputSteps:\n            - name: build_go\n          targetRepository: go-local\n          integrations:\n            - name: {{ .Values.artifactory }}\n\n      # Publish the Go sample app build info\n      - name: publish_build\n        type: PublishBuildInfo\n        configuration:\n          inputSteps:\n            - name: publish_go_binary\n          outputResources:\n            - name: go_buildinfo</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-DefaultLocations\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Default Locations</h6></div></div></div><p>A GoBuild step using default locations.</p><p><span class=\"bold\"><strong>GoBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goBuildPipeline\n    steps:\n      - name: goBuildStep\n        type: GoBuild\n        configuration: \n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-FileSpecInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">FileSpec Input</h6></div></div></div><p>A GoBuild step with a FileSpec input providing files for the build that are not in the GitRepo and resolverRepo specifying an Artifactory repository to use when resolving dependencies.</p><p><span class=\"bold\"><strong>GoBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goBuildPipeline\n    steps:\n      - name: goBuildStep\n        type: GoBuild\n        configuration:\n          resolverRepo: repo\n          inputResources:\n            - name: gitRepoResource\n            - name: fileSpec\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-AlternativeSourceLocationinGitRepo\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Alternative Source Location in Git Repo</h6></div></div></div><p>A GoBuild step with an alternative source location in the GitRepo and an alternative Go command for the build.</p><p><span class=\"bold\"><strong>GoBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goBuildPipeline\n    steps:\n      - name: goBuildStep\n        type: GoBuild\n        configuration: \n          sourceLocation: \"app/go\"\n          goCommand: \"build -insecure -o output/outputFile\"\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>GoBuild</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (to configure the JFrog CLI with the Artifactory credentials in the input FileSpec if there is no input integration)</p></li><li class=\"listitem\"><p>jfrog rt use (to set the current default Artifactory configuration)</p></li><li class=\"listitem\"><p>cp (if there is an input FileSpec, copy the files to the root of the cloned GitRepo)</p></li><li class=\"listitem\"><p>jfrog rt go-config (configure the repository to resolve dependencies)</p></li><li class=\"listitem\"><p>jfrog rt go (build)</p></li><li class=\"listitem\"><p>add_run_variables (save information about this step for future steps)</p></li><li class=\"listitem\"><p>add_run_files (save the output and the build information in the run state for later publish steps)</p></li><li class=\"listitem\"><p>jfrog rt build-collect-env (collect environment variables)</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-f7257331-9b97-b545-d15d-1979f8887d44_id_GoBuild-RelatedTopics\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Related Topics</h5></div></div></div><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/2lw3~AJON5ghZORY0eS1Mw\" title=\"Pipeline Example: Go Build\" data-ft-internal-link=\"intercept\">Go Build Quickstart</a></p></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "vtRnuky32RIqcRA487n8tQ", "topic": {"id": "vtRnuky32RIqcRA487n8tQ", "title": "GoPublishBinary", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-082145e1-1900-a9d0-8425-9057a576c622\" data-permalink=\"creating-pipelines/pipelines-steps/gopublishbinary.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1695716024\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>GoPublishBinary </strong></span>native step publishes the GO (GoLang) binaries built in a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ahbSstb2sYifVdbqlJb6pA\" title=\"GoBuild\" data-ft-internal-link=\"intercept\">GoBuild</a> step to Artifactory.</p><div class=\"tip\" dir=\"ltr\"><h3 class=\"title\">Tip</h3><p>It is recommended, but not required, that the GoBuild and GoPublishBinary steps be in the same affinity group to optimize sharing files between the two steps.</p></div><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The <code class=\"code\">GoPublishBinary</code> native step uses Go runtime image by default. If runtime image of any other type is configured at pipeline-level for this native step, it will be ignored.</p></div><section class=\"section internal\" data-publication-date=\"1695975147\" data-time-created=\"1664354237\" data-time-modified=\"1675400394\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_UUID-b8032c31-2fb4-b1df-ae6a-f1b3693fdb16\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for GoPublishBinary native step is as follows:</p><p><span class=\"bold\"><strong>GoPublishBinary</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: GoPublishBinary\n        configuration:\n          #inherits all the tags from bash\n\n          forceXrayScan:                &lt;boolean&gt;  # optional\n          failOnScan:           &lt;boolean&gt;  # default true\n          autoPublishBuildInfo: &lt;boolean&gt;  # optional\n          targetRepository:     &lt;string&gt;   # required\n                  failOnValidate:       &lt;boolean&gt;  # optional (Signed Pipelines must be enabled)\n\n          integrations:\n            - name:         &lt;artifactory integration&gt;  # required if autoPublishBuildInfo is false\n          outputResources:\n            - name:         &lt;BuildInfo resource&gt;       # required if autoPublishBuildInfo is true\n          inputSteps:\n            - name:         &lt;GoBuild, Bash, or PowerShell step&gt; # required\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete:                                  #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" data-publication-date=\"1695975147\" data-time-created=\"1664354144\" data-time-modified=\"1675402528\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_UUID-a9032777-7c69-dfec-9a04-a7265dd63c9f\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_id_GoPublishBinary-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_id_GoPublishBinary-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">GoPublishBinary </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_id_GoPublishBinary-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Specifies an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a>. Required when <code class=\"code\">autoPublishBuildInfo</code>is set to false. Otherwise, the artifactory integration specified in the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource will be used.</p></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource when<code class=\"code\">autoPublishBuildInfo</code>is set to true.</p><p>If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> is set as an environment variable for the pipeline or the input <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ahbSstb2sYifVdbqlJb6pA\" title=\"GoBuild\" data-ft-internal-link=\"intercept\">GoBuild</a> step, that name and/or number is used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number </code>respectively.</p></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputSteps</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ahbSstb2sYifVdbqlJb6pA\" title=\"GoBuild\" data-ft-internal-link=\"intercept\">GoBuild</a>, <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>, or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When true, forces a scan of the pushed image by JFrog Xray.</p><p>Default is false.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to t<code class=\"code\">rue</code>, and when the Xray Policy Rule <a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\">Fail Build</a> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, publishes build info with the Docker image.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">targetRepository</code></p></td><td class=\"td\"><p>Repository in Artifactory where the module will be published.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnValidate</code></p></td><td class=\"td\"><p>Fail the step if signatures of build artifacts cannot be verified.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional (Signed Pipelines must be enabled)</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_id_GoPublishBinary-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" data-publication-date=\"1695975147\" data-time-created=\"1664354094\" data-time-modified=\"1675403700\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_UUID-79a81271-a7e3-cdbf-45f7-58cf3bc6c9a3\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a GoPublishBinary step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_id_GoPublishBinary-UploadtoArtifactory\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Upload to Artifactory</h6></div></div></div><p>Uploads the binary built by a GoBuild step to an Artifactory repository named go-local.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_N651686d34f96e\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li><li class=\"listitem\"><p>For more information about running this example, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/2lw3~AJON5ghZORY0eS1Mw\" title=\"Pipeline Example: Go Build\" data-ft-internal-link=\"intercept\">Pipeline Example: Go Build</a>.</p></li></ul></div><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file. For more information, see the 'Pipeline Example: Go Build' quickstart.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  # Sample Go app in a GitRepo\n  - name: go_repo\n    type: GitRepo\n    configuration:\n      path: {{ .Values.repoPath }}\n      branches:\n        include: main\n      gitProvider: {{ .Values.gitProvider }}\n\n  # Build info for the published Go app\n  - name: go_buildinfo\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactory }}\n\n\npipelines:\n  - name: go_build_pipeline_example\n    steps:\n      # Build the Go sample app from the GitRepo\n      - name: build_go\n        type: GoBuild\n        configuration:\n          sourceLocation: .\n          resolverRepo: go-virtual\n          noRegistry: true\n          inputResources:\n            - name: go_repo\n          integrations:\n            - name: {{ .Values.artifactory }}\n\n      # Publish the Go sample app binary to Artifactory\n      - name: publish_go_binary\n        type: GoPublishBinary\n        configuration:\n          inputSteps:\n            - name: build_go\n          targetRepository: go-local\n          integrations:\n            - name: {{ .Values.artifactory }}</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_id_GoPublishBinary-UploadBuildInfo\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Upload Build Info</h6></div></div></div><p>Uploads the binary built by a GoBuild step to an Artifactory repository named go-repo and uploads build info. This extends example 1 in the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ahbSstb2sYifVdbqlJb6pA\" title=\"GoBuild\" data-ft-internal-link=\"intercept\">GoBuild</a> documentation.</p><p><span class=\"bold\"><strong>GoPublishBinary</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goBuildPipeline\n    steps:\n      - name: goBuildStep\n        type: GoBuild\n        configuration:\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n      - name: goPublishBinaryStep\n        type: GoPublishBinary\n        configuration:\n          targetRepository: go-repo\n          autoPublishBuildInfo: true\n          inputSteps:\n            - name: goBuildStep\n          outputResources:\n            - name: outputBuildInfo\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_id_GoPublishBinary-PublishBuildInfoandTriggerXrayScan\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish Build Info and Trigger Xray Scan</h6></div></div></div><p>In this example, build info is published and an Xray scan triggered.</p><p><span class=\"bold\"><strong>GoPublishBinary</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goBuildPipeline\n    steps:\n      - name: goBuildStep\n        type: GoBuild\n        configuration:\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n      - name: goPublishBinaryStep\n        type: GoPublishBinary\n        configuration:\n          targetRepository: go-repo\n          autoPublishBuildInfo: true\n          forceXrayScan: true\n          inputSteps:\n            - name: goBuildStep\n          outputResources:\n            - name: outputBuildInfo\n</pre></section></section><section class=\"section internal\" data-publication-date=\"1695975147\" data-time-created=\"1664354070\" data-time-modified=\"1664354070\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_UUID-e2e5a2e2-11ea-948d-2e52-42835fe2fa2f\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>GoPublishBinary</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (if there is a BuildInfo output, configure the JFrog CLI with those credentials)</p></li><li class=\"listitem\"><p>jfrog rt use (specify the configured credentials to use)</p></li><li class=\"listitem\"><p>restore_run_files (copy the output and build info from the GoBuild step)</p></li><li class=\"listitem\"><p>jfrog rt upload (upload the binary)</p></li><li class=\"listitem\"><p>jfrog rt build-publish (if autoPublishBuildInfo is true, publish the build info)</p></li><li class=\"listitem\"><p>write_output (if autoPublishBuildInfo is true, update the output BuildInfo resource)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (if forceXrayScan is true, trigger a scan)</p></li><li class=\"listitem\"><p>add_run_files (update the build info saved in run state)</p></li></ul></div></section><section class=\"section internal\" data-publication-date=\"1695975147\" data-time-created=\"1664348580\" data-time-modified=\"1664348580\" dir=\"ltr\" id=\"UUID-8f6d5a90-ad6d-1f6f-7d14-022fdb9061af_UUID-10608cb9-580b-2154-f0f1-e3b394532b2e\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Related Topics</h5></div></div></div><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/2lw3~AJON5ghZORY0eS1Mw\" title=\"Pipeline Example: Go Build\" data-ft-internal-link=\"intercept\">Go Build Quickstart</a></p></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "9_1ls6WtumNvte_6JBahSw", "topic": {"id": "9_1ls6WtumNvte_6JBahSw", "title": "GoPublishModule", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-72c0ceb2-b9e2-3f13-305b-ad7aa06799ed\" data-permalink=\"creating-pipelines/pipelines-steps/gopublishmodule.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1695716072\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>GoPublishModule </strong></span>native step publishes GO (GoLang) modules to an Artifactory repository.</p><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The <code class=\"code\">GoPublishModule</code> native step uses Go runtime image by default. If runtime image of any other type is configured at pipeline-level for this native step, it will be ignored.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for GoPublishModule native step is as follows:</p><p><span class=\"bold\"><strong>GoPublishModule</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: GoPublishModule\n        configuration:\n          #inherits all the tags from bash\n\n          forceXrayScan:        &lt;boolean&gt;         # optional\n          failOnScan:           &lt;boolean&gt;         # default true\n          autoPublishBuildInfo: &lt;boolean&gt;         # optional\n          \n          # for payloadType module:\n          sourceLocation: &lt;string&gt;                # optional\n          version: &lt;string&gt;                       # required\n          targetRepository: &lt;string&gt;              # required\n          self: &lt;boolean&gt;                         # optional\n          deps: &lt;string&gt;                          # optional \n          resolverRepo: &lt;string&gt;                  # optional\n\n          integrations:\n            - name:         &lt;artifactory integration&gt;  # required if autoPublishBuildInfo is false\n          inputResources:\n            - name:         &lt;gitrepo resource&gt;         # required\n            - name:         &lt;filespec resource&gt;        # optional\n          outputResources:\n            - name:         &lt;buildinfo resource&gt;       # required if autoPublishBuildInfo is true\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete:                                  #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">GoPublishModule </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Specifies an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a>. Required when <code class=\"code\">autoPublishBuildInfo</code> is set to <code class=\"code\">false</code>. Otherwise, the Artifactory integration specified in the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource will be used.</p></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a>resource. The publish commands will run on the Git repository at <code class=\"code\">sourceLocation</code>.</p><p>Also may specify an optional <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource that specifies what files to copy to <code class=\"code\">sourceLocation</code>.</p></td><td class=\"td\"><p>Required</p><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource when<code class=\"code\">autoPublishBuildInfo</code>is set to <code class=\"code\">true</code>.</p><p>If <code class=\"code\">JFROG_CLI_BUILD_NAME</code>or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code>is set as an environment variable for the pipeline or the step, that name and/or number is used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code>and <code class=\"code\">buildNumber</code>are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number</code> respectively.</p></td><td class=\"td\"><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">sourceLocation</code></p></td><td class=\"td\"><p>Location of the Go source files relative to the root of the input GitRepo repository. If not specified, the default is the root of the GitRepo repository.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">version</code></p></td><td class=\"td\"><p>Version of the module to build.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">targetRepository</code></p></td><td class=\"td\"><p>Repository in the Artifactory where the module will be published.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">resolverRepo</code></p></td><td class=\"td\"><p>Name of the Artifactory repository to be used to resolve dependencies.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">self</code></p></td><td class=\"td\"><p>When <code class=\"code\">true</code>, uses the <code class=\"code\">--self</code> option to publish the Project to Artifactory. For more information, see the <a class=\"link\" href=\"https://jfrog.com/help/r/jfrog-cli/cli-for-jfrog-artifactory\" rel=\"noopener\" target=\"_blank\" data-ft-internal-link=\"intercept\">CLI for JFrog Artifactory documentation</a>. Not supported with JFrog CLI v2.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">deps</code></p></td><td class=\"td\"><p>When specified, uses the <code class=\"code\">--deps</code> option to specify a list of project dependencies to Artifactory. For more information, see the <a class=\"link\" href=\"https://jfrog.com/help/r/jfrog-cli/cli-for-jfrog-artifactory\" rel=\"noopener\" target=\"_blank\" data-ft-internal-link=\"intercept\">CLI for JFrog Artifactory documentation</a>. Not supported with JFrog CLI v2.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When set to true, force an Xray scan after publishing to Artifactory.</p><p>Default is false.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to <span class=\"bold\"><strong>true</strong></span>, and when the Xray Policy Rule <span class=\"bold\"><strong><a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\">Fail Build</a></strong></span> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is true.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When set to true, automatically publish the implicitly created BuildInfo.</p><p>Default is false.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a GoPublishModule step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-FullPipelineExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Full Pipeline Example</h6></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_N651686d351bf1\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/GoPublishModule\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li></ul></div><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  # Sample Go app in a GitRepo\n  - name: go_repo\n    type: GitRepo\n    configuration:\n      path: {{ .Values.repoPath }}\n      branches:\n        include: main\n      gitProvider: {{ .Values.gitProvider }}\n\n  # Build info for the published Go app\n  - name: go_buildinfo\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactory }}    \n\npipelines:\n  - name: go_publish_binary_example\n    steps:\n      # Build the Go sample app from the GitRepo\n      - name: build_go\n        type: GoBuild\n        configuration:\n          sourceLocation: .\n          resolverRepo: go-virtual\n          noRegistry: true\n          inputResources:\n            - name: go_repo\n          integrations:\n            - name: {{ .Values.artifactory }}\n             \n      # Publish the Go sample app binary to Artifactory\n      - name: cicd_go_publish_binary\n        type: GoPublishBinary\n        configuration:\n          # forceXrayScan: true\n          # failOnScan: false\n          autoPublishBuildInfo: true\n          inputSteps:\n            - name: build_go\n          targetRepository: go-local\n          integrations:\n            - name: myArtifactory\n          outputResources:\n            - name: go_buildinfo</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-UsingDefaultLocations\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using Default Locations</h6></div></div></div><p>A GoPublishModule step using default locations and publishing version v0.0.0 to an Artifactory repository named go-repo.</p><p><span class=\"bold\"><strong>GoPublishModule</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goPublishModulePipeline\n    steps:\n      - name: goPublishModuleStep\n        type: GoPublishModule\n        configuration: \n          version: \"v0.0.0\"\n          targetRepository: go-repo\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-DifferentSourceLocationintheGitRepo\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Different Source Location in the GitRepo</h6></div></div></div><p>A GoPublishModule step specifying a different source location in the GitRepo and publishing the project and dependencies to the Artifactory repository named go-repo as well.</p><p><span class=\"bold\"><strong>GoPublishModule</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goPublishModulePipeline\n    steps:\n      - name: goPublishModuleStep\n        type: GoPublishModule\n        configuration: \n          version: \"v0.0.${run_number}\"\n          targetRepository: go-repo\n                  resolverRepo: go-virtual\n          self: true\n          deps: ALL\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-PublishBuildInfoandTriggerXrayScan\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish Build Info and Trigger Xray Scan</h6></div></div></div><p>A GoPublishModule step that publishes the build info and triggers an Xray scan.</p><p><span class=\"bold\"><strong>GoPublishModule</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: goPublishModulePipeline\n    steps:\n      - name: goPublishModuleStep\n        type: GoPublishModule\n        configuration: \n          version: \"v0.0.${run_number}\"\n          targetRepository: go-repo\n          autoPublishBuildInfo: true\n          forceXrayScan: true\n          inputResources:\n            - name: gitRepoResource\n          outputResources:\n            - name: outputBuildInfo\n          integrations:\n            - name: artifactory_integration\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-055c5957-3aea-2486-4a0d-8e956704cc33_id_GoPublishModule-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>GoPublishModule</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog config add (if there is an output BuildInfo resource, configure the JFrog CLI with the Artifactory credentials in that resource)</p></li><li class=\"listitem\"><p>jfrog config use (to set the current default Artifactory configuration)</p></li><li class=\"listitem\"><p>cp (if there is an input FileSpec, copy the files to the root of the cloned GitRepo)</p></li><li class=\"listitem\"><p>jfrog rt go-config (configure the repository to resolve dependencies)</p></li><li class=\"listitem\"><p>jfrog rt go-publish (publish)</p></li><li class=\"listitem\"><p>add_run_variables (save information about this step for future steps)</p></li><li class=\"listitem\"><p>jfrog rt build-collect-env (collect environment variables)</p></li><li class=\"listitem\"><p>jfrog rt build-publish (if autoPublishBuildInfo is true, publish the build info)</p></li><li class=\"listitem\"><p>write_output (if autoPublishBuildInfo is true, update the output resource)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (if forceXrayScan is true, trigger a scan)</p></li><li class=\"listitem\"><p>add_run_files (save the build information in the run state for later publish steps)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "FN3kTAcUxpXbo~~~hqvifg", "topic": {"id": "FN3kTAcUxpXbo~~~hqvifg", "title": "GradleBuild", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-ad636bf3-19f0-f14a-ce71-0fde8b077e25\" data-permalink=\"creating-pipelines/pipelines-steps/gradlebuild.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1695716119\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>GradleBuild</strong></span> native step performs a Gradle build on files in a Git repository. Optionally, it can also publish build information to Artifactory.</p><p>This step utilizes the JFrog CLI to run a Gradle build for your project. The CLI config file can be created during execution, or you can generate it ahead of time with the settings you require and commit it to your repository. For information about gradle-config, see <a class=\"link\" href=\"https://jfrog.com/help/r/jfrog-cli\" rel=\"noopener\" target=\"_blank\" data-ft-internal-link=\"intercept\">CLI for JFrog Artifactory documentation</a>.</p><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The <code class=\"code\">GradleBuild</code> native step uses Java runtime image by default. If runtime image of any other type is configured at pipeline-level for this native step, it will be ignored.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for GradleBuild native step is as follows:</p><p><span class=\"bold\"><strong>GradleBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: GradleBuild\n        configuration:\n                  #inherits all the tags from bash\n\n          gradleCommand:                &lt;string&gt;  #required\n          sourceLocation:       &lt;string&gt;  #optional\n          configFileLocation:   &lt;string&gt;  #optional\n                  configFileName:               &lt;string&gt;  #optional\n          resolverRepo:         &lt;string&gt;  #optional\n                  deployerRepo:             &lt;string&gt;      #optional\n                  usesPlugin:           &lt;string&gt;  #optional\n                  useWrapper:               &lt;string&gt;      #optional\n                  forceXrayScan:                &lt;boolean&gt; #optional\n          failOnScan:           &lt;boolean&gt;   #optional; default true\n                  autoPublishBuildInfo: &lt;boolean&gt; #optional\n          inputResources:\n                        - name: myGitRepo       \n                        - name: artifactoryFileSpec     \n                  outputResources:\n                        - name: myBuildInfo\n          integrations:\n                        - name: myArtifactory \n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">GradleBuild</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\"> Artifactory Integration</a>.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> resource. The Gradle command will perform the build on files in the Git repository at <code class=\"code\">sourceLocation</code>.</p><p>May also optionally specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource that specifies what files to copy to <code class=\"code\">sourceLocation</code> to build.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource if <code class=\"code\">autoPublishBuildInfo</code> is set to <code class=\"code\">true</code>.</p><p>If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> is set as an environment variable for the pipeline or the step, that name and/or number is used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number.</code></p></td><td class=\"td\"><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">gradleCommand</code></p></td><td class=\"td\"><p>Specifies a command line string of options to use with the Gradle build tool.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">sourceLocation</code></p></td><td class=\"td\"><p>Location of the source files to build relative to the root of the GitRepo repository. If no path is specified, the root of the repository will be used.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">resolverRepo</code></p></td><td class=\"td\"><p>Artifactory repository to be used to resolve dependencies. May not be used with <code class=\"code\">configFileName</code> and <code class=\"code\">configFileLocation</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">deployerRepo</code></p></td><td class=\"td\"><p>Artifactory repository to which to deploy. May not be used with <code class=\"code\">configFileName</code> and <code class=\"code\">configFileLocation</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">usesPlugin</code></p></td><td class=\"td\"><p>Set to <code class=\"code\">true</code> if the Gradle Artifactory Plugin is already applied in the build script. Default is <code class=\"code\">false</code>.</p><p>Do not use with <code class=\"code\">configFileName</code> and<code class=\"code\">configFileLocation</code> (you can enable this option directly in your existing config file).</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">useWrapper</code></p></td><td class=\"td\"><p>If set to <code class=\"code\">true</code>, use the Gradle wrapper. Default is <code class=\"code\">false</code>.</p><p>Do not use with <code class=\"code\">configFileName</code> and <code class=\"code\">configFileLocation</code> (you can enable this option directly in your existing config file).</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, forces an Xray scan after publishing to Artifactory.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, and when the Xray Policy Rule <a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\"> Fail Build</a> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, publishes build info to Artifactory.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">configFileName</code></p></td><td class=\"td\"><p>Gradle configuration file. If specified, the <code class=\"code\">configFileLocation</code> tag is also required. This file is generated using the JFrog CLI when you run <code class=\"code\">jfrog rt gradle-config</code> command.</p><p>The <code class=\"code\">serverID</code> in the configuration file should match the Artifactory integration name.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Use this option only if you have committed this configuration file to your source.</p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">configFileLocation</code></p></td><td class=\"td\"><p>Gradle configuration file location. A <code class=\"code\">configFileName</code> tag is also required. Typically stored in the <code class=\"code\">.jfrog</code> directory in the repository.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show a few ways in which a GradleBuild step can be configured.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-UsingDefaultValues\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using Default Values</h6></div></div></div><p>The most basic form of GradleBuild. Uses all default values. This step will navigate to the root of the repo specified in the inputResources array, and run the specified Gradle command.</p><p><span class=\"bold\"><strong>GradleBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: gradleBuildPipeline\n    steps:\n      - name: gradleBuildStep\n        type: GradleBuild\n        configuration: \n          gradleCommand: \"build\"\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-SourceLocationisaSub-directoryofGitRepo\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Source Location is a Sub-directory of Git Repo</h6></div></div></div><p>A more complicated GradleBuild step, in this one the source location is a subdirectory of the GitRepo (gradle-example-minimal) and the project uses the Gradle Artifactory Plugin. Resolver and deployer repositories have also been configured, resolving from jcenter and deploying to gradle-local.</p><p><span class=\"bold\"><strong>GradleBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: gradleBuildPipeline\n    steps:\n      - name: gradleBuildStep\n        type: GradleBuild\n        configuration: \n          gradleCommand: \"artifactoryPublish clean -b build.gradle\"\n          sourceLocation: gradle-example-minimal\n          deployerRepo: gradle-local\n          resolverRepo: jcenter\n          usesPlugin: true\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-UsingConfigFile\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using Config File</h6></div></div></div><p>This GradleBuild step is similar to the previous example, but has aconfig file committed to the repository as gradle-example-minimal/gradle-art-config. The config file contains the repository and plugin settings.</p><p><span class=\"bold\"><strong>GradleBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: gradleBuildPipeline\n    steps:\n      - name: gradleBuildStep\n        type: GradleBuild\n        configuration: \n          gradleCommand: \"artifactoryPublish clean -b build.gradle\"\n          sourceLocation: gradle-example-minimal\n          configFileLocation: .\n          configFileName: gradle-art-config\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-PublishBuildInfoandTriggerXrayScan\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish Build Info and Trigger Xray Scan</h6></div></div></div><p>In this example, build info is published as part of the GradleBuild step and an Xray scan is triggered.</p><p><span class=\"bold\"><strong>GradleBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: gradleBuildPipeline\n    steps:\n      - name: gradleBuildStep\n        type: GradleBuild\n        configuration: \n          gradleCommand: \"build\"\n          autoPublishBuildInfo: true\n          forceXrayScan: true\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n          outputResources:\n                        - name: myBuildInfo\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-87c53624-a60c-97f8-f5b5-fd58e39dccb4_id_GradleBuild-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>GradleBuild</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (configure JFrog CLI with the integration listed in the yaml)</p></li><li class=\"listitem\"><p>jfrog rt gradle-config (if configFileName and configFileLocation are not set in yaml)</p></li><li class=\"listitem\"><p>jfrog rt gradle $gradleCommand (the main gradle build command)</p></li><li class=\"listitem\"><p>add_run_variables (save information in run state for future steps to reference)</p></li><li class=\"listitem\"><p>jfrog rt build-collect-env (collect the build environment, preparing for build publish)</p></li><li class=\"listitem\"><p>jfrog rt build-publish (publish the build, only if autoPublishBuildInfo is true)</p></li><li class=\"listitem\"><p>write_output (update the BuildInfo output resource with the published name/number)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (if forceXrayScan is true)</p></li><li class=\"listitem\"><p>add_run_files (adds build info to run state)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "1VZwt6L0UejkM47n7YD9Yw", "topic": {"id": "1VZwt6L0UejkM47n7YD9Yw", "title": "HelmBlueGreenCleanup", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-2bffd723-c3e4-3691-4a70-d4f0ee363b78\" data-permalink=\"creating-pipelines/pipelines-steps/helmbluegreencleanup.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680850421\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>HelmBlueGreenCleanup </strong></span>step uninstalls an Idle release previously deployed by a HelmBlueGreenDeploy step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-BlueGreenDeploymentStrategy\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Blue/Green Deployment Strategy</h5></div></div></div><p>Blue/Green deployment is a strategy of releasing new software that uses two production environments, as identical as possible, that take turns on serving users requests while the other one is used to perform the final stage of testing.</p><p>The <span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> step refers to those two environments as <span class=\"bold\"><strong>blue</strong></span> and <span class=\"bold\"><strong>green</strong></span>. Those environments can be either playing <span class=\"bold\"><strong>Idle</strong></span> or <span class=\"bold\"><strong>Live</strong></span> roles, depending on which environment the users' requests are being forwarded to. The environment that is currently handling user requests is considered Live while the other one is considered Idle. To rollout a new release, we first deploy it to the environment playing the Idle role. There we can validate the new version to check if it is good to become available to users. If that is true, we can flip the environment roles so the previously Idle environment becomes Live and starts to handle user requests, while the previously Live environment goes Idle. One of the main advantages of this strategy is that rolling back new releases is as easy as flipping the environments roles again.</p><p>Both blue and green environments are represented in the context of Helm as two individual releases that co-exist in the same namespace. The <span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> step assign Idle or Live roles to those releases by creating copies of their public Services dedicated to each role. By doing that we can easily change the releases role by updating those Services to be a copy of the Services from a specific environment. Those role Services created by Pipelines can be used to provision additional entrypoint components like DNS Records, Ingress Rules or Service Meshes.</p><p>To implement the complete Blue/Green deployment strategy workflow, Pipelines provides three native steps:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> discovers from runtime which release is playing Idle role, deploys the chart to it and creates or updates Idle role Services.</p></li><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenRoleSwitch</strong></span> discovers from runtime which release is playing each role and flips them by creating or updating the role Services.</p></li><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenCleanup</strong></span> discovers from runtime which release is playing Idle role and uninstalls it.</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for HelmBlueGreenCleanup native step is as follows:</p><p><span class=\"bold\"><strong>HelmBlueGreenCleanup</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: HelmBlueGreenCleanup\n        configuration:\n          #inherits all the tags from bash\n          deployStep:       &lt;string&gt;\n          flags:            &lt;string&gt;                               # optional\n          \n          integrations:\n            - name:         &lt;kubernetes integration&gt;                         # required          \n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">HelmBlueGreenCleanup</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/11S~KNSucSgj73iaT8FjbQ\" title=\"Kubernetes Integration\" data-ft-internal-link=\"intercept\">Kubernetes Integration</a>.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">deployStep</code></p></td><td class=\"td\"><p>HelmBlueGreenDeploy step name that deployed the Helm Chart and where the blue/green strategy was configured. The referenced deploy step must be declared in the same Pipeline.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">flags</code></p></td><td class=\"td\"><p>String containing global flags to be included in the Helm command when uninstalling the release. For example: \"--debug\"</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a HelmBlueGreenCleanup step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-FullPipelineExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Full Pipeline Example</h6></div></div></div><p>This pipeline shows how to deploy a Helm chart using the blue/green strategy, promote it to the Live role and uninstall the previous deployed version (if present).</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmBlueGreenDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource\n     \n     - name: helmRoleSwitch\n       type: HelmBlueGreenRoleSwitch\n       configuration: \n         deployStep: helmDeployStep\n         integrations:\n           - name: kubernetes_integration\n         inputSteps:\n           - name: helmDeployStep   \n\n     - name: helmCleanup\n       type: HelmBlueGreenCleanup\n       configuration: \n         deployStep: helmDeployStep\n         integrations:\n           - name: kubernetes_integration\n         inputSteps:\n           - name: helmRoleSwitch</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7fbd1dbe-7383-31c6-d4f9-0bb2d97bf410_id_HelmBlueGreenCleanup-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>HelmBlueGreenCleanup</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>restore_pipeline_files (restores referenced HelmBlueGreenDeploy step configuration)</p></li><li class=\"listitem\"><p>kubectl get service (fetch Live Services to read annotations and discover current Idle environment)</p></li><li class=\"listitem\"><p>helm status (check if Idle release exists)</p></li><li class=\"listitem\"><p>helm uninstall (if Idle release is present)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "~GfO48fp7GTbQ35XG5k06A", "topic": {"id": "~GfO48fp7GTbQ35XG5k06A", "title": "HelmBlueGreenDeploy", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-4e56a79f-b53d-c318-dd6f-e3669d687bba\" data-permalink=\"creating-pipelines/pipelines-steps/helmbluegreendeploy.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680850467\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>HelmBlueGreenDeploy </strong></span>step implements a Blue/Green strategy to deploy a Docker image to a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/11S~KNSucSgj73iaT8FjbQ\" title=\"Kubernetes Integration\" data-ft-internal-link=\"intercept\">Kubernetes</a> cluster using a Helm chart.</p><p>The Helm chart used to deploy the image through this native step can be either:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>A <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/1qTcM0hlo~cqnbXCLIVC1g\" title=\"HelmChart\" data-ft-internal-link=\"intercept\">HelmChart</a> resource that identifies a Helm chart stored in an Artifactory repository by <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/P1nvfSf9oV0MY3jJGqMB_g\" title=\"HelmPublish\" data-ft-internal-link=\"intercept\">HelmPublish</a>.</p></li><li class=\"listitem\"><p>A Helm chart in a source code repository identified by a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> resource.</p></li></ul></div><p>When properly configured, the HelmBlueGreenDeploy step also performs a  replace_envs operation on all files specified under the <code class=\"code\">blueValueFilePaths</code> or <code class=\"code\">greenValueFilePaths</code> tag to replace all environment variables in those files with their values. This enables the step to derive information from a resource, such as the image name and tag from an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ptcL79OBsi81Y7VQxNO~cg\" title=\"Image\" data-ft-internal-link=\"intercept\">Image</a>, and use it to perform the deployment.</p><p>The HelmBlueGreenDeploy step uses the <code class=\"code\">helm upgrade</code> command to perform the deployment.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-BlueGreenDeploymentStrategy\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Blue/Green Deployment Strategy</h5></div></div></div><p>Blue/Green deployment is a strategy for releasing new software that uses two production environments, as identical as possible, where they take turns in serving user requests and performing final stages of testing.</p><p>The <span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> step refers to those two environments as <span class=\"bold\"><strong>blue</strong></span> and <span class=\"bold\"><strong>green</strong></span>. Those environments can play either <span class=\"bold\"><strong>Idle</strong></span> or <span class=\"bold\"><strong>Live</strong></span> roles, depending on which environment the users' requests are being forwarded to. The environment that is currently handling user requests is considered Live while the other one is considered Idle. To rollout a new release, it is first deployed to the environment playing the Idle role. There we can validate the new version to check if it is good to become available to users. If that is true, the environment roles can be flipped so that the previously Idle environment becomes Live and starts handling user requests, while the previously Live environment becomes Idle. One of the main advantages of this strategy is that rolling back new releases is as easy as flipping the environments roles again.</p><p>Both blue and green environments are represented in the context of Helm as two individual releases that co-exist in the same namespace. The <span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> step assign Idle or Live roles to those releases by creating copies of their public Services dedicated to each role. By doing that we can easily change the release's role by updating those Services to be a copy of the Services from a specific environment. Those role Services created by Pipelines can be used to provision additional entrypoint components like DNS Records, Ingress Rules or Service Meshes.</p><p>To implement the complete Blue/Green deployment strategy workflow, Pipelines provides three native steps:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span>: From runtime, this step discovers which release is playing Idle role, deploys the chart to it and creates or updates Idle role Services.</p></li><li class=\"listitem\"><p><span class=\"bold\"><strong>elmBlueGreenRoleSwitch</strong></span>: From runtime, this step discovers which release is playing each role and flips them by creating or updating the role Services.</p></li><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenCleanup</strong></span>: From runtime, this step discovers which release is playing Idle role and uninstalls it.</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for HelmBlueGreenDeploy native step is as follows:</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: HelmBlueGreenDeploy\n        configuration:\n          #inherits all the tags from bash\n          helmVersion:                  &lt;2 | 3&gt;         # optional, defaults to 3\n          namespace:                    &lt;string&gt;\n          blueReleaseName:              &lt;string&gt;\n          blueFlags:                    &lt;string&gt;        # optional\n          blueValueFilePaths:                           # optional\n            - &lt;path and filename&gt;          \n          greenReleaseName:             &lt;string&gt;\n          greenFlags:                   &lt;string&gt;        # optional\n          greenValueFilePaths:                      # optional\n            - &lt;path and filename&gt;          \n          roleServices:\n            - liveName:             &lt;string&gt;\n              liveCustomProperties: &lt;string&gt;        # optional\n              idleName:             &lt;string&gt;\n              idleCustomProperties: &lt;string&gt;        # optional\n              blueReferenceName:    &lt;string&gt;\n                          greenReferenceName:   &lt;string&gt;              \n          chartPath:                    &lt;path string&gt;   # optional, may be required for certain input resources\n                  chartName:                &lt;path string&gt;   # optional, may be required for certain input resources\n                  chartVersion:             &lt;path string&gt;   # optional, may be required for certain input resources\n          dryRun:                   &lt;true | false&gt;  # optional, only deploys if the dryrun is success\n          lint:                     &lt;true | false&gt;  # lints chart before upgrade, default false\n          lintFlags: \u201c--strict\u201d\n          test:                     &lt;true | false&gt;  # runs helm test after upgrade, default false\n          testFlags: \u201c--parallel\u201d\n\n          integrations:\n            - name:         &lt;kubernetes integration&gt;                         # required\n          inputResources:\n            - name:         &lt;HelmChart, GitRepo, FileSpec or BuildInfo resource&gt;        # required, only one input resource is allowed\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">HelmBlueGreenDeploy</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/11S~KNSucSgj73iaT8FjbQ\" title=\"Kubernetes Integration\" data-ft-internal-link=\"intercept\">Kubernetes Integration</a>.</p><p>and</p><p>Must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\"> Artifactory Integration</a> when <code class=\"code\">ReleaseBundle </code>is the <code class=\"code\">inputResource</code>for the step.</p></td><td class=\"td\"><p>Required</p><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/1qTcM0hlo~cqnbXCLIVC1g\" title=\"HelmChart\" data-ft-internal-link=\"intercept\">HelmChart</a>, <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a>, <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a>, <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a>, or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a> resource that contains a Helm chart.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">helmVersion</code></p></td><td class=\"td\"><p>A number representing the major version of Helm to use. Can be either 2 or 3. Defaults to 3.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">namespace</code></p></td><td class=\"td\"><p>Target kubernetes namespace for the deployment.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">blueReleaseName</code></p></td><td class=\"td\"><p>The release name for the blue environment. Equivalent to the --name (-n) option of the <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-install\" rel=\"noopener\" target=\"_blank\">helm install</a> command.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">blueFlags</code></p></td><td class=\"td\"><p>A flag string to be included in the Helm command when deploying the blue release. For example: <code class=\"code\">--set key=\u2019value\u2019 -f myTestValues.yaml</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">blueValueFilePaths</code></p></td><td class=\"td\"><p>Specifies values YAML file(s) for use with a <code class=\"code\">--values (-f)</code> option of the <a class=\"link ft-external-link\" href=\"https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing\" rel=\"noopener\" target=\"_blank\">helm install</a> command when deploying the blue release.</p><p>All environment variables referenced in the specified file(s) are automatically replaced with the values of matching runtime environment variables.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">greenReleaseName</code></p></td><td class=\"td\"><p>The release name for the green environment. Equivalent to the <code class=\"code\">--name (-n)</code> option of the <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-install\" rel=\"noopener\" target=\"_blank\">helm install</a> command.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">greenFlags</code></p></td><td class=\"td\"><p>A flag string to be included in the Helm command when deploying the green release. For example: <code class=\"code\">--set key=\u2019value\u2019 -f myTestValues.yaml</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">greenValueFilePaths</code></p></td><td class=\"td\"><p>Specifies values YAML file(s) for use with a <code class=\"code\">--values (-f)</code> option of the <a class=\"link ft-external-link\" href=\"https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing\" rel=\"noopener\" target=\"_blank\">helm install</a> command when deploying the green release.</p><p>All environment variable referenced in the specified file(s) are automatically replaced with values of matching runtime environment variables.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">roleServices</code></p></td><td class=\"td\"><p>List of services that should be created by Pipelines to assign Idle and Live roles to the releases.</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><thead><tr><th class=\"th tableheader\"><p>Tag</p></th><th class=\"th tableheader\"><p>Description of usage</p></th><th class=\"th tableheader\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">liveName</code></p></td><td class=\"td\"><p>Name of the Service that points to the environment playing Live role.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">liveCustomProperties</code></p></td><td class=\"td\"><p><code class=\"code\">jq</code> expression to be executed on the Live Service after the content is copied from the reference Service and before applying it to the kubernetes cluster. Can be used to customize the Live Service content. For instance, to assign a custom label use the following expression: <code class=\"code\">\".metadata.labels.my-label = my-value\".</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">idleName</code></p></td><td class=\"td\"><p>Name of the Service that points to the environment playing Idle role.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">idleCustomProperties</code></p></td><td class=\"td\"><p><code class=\"code\">jq</code> expression to be executed on this Idle Service after the content is copied from the reference Service and before applying it to the kubernetes cluster. Can be used to customize the Idle Service content. For instance, to assign a custom label use the following expression: <code class=\"code\">\". <a class=\"link ft-external-link\" href=\"http://metadata.labels.my\" rel=\"noopener\" target=\"_blank\">metadata.labels.my</a>-label = my-value\".</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">blueReferenceName</code></p></td><td class=\"td\"><p>Name of the Service deployed by the blue release that will be used as reference when creating or updating this role Service. When blue is playing Live role, <code class=\"code\">liveName</code> will be a copy of this Service. If blue is playing Idle role, <code class=\"code\">idleName</code> will be a copy of this Service.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">greenReferenceName</code></p></td><td class=\"td\"><p>Name of the Service deployed by the green release that will be used as reference when creating or updating this role Service. When green is playing Live role, <code class=\"code\">liveName</code> will be a copy of this Service. If green is playing Idle role, <code class=\"code\">idleName</code> will be a copy of this Service.</p></td><td class=\"td\"></td></tr></tbody></table></div></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chartPath</code></p></td><td class=\"td\"><p>The path to the Helm chart in the <code class=\"code\">GitRepo/FileSpec/BuildInfo/ReleaseBundle </code>resource specified in <code class=\"code\">inputResources</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use when a HelmChart resource is specified.</p></div></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chartName</code></p></td><td class=\"td\"><p>The name of the Helm chart in the <code class=\"code\">FileSpec/BuildInfo/ReleaseBundle </code>resource specified in <code class=\"code\">inputResources</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use when a HelmChart/GitRepo resource is specified or when your input resource is not an Artifactory Helm repository.</p></div></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chartVersion</code></p></td><td class=\"td\"><p>The name of the Helm chart in the <code class=\"code\">FileSpec/BuildInfo/ReleaseBundle </code>resource specified in <code class=\"code\">inputResources</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use when a HelmChart/GitRepo resource is specified or when your input resource is not an Artifactory Helm repository.</p></div></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dryRun</code></p></td><td class=\"td\"><p>When <span class=\"bold\"><strong>true</strong></span>, only deploys if the --dry-run install simulation is successful.</p><p>Defaults to <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">lint</code></p></td><td class=\"td\"><p>When set to <span class=\"bold\"><strong>true</strong></span>, performs a <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-lint\" rel=\"noopener\" target=\"_blank\">lint</a> to examine a chart for possible issues.</p><p>Defaults to <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">lintFlags</code></p></td><td class=\"td\"><p>Flag string to pass to the <code class=\"code\">helm lint</code> command.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">test</code></p></td><td class=\"td\"><p>When set to <span class=\"bold\"><strong>true</strong></span>, performs a <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-test\" rel=\"noopener\" target=\"_blank\">test</a> to run the tests for release.</p><p>Defaults to <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">testFlags</code></p></td><td class=\"td\"><p>Flag string to pass to the <code class=\"code\">helm test</code> command.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a HelmBlueGreenDeploy step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-Helm3andHelmChartResourceInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Helm 3 and HelmChart Resource Input</h6></div></div></div><p>A HelmBlueGreenDeploy step using Helm 3 and a HelmChart resource input.</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-DryRun\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Dry Run</h6></div></div></div><p>A HelmBlueGreenDeploy step using Helm 3 and a HelmChart resource input with values files and a dry run before the deployment.</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          blueValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          greenReleaseName: app-green\n          greenValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          dryRun: true          \n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-GitRepoInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">GitRepo Input</h6></div></div></div><p>A HelmBlueGreenDeploy step with a GitRepo input instead of a HelmChart, lint and test commands.</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          blueFlags: \"--set key=value\"\n          greenReleaseName: app-green\n          greenFlags: \"--set key=value\"\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          chartPath: \"./myChart\"\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: gitRepoResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-FileSpecInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">FileSpec Input</h6></div></div></div><p>A HelmBlueGreenDeploy step with a FileSpec input resource. When using the FileSpec input resource, use the <code class=\"code\">chartPath</code> property to specify where the Helm chart file is in the FileSpec resource. If the FileSpec represents a Generic repository in Artifactory that contains the Helm chart, use the following configuration as a reference:</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          chartPath: \"./myChart\"          \n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: fileSpecResource</pre><p>If the FileSpec input resource represents a Helm repository in Artifactory, you will also need to provide the <code class=\"code\">chartName</code>and<code class=\"code\">chartVersion</code>configuration properties:</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          chartPath: \"./myChart\"\n                  chartName: \"myChartName\"\n                  chartVersion: 0.0.1          \n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: fileSpecResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-BuildInfoInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">BuildInfo Input</h6></div></div></div><p>A HelmBlueGreenDeploy step with a BuildInfo input resource. When using the BuildInfo input resource, use the <code class=\"code\">chartPath</code> property to specify where the Helm chart file is in the BuildInfo resource. If the BuildInfo represents a Generic repository in Artifactory that contains the Helm chart, use the following configuration as a reference:</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          blueValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          greenReleaseName: app-green\n          greenValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          chartPath: \"./myChart\"          \n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"          \n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: buildInfoResource</pre><p>If the BuildInfo input resource represents a Helm repository in Artifactory, you will also need to provide the <code class=\"code\">chartName</code> and <code class=\"code\">chartVersion</code>configuration properties:</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          blueValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          greenReleaseName: app-green\n          greenValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          chartPath: \"./myChart\"\n                  chartName: \"myChartName\"\n                  chartVersion: 0.0.1\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"          \n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: buildInfoResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-ReleaseBundleInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">ReleaseBundle Input</h6></div></div></div><p>A HelmBlueGreenDeploy step with a ReleaseBundle input resource. When using the ReleaseBundle input resource you will need to specify where the Helm chart file is in the ReleaseBundle resource using the <code class=\"code\">chartPath</code> property.</p><p>If the ReleaseBundle represents a Generic repository in Artifactory that contains the Helm chart, please use the following configuration as a reference:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Artifactory integration is required</h3><p>You must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> when <code class=\"code\">ReleaseBundle </code>is the <code class=\"code\">inputResource</code> to <code class=\"code\">HelmBlueGreenDeploy</code> step. This integration will point to the Artifactory that will be the source to download the ReleaseBundle that will be used in this step.</p></div><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration:\n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          blueValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          greenReleaseName: app-green\n          greenValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          chartPath: \"./myChart\"          \n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          integrations:\n            - name: kubernetes_integration\n            - name: artifactory_integration\n          inputResources:\n            - name: releaseBundleResource</pre><p>If the ReleaseBundle input resource represents a Helm repository in Artifactory, you will also have to specify <code class=\"code\">chartName</code> and <code class=\"code\">chartVersion</code> configuration properties:</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: helmDeployPipeline   \n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration:\n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          blueValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          greenReleaseName: app-green\n          greenValueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          chartPath: \"./myChart\"\n          chartName: \"myChartName\"\n          chartVersion: 0.0.1          \n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          integrations:\n            - name: kubernetes_integration\n                        - name: artifactory_integration \n          inputResources:\n            - name: releaseBundleResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-CustomizingRoleServices\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Customizing Role Services</h6></div></div></div><p>A HelmBlueGreenDeploy step with two custom labels assigned to a role Service.</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              idleCustomProperties: \".metadata.labels.mylabel = \\\"value\\\" | .metadata.labels.role = \\\"idle\\\"\"\n              liveName: app-service\n              liveCustomProperties: \".metadata.labels.mylabel = \\\"value\\\" | .metadata.labels.role = \\\"live\\\"\"\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-MultiplePublicServices\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Multiple Public Services</h6></div></div></div><p>A HelmBlueGreenDeploy step that deploys a Helm Chart that exposes two Services.</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service              \n              liveName: app-service\n            - blueReferenceName: app-blue-admin-service\n              greenReferenceName: app-green-admin-service \n              idleName: app-idle-admin-service              \n              liveName: app-admin-service\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-Helm2\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Helm 2</h6></div></div></div><p>A HelmBlueGreenDeploy step using Helm 2.</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 2\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service          \n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>helm init --client-only (if the Helm version is 2)</p></li><li class=\"listitem\"><p>jfrog rt config (if there is a HelmChart resource input, to configure the JFrog CLI with the Artifactory credentials)</p></li><li class=\"listitem\"><p>jfrog rt use (if there is a HelmChart resource input, to set the current default Artifactory configuration)</p></li><li class=\"listitem\"><p>kubectl get service (fetch Live Services to read annotations and discover current Idle environment)</p></li><li class=\"listitem\"><p>helm fetch (if there is a HelmChart resource input and the Helm version is 2, to fetch the chart)</p></li><li class=\"listitem\"><p>helm pull (if there is a HelmChart resource input and the Helm version is 3, to fetch the chart)</p></li><li class=\"listitem\"><p>replace_envs (if there are valueFilePaths, to replace variable placeholders)</p></li><li class=\"listitem\"><p>helm lint (if lint is true)</p></li><li class=\"listitem\"><p>helm --dry-run (if dryRun is true)</p></li><li class=\"listitem\"><p>helm (deploy)</p></li><li class=\"listitem\"><p>kubectl get service (fetch reference Services deployed by helm to create or update role Services)</p></li><li class=\"listitem\"><p>Cleanup and update role Services definition (uses <code class=\"code\">jq</code> on Bash nodes and <code class=\"code\">jq</code> and <code class=\"code\">ConvertFrom-Json</code> on PowerShell nodes)</p></li><li class=\"listitem\"><p>kubectl apply (create or update role Services)</p></li><li class=\"listitem\"><p>add_pipeline_files (saves HelmBlueGreenDeploy configuration to be used by HelmBlueGreenRoleSwitch and HelmBlueGreenCleanup steps later)</p></li><li class=\"listitem\"><p>helm test (if test is true)</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-89cfbd13-6593-98d1-a36a-455de96d7e23_id_HelmBlueGreenDeploy-PipelinesManagedServices\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Pipelines Managed Services</h5></div></div></div><p>The role Services managed by Pipelines can be identified by the following labels and annotations metadata:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Name</p></th><th class=\"th\"><p>Type</p></th><th class=\"th\"><p>Value</p></th></tr></thead><tbody><tr><td class=\"td\"><p>app.kubernetes.io/managed-by</p></td><td class=\"td\"><p>Label</p></td><td class=\"td\"><p>\"Pipelines\"</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/pipeline</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Pipeline name</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/deploy-step</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Step name</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/run</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Number of the last run to update the Service</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/reference</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Reference Service name</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/environment</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Environment currently playing that role</p></td></tr></tbody></table></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "q5QxIb4s6GoP73xLNicwsQ", "topic": {"id": "q5QxIb4s6GoP73xLNicwsQ", "title": "HelmBlueGreenRoleSwitch", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-4422cdfb-568f-66b4-eb80-acfabf04c87e\" data-permalink=\"creating-pipelines/pipelines-steps/helmbluegreenroleswitch.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680850508\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346\" lang=\"en\" xml:lang=\"en\"><p>The<span class=\"bold\"><strong> HelmBlueGreenRoleSwitch </strong></span>step flips the roles played by the Helm releases deployed by a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/OU14OBJ_4faErvHbd2e2Bg\" title=\"HelmBlueGreenDeploy\" data-ft-internal-link=\"intercept\">HelmBlueGreenDeploy</a> step.</p><p>This role switch can be used to either make a new release available to users or to roll back a previously published release.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-BlueGreenDeploymentStrategy\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Blue/Green Deployment Strategy</h5></div></div></div><p>Blue/Green deployment is a strategy of releasing new software that uses two production environments, as identical as possible, that take turns on serving users requests while the other one is used to perform the final stage of testing.</p><p>The <span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> step refers to those two environments as <span class=\"bold\"><strong>blue</strong></span> and <span class=\"bold\"><strong>green</strong></span>. Those environments can be either playing <span class=\"bold\"><strong>Idle</strong></span> or <span class=\"bold\"><strong>Live</strong></span> roles, depending on which environment the users' requests are being forwarded to. The environment that is currently handling user requests is considered Live while the other one is considered Idle. To rollout a new release, we first deploy it to the environment playing the Idle role. There we can validate the new version to check if it is good to become available to users. If that is true, we can flip the environment roles so the previously Idle environment becomes Live and starts to handle user requests, while the previously Live environment goes Idle. One of the main advantages of this strategy is that rolling back new releases is as easy as flipping the environments roles again.</p><p>Both blue and green environments are represented in the context of Helm as two individual releases that co-exist in the same namespace. The <span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> step assign Idle or Live roles to those releases by creating copies of their public Services dedicated to each role. By doing that we can easily change the releases role by updating those Services to be a copy of the Services from a specific environment. Those role Services created by Pipelines can be used to provision additional entrypoint components like DNS Records, Ingress Rules or Service Meshes.</p><p>To implement the complete Blue/Green deployment strategy workflow, Pipelines provides three native steps:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span> discovers from runtime which release is playing Idle role, deploys the chart to it and creates or updates Idle role Services.</p></li><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenRoleSwitch</strong></span> discovers from runtime which release is playing each role and flips them by creating or updating the role Services.</p></li><li class=\"listitem\"><p><span class=\"bold\"><strong>HelmBlueGreenCleanup</strong></span> discovers from runtime which release is playing Idle role and uninstalls it.</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for HelmBlueGreenRoleSwitch native step is as follows:</p><p><span class=\"bold\"><strong>HelmBlueGreenRoleSwitch</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: HelmBlueGreenRoleSwitch\n        configuration:\n          #inherits all the tags from bash\n          deployStep:       &lt;string&gt;\n          \n          integrations:\n            - name:         &lt;kubernetes integration&gt;                         # required          \n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">HelmBlueGreenRoleSwitch</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/11S~KNSucSgj73iaT8FjbQ\" title=\"Kubernetes Integration\" data-ft-internal-link=\"intercept\">Kubernetes Integration</a>.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">deployStep</code></p></td><td class=\"td\"><p>HelmBlueGreenDeploy step name that deployed the Helm Chart and where the blue/green strategy was configured. The referenced deploy step must be declared in the same Pipeline.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a HelmBlueGreenRoleSwitch step.</p><p><span class=\"bold\"><strong>Example 1</strong></span></p><p>This pipeline shows how to deploy a Helm chart using the blue/green strategy and promote it to the Live role.</p><p><span class=\"bold\"><strong>HelmBlueGreenDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmBlueGreenDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmBlueGreenDeploy\n        configuration: \n          helmVersion: 3\n          namespace: app-namespace\n          blueReleaseName: app-blue\n          greenReleaseName: app-green\n          roleServices:\n            - blueReferenceName: app-blue-service\n              greenReferenceName: app-green-service \n              idleName: app-idle-service\n              liveName: app-service\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource\n     \n     - name: helmRoleSwitch\n       type: HelmBlueGreenRoleSwitch\n       configuration: \n         deployStep: helmDeployStep\n         integrations:\n           - name: kubernetes_integration\n         inputSteps:\n           - name: helmDeployStep   </pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>HelmBlueGreenRoleSwitch</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>restore_pipeline_files (restores referenced HelmBlueGreenDeploy step configuration)</p></li><li class=\"listitem\"><p>kubectl get service (fetch Live Services to read annotations and discover current role played by the environments)</p></li><li class=\"listitem\"><p>kubectl get service (fetch reference Services deployed by helm to create or update role Services)</p></li><li class=\"listitem\"><p>Cleanup and update role Services definition (uses <code class=\"code\">jq</code> on Bash nodes and <code class=\"code\">jq</code> and <code class=\"code\">ConvertFrom-Json</code> on PowerShell nodes)</p></li><li class=\"listitem\"><p>kubectl apply (create or update role Services)</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c6d662cd-6c51-e894-c511-fbeb46dd0346_id_HelmBlueGreenRoleSwitch-PipelinesManagedServices\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Pipelines Managed Services</h5></div></div></div><p>The role Services managed by Pipelines can be identified by the following labels and annotations metadata:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Name</p></th><th class=\"th\"><p>Type</p></th><th class=\"th\"><p>Value</p></th></tr></thead><tbody><tr><td class=\"td\"><p>app.kubernetes.io/managed-by</p></td><td class=\"td\"><p>Label</p></td><td class=\"td\"><p>\"Pipelines\"</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/pipeline</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Pipeline name</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/deploy-step</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Step name</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/run</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Number of the last run to update the Service</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/reference</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Reference Service name</p></td></tr><tr><td class=\"td\"><p>pipelines.jfrog.com/environment</p></td><td class=\"td\"><p>Annotation</p></td><td class=\"td\"><p>Environment currently playing that role</p></td></tr></tbody></table></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "tC6xb~zyMnbLQOzA6BmR5Q", "topic": {"id": "tC6xb~zyMnbLQOzA6BmR5Q", "title": "HelmDeploy", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-420862a7-b8dc-e523-462b-45eca9eed140\" data-permalink=\"creating-pipelines/pipelines-steps/helmdeploy.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680851541\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>HelmDeploy</strong></span> step deploys a Docker image to a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/11S~KNSucSgj73iaT8FjbQ\" title=\"Kubernetes Integration\" data-ft-internal-link=\"intercept\">Kubernetes</a> cluster using a Helm chart.</p><p>The Helm chart used to deploy the image through this native step can be either:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>A <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/1qTcM0hlo~cqnbXCLIVC1g\" title=\"HelmChart\" data-ft-internal-link=\"intercept\">HelmChart</a> resource that identifies a Helm chart stored in an Artifactory repository by <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/P1nvfSf9oV0MY3jJGqMB_g\" title=\"HelmPublish\" data-ft-internal-link=\"intercept\">HelmPublish</a>.</p></li><li class=\"listitem\"><p>A Helm chart in a source code repository identified by a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> resource.</p></li></ul></div><p>When properly configured, the HelmDeploy step also performs a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/NDuFP7O7YmF1UrYCIbvuHg?section=UUID-5cca73fe-251f-fa09-c213-3e329d940aa5_UUID-6ce77411-2288-f87e-0443-a40688e51671\" title=\"replace_envs\" data-ft-internal-link=\"intercept\">replace_envs</a> operation on all files specified under the <code class=\"code\">valueFilePaths</code> tag to replace all environment variables in those files with their values. This enables the step to derive information from a resource, such as the image name and tag from an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ptcL79OBsi81Y7VQxNO~cg\" title=\"Image\" data-ft-internal-link=\"intercept\">Image</a>, and use it to perform the deployment.</p><p>The HelmDeploy step uses the <code class=\"code\">helm upgrade</code> command to perform the deployment.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for HelmDeploy native step is as follows:</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: HelmDeploy\n        configuration:\n          #inherits all the tags from bash\n          helmVersion:         &lt;2 | 3&gt;          # optional, defaults to 2\n          namespace:               &lt;string&gt;     # optional, namespace to which to deploy\n          flags:               &lt;string&gt;         # optional\n          valueFilePaths:                       # optional\n            - &lt;path and filename&gt;\n          releaseName:         &lt;string&gt; \n          chartPath:           &lt;path string&gt;    # optional, may be required for certain input resources\n                  chartName:           &lt;path string&gt;    # optional, may be required for certain input resources\n                  chartVersion:        &lt;path string&gt;    # optional, may be required for certain input resources\n          dryRun:              &lt;true | false&gt;   # optional, only deploys if the dryrun is success\n          lint:                &lt;true | false&gt;   # lints chart before upgrade, default false\n          lintFlags: \u201c--strict\u201d\n          test:                &lt;true | false&gt;   # runs helm test after upgrade, default false\n          testFlags: \u201c--parallel\u201d\n\n          integrations:\n            - name:         &lt;kubernetes integration&gt;                         # required            \n          inputResources:\n            - name:         &lt;HelmChart, GitRepo, FileSpec, BuildInfo or ReleaseBundle resource&gt;    # required, one input resource from this list is required\n                                                                                                                                                                                           # HelmChart and GitRepo input resources are allowed together       \n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">HelmDeploy </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/11S~KNSucSgj73iaT8FjbQ\" title=\"Kubernetes Integration\" data-ft-internal-link=\"intercept\">Kubernetes Integration</a>.</p><p>or</p><p>Must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\"> Artifactory Integration</a> when <code class=\"code\">ReleaseBundle </code>is the <code class=\"code\">inputResource</code> to the step.</p></td><td class=\"td\"><p>Required</p><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/1qTcM0hlo~cqnbXCLIVC1g\" title=\"HelmChart\" data-ft-internal-link=\"intercept\">HelmChart</a>, <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a>, <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> , <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a> resource that contains a Helm chart.</p><p>Can also specify a second input resource of type <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> containing <a class=\"link ft-external-link\" href=\"https://helm.sh/docs/chart_template_guide/values_files/\" rel=\"noopener\" target=\"_blank\"> Helm values files</a>, if <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/1qTcM0hlo~cqnbXCLIVC1g\" title=\"HelmChart\" data-ft-internal-link=\"intercept\">HelmChart</a> was provided as the other input resource.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">helmVersion</code></p></td><td class=\"td\"><p>A number representing the major version of Helm to use. Can be 2 or 3. Defaults to 2.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">namespace</code></p></td><td class=\"td\"><p>The namespace to which to deploy. This will be added to the deploy command as a <code class=\"code\">--namespace</code> parameter.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">flags</code></p></td><td class=\"td\"><p>A flag string to be included in the Helm command. For example: \"--set key=\u2019value\u2019 -f myTestValues.yaml\"</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">valueFilePaths</code></p></td><td class=\"td\"><p>Specifies values YAML file(s) for use with a--values (-f) option of the <a class=\"link ft-external-link\" href=\"https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing\" rel=\"noopener\" target=\"_blank\">helm install</a> command.</p><p>All environment variable referenced in the specified file(s) are automatically replaced with values of matching runtime environment variables.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">releaseName</code></p></td><td class=\"td\"><p>The release name. Equivalent to the --name (-n) option of the <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-install\" rel=\"noopener\" target=\"_blank\">helm install</a> command.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chartPath</code></p></td><td class=\"td\"><p>The path to the Helm chart in the <code class=\"code\">GitRepo/FileSpec/BuildInfo/ReleaseBundle </code>resource specified in <code class=\"code\">inputResources</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use when a HelmChart resource is specified.</p></div></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chartName</code></p></td><td class=\"td\"><p>The name of the Helm chart in the <code class=\"code\">FileSpec/BuildInfo/ReleaseBundle </code>resource specified in <code class=\"code\">inputResources</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use when a HelmChart/GitRepo resource is specified or when your input resource is not an Artifactory Helm repository.</p></div></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chartVersion</code></p></td><td class=\"td\"><p>The name of the Helm chart in the <code class=\"code\">FileSpec/BuildInfo/ReleaseBundle </code>resource specified in <code class=\"code\">inputResources</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use when a HelmChart/GitRepo resource is specified or when your input resource is not an Artifactory Helm repository.</p></div></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dryRun</code></p></td><td class=\"td\"><p>When <span class=\"bold\"><strong>true</strong></span>, only deploys if the --dry-run install simulation is successful.</p><p>Defaults to <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">lint</code></p></td><td class=\"td\"><p>When set to <span class=\"bold\"><strong>true</strong></span>, performs a <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-lint\" rel=\"noopener\" target=\"_blank\">lint</a> to examine a chart for possible issues.</p><p>Defaults to <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">lintFlags</code></p></td><td class=\"td\"><p>Flag string to pass to the <code class=\"code\">helm lint</code> command.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">test</code></p></td><td class=\"td\"><p>When set to <span class=\"bold\"><strong>true</strong></span>, performs a <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-test\" rel=\"noopener\" target=\"_blank\">test</a> to run the tests for release.</p><p>Defaults to <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">testFlags</code></p></td><td class=\"td\"><p>Flag string to pass to the <code class=\"code\">helm test</code> command.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a HelmDeploy step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-Helm3andHelmChartResourceInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Helm 3 and HelmChart Resource Input</h6></div></div></div><p>A HelmDeploy step using Helm 3 and a HelmChart resource input.</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 3\n          namespace: my-namespace\n          releaseName: myHelmRelease\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-DryRun\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Dry Run</h6></div></div></div><p>A HelmDeploy step using Helm 3 and a HelmChart resource input with values files and a dry run before the deployment.</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 3\n          namespace: my-namespace\n          releaseName: myHelmRelease\n          dryRun: true\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-GitRepoInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">GitRepo Input</h6></div></div></div><p>A HelmDeploy step with a GitRepo input instead of a HelmChart and lint and test commands.</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 3\n          namespace: my-namespace\n          chartPath: \"./myChart\"\n          releaseName: myHelmRelease\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: gitRepoResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-FileSpecInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">FileSpec Input</h6></div></div></div><p>A HelmDeploy step with a FileSpec input resource. When using the FileSpec input resource, use the <code class=\"code\">chartPath</code> property to specify where the Helm chart file is in the FileSpec resource. If the FileSpec represents a Generic repository in Artifactory that contains the Helm chart, use the following configuration as a reference:</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 3\n          namespace: my-namespace\n          chartPath: \"./myChart\"\n          releaseName: myHelmRelease\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: fileSpecResource</pre><p>If the FileSpec input resource represents a Helm repository in Artifactory, you will also need toprovide the <code class=\"code\">chartName</code>and<code class=\"code\">chartVersion</code> configuration properties:</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 3\n          namespace: my-namespace\n          chartPath: \"./myChart\"\n                  chartName: \"myChartName\"\n                  chartVersion: 0.0.1\n          releaseName: myHelmRelease\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: fileSpecResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-BuildInfoInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">BuildInfo Input</h6></div></div></div><p>A HelmDeploy step with a BuildInfo input resource. When using the BuildInfo input resource, use the <code class=\"code\">chartPath</code> property to specify where the Helm chart file is in the BuildInfo resource. If the BuildInfo represents a Generic repository in Artifactory that contains the Helm chart, use the following configuration as a reference:</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 3\n          namespace: my-namespace\n          chartPath: \"./myChart\"\n          releaseName: myHelmRelease\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: buildInfoResource</pre><p>If the BuildInfo input resource represents a Helm repository in Artifactory, you will also need toprovide the <code class=\"code\">chartName</code> and <code class=\"code\">chartVersion</code> configuration properties:</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 3\n          namespace: my-namespace\n          chartPath: \"./myChart\"\n                  chartName: \"myChartName\"\n                  chartVersion: 0.0.1\n          releaseName: myHelmRelease\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: buildInfoResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-ReleaseBundleInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">ReleaseBundle Input</h6></div></div></div><p>A HelmDeploy step with a ReleaseBundle input resource. When using the ReleaseBundle input resource you will need to specify where the Helm chart file is in the ReleaseBundle resource using the <span class=\"emphasis\"><em>chartPath</em></span> property.</p><p>If the ReleaseBundle represents a Generic repository in Artifactory that contains the Helm chart, please use the following configuration as a reference:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Artifactory integration is required</h3><p>You must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> when <code class=\"code\">ReleaseBundle </code>is the <code class=\"code\">inputResource</code> to <code class=\"code\">HelmDeploy</code> step. This integration will point to the Artifacoty that will be the source to download the ReleaseBundle that will be used in this step.</p></div><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration:\n          helmVersion: 3\n          namespace: my-namespace\n          chartPath: \"./myChart\"\n          releaseName: myHelmRelease\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n            - name: artifactory_integration\n          inputResources:\n            - name: releaseBundleResource</pre><p>If the ReleaseBundle input resource represents a Helm repository in Artifactory, you will also have to specify <span class=\"emphasis\"><em>chartName</em></span> and <span class=\"emphasis\"><em>chartVersion</em></span> configuration properties:</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: helmDeployPipeline   \n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration:\n          helmVersion: 3\n          namespace: my-namespace\n          chartPath: \"./myChart\"\n          chartName: \"myChartName\"\n          chartVersion: 0.0.1\n          releaseName: myHelmRelease\n          lint: true\n          lintFlags: \"--strict\"\n          test: true\n          testFlags: \"--parallel\"\n          valueFilePaths:\n            - values/values1.yaml\n            - values/values2.yaml\n          integrations:\n            - name: kubernetes_integration\n                        - name: artifactory_integration \n          inputResources:\n            - name: releaseBundleResource</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-Helm2\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Helm 2</h6></div></div></div><p>A HelmDeploy step using Helm 2.</p><p><span class=\"bold\"><strong>HelmDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmDeployPipeline\n    steps:\n      - name: helmDeployStep\n        type: HelmDeploy\n        configuration: \n          helmVersion: 2\n          namespace: my-namespace\n          releaseName: myHelmRelease\n          integrations:\n            - name: kubernetes_integration\n          inputResources:\n            - name: helmChartResource</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-01e5ef9a-3e52-6e5a-6020-4e86df3d5edf_id_HelmDeploy-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>HelmDeploy</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>helm init --client-only (if the Helm version is 2)</p></li><li class=\"listitem\"><p>jfrog rt config (if there is a HelmChart resource input, to configure the JFrog CLI with the Artifactory credentials)</p></li><li class=\"listitem\"><p>jfrog rt use (if there is a HelmChart resource input, to set the current default Artifactory configuration)</p></li><li class=\"listitem\"><p>helm fetch (if there is a HelmChart resource input and the Helm version is 2, to fetch the chart)</p></li><li class=\"listitem\"><p>helm pull (if there is a HelmChart resource input and the Helm version is 3, to fetch the chart)</p></li><li class=\"listitem\"><p>replace_envs (if there are valueFilePaths, to replace variable placeholders)</p></li><li class=\"listitem\"><p>helm lint (if lint is true)</p></li><li class=\"listitem\"><p>helm --dry-run (if dryRun is true)</p></li><li class=\"listitem\"><p>helm (deploy)</p></li><li class=\"listitem\"><p>helm test (if test is true)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "Ynq0F7uAg46phEgvu5MmcA", "topic": {"id": "Ynq0F7uAg46phEgvu5MmcA", "title": "HelmPublish", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-cbf95b67-437e-1121-01a5-ce65126b4693\" data-permalink=\"creating-pipelines/pipelines-steps/helmpublish.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680860315\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>HelmPublish </strong></span>step publishes a Helm chart and associated build info from a location in a Git repo to a Helm repository in Artifactory.</p><p>This step uses the <code class=\"code\">helm package</code> command to publish the collection of Helm files in the <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> to Artifactory.</p><p>The step can optionally publish build info with the Helm chart to Artifactory using the <a class=\"link ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/P1nvfSf9oV0MY3jJGqMB_g?section=UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_autoPublishBuildInfo\" data-ft-internal-link=\"intercept\"><code class=\"code\">autoPublishBuildInfo</code></a> flag.</p><p>Once the Helm chart is published to Artifactory, it can be deployed to a Kubernetes cluster using <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/ULtmnqkvN~7OS8gReJZ55w\" title=\"HelmDeploy\" data-ft-internal-link=\"intercept\">HelmDeploy</a>.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for HelmPublish native step is as follows:</p><p><span class=\"bold\"><strong>HelmPublish</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: HelmPublish\n        configuration:\n          #inherits all the tags from bash\n          helmVersion:       &lt;2 | 3&gt;                               # optional, defaults to 2\n          chartPath:         &lt;path string&gt;\n          flags:             &lt;option string&gt;                       # optional\n          lint:              &lt;true | false&gt;                        # optional, default false\n          lintFlags:         &lt;string&gt;                              # optional\n          valueFilePaths:                                          # optional\n            - &lt;path and filename&gt;\n          autoPublishBuildInfo: &lt;true | false&gt;                     # default false          \n          inputResources:\n            - name:         &lt;GitRepo resource&gt;                     # required\n          outputResources:\n            - name:         &lt;HelmChart resource&gt;                   # required\n            - name:         &lt;BuildInfo resource&gt;                   # optional\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">HelmPublish </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a> resource that contains the Helm chart.</p><p>The step will package the chart into a versioned chart archive file.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/1qTcM0hlo~cqnbXCLIVC1g\" title=\"HelmChart\" data-ft-internal-link=\"intercept\">HelmChart</a> resource to update. The <code class=\"code\">version</code> property of the HelmChart is automatically set to the new chart version.</p><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource when <code class=\"code\">autoPublishBuildInfo</code> is set to true. If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> is set as an environment variable for the pipeline or the step, that name and/or number is used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number.</code></p></td><td class=\"td\"><p>Required</p><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">helmVersion</code></p></td><td class=\"td\"><p>A number representing the major version of Helm to use. Can be 2 or 3. Defaults to 2.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chartPath</code></p></td><td class=\"td\"><p>The path to the Helm chart in the GitRepo</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">flags</code></p></td><td class=\"td\"><p>Command line options to pass to the <a class=\"link ft-external-link\" href=\"https://helm.sh/docs/helm/#helm-package\" rel=\"noopener\" target=\"_blank\">helm package</a> command.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">lint</code></p></td><td class=\"td\"><p>When true, performs a <a class=\"link ft-external-link\" href=\"https://v2.helm.sh/docs/helm/#helm-lint\" rel=\"noopener\" target=\"_blank\">lint</a> test to verify that the chart is well formed.</p><p>Defaults to false.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">lintFlags</code></p></td><td class=\"td\"><p>Options string to pass to the <a class=\"link ft-external-link\" href=\"https://helm.sh/docs/helm/helm_lint/\" rel=\"noopener\" target=\"_blank\"><code class=\"code\">helm lint</code></a>command.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">valueFilePaths</code></p></td><td class=\"td\"><p>Specifies values YAML file(s) that will be used in the lint command <a class=\"link ft-external-link\" href=\"https://helm.sh/docs/helm/helm_lint/\" rel=\"noopener\" target=\"_blank\"> helm lint</a> command.</p><p>All environment variable references in the specified file(s) will be automatically replaced with values of matching runtime environment variables.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><span id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_autoPublishBuildInfo\"></span> <code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When true, publishes build info with the Helm chart.</p><p>Default is false.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a HelmPublish step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-PublishtoArtifactoryusingHelm3\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish to Artifactory using Helm 3</h6></div></div></div><p>A HelmPublish step using Helm 3 to publish to Artifactory.</p><p><span class=\"bold\"><strong>HelmPublish</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmPublishPipeline\n    steps:\n      - name: helmPublishStep\n        type: HelmPublish\n        configuration: \n          helmVersion: 3\n          chartPath: \"./myChart\"\n          inputResources:\n            - name: gitRepoResource\n          outputResources:\n            - name: helmChartResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-Usinglintandvaluesyaml\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using lint and values.yaml</h6></div></div></div><p>A HelmPublish step with lint, using a values.yaml file, added before publishing the Helm chart.</p><p><span class=\"bold\"><strong>HelmPublish</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmPublishPipeline\n    steps:\n      - name: helmPublishStep\n        type: HelmPublish\n        configuration: \n          helmVersion: 3\n          chartPath: \"./myChart\"\n          lint: true\n          lintFlags: \"--strict\"\n          valueFilePaths:\n            - values.yaml\n          inputResources:\n            - name: gitRepoResource\n          outputResources:\n            - name: helmChartResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-PublishBuildInfo\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish Build Info</h6></div></div></div><p>A HelmPublish step that publishes build info.</p><p><span class=\"bold\"><strong>HelmPublish</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmPublishPipeline\n    steps:\n      - name: helmPublishStep\n        type: HelmPublish\n        configuration: \n          helmVersion: 3\n          chartPath: \"./myChart\"\n          autoPublishBuildInfo: true\n          inputResources:\n            - name: gitRepoResource\n          outputResources:\n            - name: helmChartResource\n            - name: buildInfoResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-PublishtoArtifactoryusingHelm2\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish to Artifactory using Helm 2</h6></div></div></div><p>A HelmPublish step using Helm 2 to publish to Artifactory.</p><p><span class=\"bold\"><strong>HelmPublish</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: helmPublishPipeline\n    steps:\n      - name: helmPublishStep\n        type: HelmPublish\n        configuration: \n          helmVersion: 2\n          chartPath: \"./myChart\"\n          inputResources:\n            - name: gitRepoResource\n          outputResources:\n            - name: helmChartResource\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-010e3b6b-ddad-d3aa-8996-c8aa192ec838_id_HelmPublish-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>HelmPublish</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (to configure the JFrog CLI with the Artifactory credentials)</p></li><li class=\"listitem\"><p>jfrog rt use (to set the current default Artifactory configuration)</p></li><li class=\"listitem\"><p>helm init --client-only (if the Helm version is 2)</p></li><li class=\"listitem\"><p>replace_envs (if lint is true and there are valueFilePaths, to replace variable placeholders)</p></li><li class=\"listitem\"><p>helm lint (if lint is true)</p></li><li class=\"listitem\"><p>helm package</p></li><li class=\"listitem\"><p>jfrog rt upload (upload the Helm chart)</p></li><li class=\"listitem\"><p>write_output (to update the version in the output HelmChart resource)</p></li><li class=\"listitem\"><p>jfrog rt build-collect-env (if autoPublishBuildInfo is true, collect environment variables)</p></li><li class=\"listitem\"><p>jfrog rt build-publish (if autoPublishBuildInfo is true, publish the build info)</p></li><li class=\"listitem\"><p>write_output (if autoPublishBuildInfo is true, to update the version in the output BuildInfo resource)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "zPjXj11mkyNDjfCPKRiVzA", "topic": {"id": "zPjXj11mkyNDjfCPKRiVzA", "title": "Jenkins", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-4b83d850-1ff8-e6be-1c98-d097d7e733be\" data-permalink=\"creating-pipelines/pipelines-steps/jenkins.html\" data-publication-date=\"1695975147\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1693903487\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>Jenkins</strong></span> native step transfers execution to a Jenkins pipeline. For more information, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/oRndBM5La~L9dRR9WN1NTA\" title=\"Using Jenkins With Pipelines\" data-ft-internal-link=\"intercept\">Using Jenkins With Pipelines</a>.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for Jenkins native step is as follows:</p><p><span class=\"bold\"><strong>Jenkins</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: Jenkins\n        configuration:\n                  #inherits all the tags from bash\n          jenkinsJobName: &lt;string&gt;            # Jenkins job/pipeline name\n          jenkinsBranchName: &lt;string&gt;         # required for Jenkins Multibranch\n          buildParameters:\n            key1: &lt;string&gt;\n            key2: &lt;string&gt;   \n          integrations:\n            - name: &lt;jenkins integration&gt;    # required Jenkins integration\n          outputResources:                   # optional\n            - name: &lt;resource name&gt;          \n\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">Jenkins</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w?section=UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-configurationconfiguration\" title=\"configuration\" data-ft-internal-link=\"intercept\">Bash step configuration tags</a>, with these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify a named <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/dgnYf5uQD6VqCXGy09~7yg\" title=\"Jenkins Integration\" data-ft-internal-link=\"intercept\">Jenkins Integration</a>.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\" rowspan=\"2\"><p><code class=\"code\">jenkinsJobName</code></p><p></p></td><td class=\"td\"><p>The name of the Jenkins job/pipeline</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\" colspan=\"2\"><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>When adding the <code class=\"code\">jenkinsJobName</code>, do not include the <code class=\"code\">job</code> keyword. The only exception is when <code class=\"code\">job</code> is the name of a folder.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><span class=\"bold\"><strong>Correct</strong></span>: <code class=\"code\">jenkinsJobName: infra/test/frontend-trigger-env</code></p></li><li class=\"listitem\"><p><span class=\"bold\"><strong>Incorrect</strong></span>: <code class=\"code\">jenkinsJobName: infra/job/test/job/frontend-trigger-env</code></p></li></ul></div></div></td></tr><tr><td class=\"td\"><p><code class=\"code\">jenkinsBranchName</code></p></td><td class=\"td\"><p>Required field when the Jenkins Job is configured for multibranch. This tells pipelines which branch to execute.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">buildParameters</code></p></td><td class=\"td\"><p>Assigns any build parameters and their strings in key:value format. These parameters will be passed to the Jenkins job.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Execution takes place within the Jenkins job only. This section is not supported for this type of step.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a Jenkins step for a few different Jenkins jobs.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-FreestyleJenkinsProjectorPipeline\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Freestyle Jenkins Project or Pipeline</h6></div></div></div><p>A Jenkins step for a freestyle Jenkins project or Pipeline. Note that this example will not work with Jenkins Multibranch Pipelines, see the next example for those.</p><p>This example uses <code class=\"code\">timeoutSeconds</code> Bash tag. For more information about other Bash tags that can be used, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w?section=UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-Tags\" title=\"Tags\" data-ft-internal-link=\"intercept\">Bash</a>.</p><p><span class=\"bold\"><strong>Jenkins</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: jenkinsPipeline\n    steps:\n      - name: jenkinsStep\n        type: Jenkins\n        configuration: \n                  timeoutSeconds: 30 # uses Bash tag to set time limit, in seconds, for the step to complete\n          jenkinsJobName: myJenkinsJob\n          integrations:\n            - name: jenkins_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-JenkinsMultibranchPipeline\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Jenkins Multibranch Pipeline</h6></div></div></div><p>A Jenkins step for a Jenkins Multibranch Pipeline.</p><p><span class=\"bold\"><strong>Jenkins</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: jenkinsPipeline\n    steps:\n      - name: jenkinsStep\n        type: Jenkins\n        configuration: \n          jenkinsJobName: myJenkinsMultibranchJob\n          jenkinsBranchName: myBranchName\n          integrations:\n            - name: jenkins_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-TriggerJenkinsJobsusinganInputImageResource\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Trigger Jenkins Jobs using an Input Image Resource</h6></div></div></div><p>A Jenkins step providing an image name and tag and run number as build parameters to trigger Jenkins jobs using an input Image resource.</p><p><span class=\"bold\"><strong>Jenkins</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: jenkinsPipeline\n    steps:\n      - name: jenkinsStep\n        type: Jenkins\n        configuration: \n          jenkinsJobName: myJenkinsMultibranchJob\n          jenkinsBranchName: myBranchName\n          buildParameters:\n            imageName: \"${res_myImageResource_imageName}\"\n            imageTag: \"${res_myImageResource_imageTag}\"\n            jfrogPipelineRun: \"${run_number}\"\n          inputResources:\n            - name: myImageResource\n          integrations:\n            - name: jenkins_integration\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-TwoJenkinsJobsusingPriorityTag\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Two Jenkins Jobs using Priority Tag</h6></div></div></div><p>Two Jenkins jobs that use the <code class=\"code\">Priority</code> Bash tag. For more information about other Bash tags that can be used, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w?section=UUID-48cbe697-db23-5bb5-5b96-cd17f74afba7_id_Bash-Tags\" title=\"Tags\" data-ft-internal-link=\"intercept\">Bash</a>.</p><pre class=\"programlisting\">pipelines:\n  - name: pipelines_Jen\n    steps:\n      - name: S_B_Jen_0022_1\n        type: Jenkins\n        configuration:\n          jenkinsJobName: var_output_job    \n          priority: 1 # bash tag\n          buildParameters:\n            key1: 1\n            key2: 2\n          integrations:\n            - name: i_testJenkins\n\n      - name: S_B_Jen_0022_2\n        type: Jenkins\n        configuration:\n          jenkinsJobName: var_output_job   \n          priority: 2 @ bash tag\n          buildParameters:\n            key1: 1\n            key2: 2\n          integrations:\n            - name: i_testJenkins\n          inputSteps:\n            - name : S_B_Jen_0022_1</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-fc365a83-0c59-66e7-38bf-0085e91af86b_id_Jenkins-RelatedTopics\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Related Topics</h5></div></div></div><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/oRndBM5La~L9dRR9WN1NTA\" title=\"Using Jenkins With Pipelines\" data-ft-internal-link=\"intercept\">Using Jenkins With Pipelines</a></p></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "kDqXGSl2C0ljp7TNv~CILA", "topic": {"id": "kDqXGSl2C0ljp7TNv~CILA", "title": "LinuxVMDeploy", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-516f3509-64b3-d265-9ce6-27633e80b038\" data-permalink=\"creating-pipelines/pipelines-steps/linuxvmdeploy.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680860242\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>LinuxVMDeploy</strong></span> native step uploads files to VMs in a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/uKn76OsVIgMB0WKw0o3knA\" title=\"VmCluster\" data-ft-internal-link=\"intercept\">VmCluster</a> resource and runs commands on the VMs. If all deployments are successful, a copy of the deploy artifacts are stored in the <code class=\"code\">${HOME}/${step_name}/rollback</code> on each VM. The file(s) may be provided in a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a>, <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a>.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for LinuxVMDeploy native step is as follows:</p><p><span class=\"bold\"><strong>LinuxVMDeploy</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: myLinuxVMDeployStep\n        type: LinuxVMDeploy\n        configuration:\n          environmentVariables:\n            dry_run:                 &lt;string&gt; # optional\n                        deploy_targets_override: &lt;string&gt; # optional\n          targetDirectory:           &lt;string&gt; # optional\n          rolloutDelaySecs:          &lt;integer&gt; # optional\n          fastFail:                  &lt;boolean&gt; # optional\n          sshUser:                   &lt;string&gt; # required\n          vmEnvironmentVariables:    &lt;string[]&gt; # optional\n          strategy:                  &lt;\"rollingUpdate\"|\"blueGreen\"&gt; # optional; default \"rollingUpdate\"\n          inputResources: \n            - name:                  &lt;VMCluster resource&gt; # 1 required (exacly 1, exactly 2 for blueGreen strategy).\n            - name:                  &lt;BuildInfo resource|FileSpec resource|ReleaseBundle resource&gt; # required (exactly 1).\n          scripts:\n            - name:                  &lt;string&gt; # required\n              context:               &lt;\"buildNode\"|\"targetCluster\"|\"currentCluster\"&gt; # required, \"currentCluster\" supported for blueGreen only.\n              commands:              &lt;string[]&gt; # optional</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">LinuxVMDeploy</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/uKn76OsVIgMB0WKw0o3knA\" title=\"VmCluster\" data-ft-internal-link=\"intercept\">VmCluster</a> resource.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a>, <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a> resource containing the file(s) to be uploaded. Exactly one must be specified.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">sshUser</code></p></td><td class=\"td\"><p>The ssh user used to connect to target VMs.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">targetDirectory</code></p></td><td class=\"td\"><p>Path of the directory where the deploy artifacts will be uploaded. The directory will be created if it does not exist.</p><p>Default directory is <code class=\"code\">&lt;sshUser's $HOME&gt;/$step_name/$run_id</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">vmEnvironmentVariables</code></p></td><td class=\"td\"><p>These variables will be exported on target VMs.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">rolloutDelaySecs</code></p></td><td class=\"td\"><p>Time in seconds to wait between deploys.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">fastFail</code></p></td><td class=\"td\"><p>If <code class=\"code\">true</code>, the step will not deploy to additional VMs after the first failure.</p><p>Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p>strategy</p></td><td class=\"td\"><p>The release strategy to be used. It can be either <code class=\"code\">rollingUpdate</code> or <code class=\"code\">blueGreen</code>.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"code\">rollingUpdate</code>: Deploy to each VM in one cluster, one after the other.</p></li><li class=\"listitem\"><p><code class=\"code\">blueGreen</code>: Deploy to one of two <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/uKn76OsVIgMB0WKw0o3knA\" title=\"VmCluster\" data-ft-internal-link=\"intercept\">VmCluster</a> resources, swapping clusters each time the LinuxVMDeploy step runs.</p></li></ul></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">scripts</code></p></td><td class=\"td\"><p>User-defined commands to run on a given context.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"code\">name:</code> name for the command.</p></li><li class=\"listitem\"><p><code class=\"code\">context:</code> where the script should run. <code class=\"code\">buildNode</code> runs on the build node. <code class=\"code\">targetCluster</code> runs on the supplied vmCluster.</p></li></ul></div><p><code class=\"code\"></code></p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-environmentvariablesenvironmentvariables\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">environment variables</h6></div></div></div><p>The following environment variables are available for user-defined scripts written in the LinuxVMDeploy step.</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col></colgroup><thead><tr><th class=\"th\"><p>Name</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">target_cluster </code></p></td><td class=\"td\"><p>The name of the VM cluster being deployed to.</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">current_cluster</code></p></td><td class=\"td\"><p>The name of the VM cluster that was last deployed to.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Supported for <code class=\"code\">blueGreen</code> strategy only.</p></div></td></tr><tr><td class=\"td\"><p><code class=\"code\">current_command</code></p></td><td class=\"td\"><p>The name of the command that was running when the step exited. This should be blank if no user-defined command was running.</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show a few ways in which a LinuxVMDeploy step can be configured.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-UploadinganAppinaFileSpecResourcetoVMsandRunningIt\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Uploading an App in a FileSpec Resource to VMs and Running It</h6></div></div></div><p>The most basic form of LinuxVMDeploy. Uses all default values. The step will upload files to the default <code class=\"code\">targetDirectory</code> and run a deploy command.</p><p><span class=\"bold\"><strong>LinuxVMDeploy</strong></span></p><pre class=\"programlisting\">resources:\n  - name: myApplication\n    type: FileSpec\n    configuration:\n      sourceArtifactory: myArtifactory\n      pattern: \"example-repo-local/myApp\"\n  - name: myVM\n    type: VmCluster\n    configuration:\n      sshKey: mySSHKey\n      targets:\n        - 0.0.0.0\n        - 1.1.1.1\npipelines: \n  - name: linuxVMDeployPipeline\n    steps:\n      - name: linuxVMDeploy\n        type: LinuxVMDeploy\n        configuration:\n          inputResources:\n            - name: myVM\n            - name: myApplication\n          scripts:\n            - name: deployCommand\n              context: targetCluster \n              commands:\n                - \"./myApp\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-UploadinganAppinaBuildInfoResourcetoVMsRunningpostDeploycommandandHandlingRollback\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Uploading an App in a BuildInfo Resource to VMs, Running postDeploy command, and Handling Rollback.</h6></div></div></div><p>Upload a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource and try to run <code class=\"code\">deployCommand</code> and <code class=\"code\">postDeploy</code> commands. If <code class=\"code\">deployCommand</code> succeeds, then postDeploy will run. If there is a failure on a VM (in case a command or <code class=\"code\">postDeploy</code> did not succeed), then <code class=\"code\">rollbackCommand</code> will run on any VM that deployed successfully.</p><p><span class=\"bold\"><strong>LinuxVMDeploy</strong></span></p><pre class=\"programlisting\">resources:\n  - name: myApplication\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: myArtifactory\n      buildName: myBuild\n      buildNumber: 1\n  - name: myVM\n    type: VmCluster\n    configuration:\n      sshKey: mySSHKey\n      targets:\n        - 0.0.0.0\n        - 1.1.1.1\npipelines: \n  - name: linuxVMDeployPipeline\n    steps:\n      - name: linuxVMDeploy\n        type: LinuxVMDeploy\n        configuration:\n          inputResources:\n            - name: myVM\n            - name: myApplication\n          sshUser: myUser\n                  scripts:\n            - name: deployCommand\n              context: targetCluster \n              commands:\n                - \"./myApp\"\n          onFailure:\n            - 'if [ \"$current_command\" == \"deployCommand\" ]; then ./doRollback.sh fi'\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-OverridingVmClusterTargets\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Overriding VmCluster Targets</h6></div></div></div><p>In this example, a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/uKn76OsVIgMB0WKw0o3knA\" title=\"VmCluster\" data-ft-internal-link=\"intercept\">VmCluster</a> resource is supplied alongside <code class=\"code\">deploy_targets_override</code> environment variable. Artifacts will be deployed to the targets specified in <code class=\"code\">deploy_targets_override</code>. The ssh keys from the VmCluster resource will still be used.</p><p><span class=\"bold\"><strong>LinuxVMDeploy</strong></span></p><pre class=\"programlisting\">resources:\n  - name: myApplication\n    type: FileSpec\n    configuration:\n      sourceArtifactory: myArtifactory\n      pattern: \"example-repo-local/myApp\"\n  - name: myVM\n    type: VmCluster\n    configuration:\n      sshKey: s_VM_DEPLOY_SSHKEY\n      targets:\n        - 0.0.0.0\n        - 1.1.1.1\npipelines:\n  - name: linuxVMDeployPipeline\n    steps:\n      - name: linuxVMDeploy\n        type: LinuxVMDeploy\n        configuration:\n          environmentVariables:\n                        deploy_targets_override: \"123.456.78.90,127.0.0.1\"\n          inputResources:\n            - name: myVM\n            - name: myApplication\n          sshUser: myUser\n          scripts:\n            - name: deployCommand\n              context: targetCluster \n              commands:\n                - \"./myApp\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-PassingEnvironmentVariablestoCommandsRunontheVM\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Passing Environment Variables to Commands Run on the VM</h6></div></div></div><p>In this example, a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/uKn76OsVIgMB0WKw0o3knA\" title=\"VmCluster\" data-ft-internal-link=\"intercept\">VmCluster</a> resource is supplied with <code class=\"code\">vmEnvironmentVariables</code>. These variables will be available to user-defined commands running on the <code class=\"code\">targetCluster</code>.</p><p><span class=\"bold\"><strong>LinuxVMDeploy</strong></span></p><pre class=\"programlisting\">resources:\n  - name: myApplication\n    type: FileSpec\n    configuration:\n      sourceArtifactory: myArtifactory\n      pattern: \"example-repo-local/myApp\"\n  - name: myVM\n    type: VmCluster\n    configuration:\n      sshKey: s_VM_DEPLOY_SSHKEY\n      targets:\n        - 0.0.0.0\n        - 1.1.1.1\npipelines: \n  - name: linuxVMDeployPipeline\n    steps:\n      - name: linuxVMDeploy\n        type: LinuxVMDeploy\n        configuration:\n          vmEnvironmentVariables:\n            - \"LOG_LEVEL=DEBUG\"\n          inputResources:\n            - name: myVM\n            - name: myApplication\n          sshUser: myUser\n          scripts:\n            - name: deployCommand\n              context: targetCluster \n              commands:\n                - \"./myApp $LOG_LEVEL\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-SettingupablueGreenDeployStrategy\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Setting up a blueGreen Deploy Strategy</h6></div></div></div><p>In this example, two <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/uKn76OsVIgMB0WKw0o3knA\" title=\"VmCluster\" data-ft-internal-link=\"intercept\">VmCluster</a> resources are supplied and a strategy of <code class=\"code\">blueGreen</code> is specified. Each time the step runs, <code class=\"code\">targetCluster</code> and <code class=\"code\">currentCluster</code> swap between the two supplied VmCluster resources.</p><p><span class=\"bold\"><strong>LinuxVMDeploy</strong></span></p><pre class=\"programlisting\">resources:\n  - name: myApplication\n    type: FileSpec\n    configuration:\n      sourceArtifactory: myArtifactory\n      pattern: \"example-repo-local/myApp\"\n  - name: myVM\n    type: VmCluster\n    configuration:\n      sshKey: s_VM_DEPLOY_SSHKEY\n      targets:\n        - 0.0.0.0\n        - 1.1.1.1\npipelines: \n  - name: linuxVMDeployPipeline\n    steps:\n      - name: linuxVMDeploy\n        type: LinuxVMDeploy\n        configuration:\n          vmEnvironmentVariables:\n            - \"LOG_LEVEL=DEBUG\"\n          inputResources:\n            - name: myBlueCluster\n            - name: myGreenCluster\n            - name: myApplication\n          sshUser: myUser\n          strategy: blueGreen\n          scripts:\n            - name: deployCommand\n              context: targetCluster \n              commands:\n                - \"./myApp $LOG_LEVEL\"\n                        - name: cleanupCommand\n              context: currentCluster \n              commands:\n                - \"./stopApp\"\n            - name: swapCluster\n              context: buildNode\n              commands:\n                - \"./swapLoadBalancer $target_cluster\"\n\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-c0f5cad0-49c7-26de-30d3-e1942bca7bbe_id_LinuxVMDeploy-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>LinuxVMDeploy</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt download (download files from FileSpec, BuildInfo or ReleaseBundle)</p></li><li class=\"listitem\"><p>tar (compress all files to be uploaded to VMs)</p></li><li class=\"listitem\"><p>scp (upload compressed artifacts to VMs)</p></li><li class=\"listitem\"><p>ssh\"mkdir -p\" (create the targetDirectory if it does not exist)</p></li><li class=\"listitem\"><p>Script commands run on target VMs via ssh or on the build node itself if context is \"buildNode\".</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: circle; \"><li class=\"listitem\"><p>Commands run in the order they were written in the yaml.</p></li><li class=\"listitem\"><p>Commands running on the target cluster will have access to variables defined in vmEnvironmentVariables.</p></li><li class=\"listitem\"><p>A rollback archive is created on the targetCluster (only happens when entire step succeeds)</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: square; \"><li class=\"listitem\"><p>Rollback directory location: /home/$ssh_user/LinuxVMDeploy/rollback</p></li><li class=\"listitem\"><p>mkdir -p (create rollback directory if it does not exist).</p></li><li class=\"listitem\"><p>rm -rf $rollbackDirectory/* (remove any old rollback artifacts)</p></li><li class=\"listitem\"><p>cp -r $targetDirectory/* $rollbackDirectory (copy all uploaded artifacts to rollback archive)</p></li></ul></div></li></ul></div></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "2nt4qSWRrbIAxrL6ftgX_g", "topic": {"id": "2nt4qSWRrbIAxrL6ftgX_g", "title": "Matrix", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-95ab11fb-8c0b-dc4a-7bcf-010b042fd378\" data-permalink=\"creating-pipelines/pipelines-steps/matrix.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1692167093\" data-time-modified=\"1693028682\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-4381733b-39ef-3a7a-6e91-78a42323ce86\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>Matrix</strong></span> step commences multiple parallel build processes across multiple containers, with different settings for each.</p><p>Common use cases for Matrix steps are:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>Splitting a large test suite into smaller units, and executing them in parallel to reduce total execution time.</p></li><li class=\"listitem\"><p>Testing against multiple values of environment variables or multiple runtime images.</p></li><li class=\"listitem\"><p>Testing against multiple base operating system versions.</p></li></ul></div><p>The matrix configuration can specify:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>Multiple sets of environment variable definitions</p></li><li class=\"listitem\"><p>Multiple runtime images</p></li><li class=\"listitem\"><p>Multiple node pools</p></li><li class=\"listitem\"><p>Multiple operating systems</p></li></ul></div><p>The Matrix step executes the specified shell scripts multiple times in parallel steplets, in each specified runtime for each set of environment variables on each specified platform. For example, if a Matrix step specifies 3 sets of environment variables and 2 runtime images, it will run a total of 6 steplets (3 times in runtime 1, 3 times in runtime 2). If the Matrix step also specifies 2 node pools, it will run 12 steplets.</p><p>A Matrix step can be optionally preceded by a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/kohJX4jGwXj9k60unPZ2wA\" title=\"PreMatrix\" data-ft-internal-link=\"intercept\">PreMatrix</a> step to prepare the build node environment for the steplets, and a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/aOosLRoIFNB4e8I37qWbEQ\" title=\"PostMatrix\" data-ft-internal-link=\"intercept\">PostMatrix</a> step to aggregate information produced by the steplets. For more information, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/U6N8MvqKGwzBu9wZBsaltw\" title=\"Using the Matrix Step\" data-ft-internal-link=\"intercept\">Using the Matrix Step</a>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Matrix step is available for Linux nodes only.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4381733b-39ef-3a7a-6e91-78a42323ce86_id_Matrix-Usage\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Usage</h5></div></div></div><p><span class=\"bold\"><strong>Matrix</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: Matrix\n        stepMode: Bash\n        configuration: \n          #inherits from Bash \n          concurrency: &lt;string&gt;       \n          multiNode: &lt;boolean&gt;        # optional, only needed if steplets \n                                      # need to execute on separate nodes\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onExecute:                 # required     \n            - echo \"Executing steplet $step_name\"\n            - echo \"env1 = $env1\"\n            - echo \"env2 = $env2\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: # always\n            - echo \"Cleaning up some stuff\"\n\n        stepletMultipliers:\n           nodePools:                 # wants to execute step against       \n            - windows                 # multiple operating systems\n            - ubuntu_18\n            - ubuntu_16\n \n          environmentVariables:       # optional, only needed if user\n            - env1: one               # wants to execute step against\n              env2: two               # multiple values of env\n            - env1: abc                \n              env2: xyz\n\n          runtimes:                   # optional, only needed if user\n            - type: image             # wants to execute step against \n                image:                # multiple images\n                auto:                 \n                  language:\n                  version:\n                custom:\n                  &lt;same config as Bash&gt;\n              image:               \n                auto:\n                  language:\n                  version:\n                custom:\n                  &lt;same config as Bash&gt;\n\n          fastFail: &lt;true/false&gt;     # default false. If specified, matrix\n                                     # step fails when any steplet fails, \n                                     # unless specified in allowFailures\n\n          allowFailures:             # optional, array of combinations\n            - nodePool:              # that are allowed to fail  \n              environmentVariables:\n                env1: abc                              \n                env2: xyz\n              runtime:               \n\n          exclude:                   # optional, array of combinations\n            - nodePool:              # that are not executed  \n              environmentVariables:\n                env1: one\n                env2: two\n              runtime:  \n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4381733b-39ef-3a7a-6e91-78a42323ce86_id_Matrix-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"idm45512166403104\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512166401856\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">Matrix</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512166400816\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">stepmode</h6></div></div></div><p>Specifies the runtime OS mode. May be either <code class=\"code\">Bash</code> or <code class=\"code\">PowerShell</code>. If not specified, defaults to <code class=\"code\">Bash</code>.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512166399424\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputStep</code></p></td><td class=\"td\"><p>May specify a PreMatrix preamble step.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">multiNode</code></p></td><td class=\"td\"><p>When <code class=\"code\">true</code>, steplets will be required to run on separate nodes. Default is <code class=\"code\">false</code>.</p><p>For more information, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/U6N8MvqKGwzBu9wZBsaltw?section=UUID-f71e028c-9606-192f-73ee-a341a49f15ba_id_UsingtheMatrixStep-Multi-nodeMatrix\" title=\"Multi-node Matrix\" data-ft-internal-link=\"intercept\">Multi-node Matrix</a>.</p><div class=\"note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>When both <code class=\"code\">multiNode</code> and <code class=\"code\">concurrency</code> are used, <code class=\"code\">multiNode</code> takes precedence.</p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">concurrency</code></p></td><td class=\"td\"><p>Define the number of steplets that can concurrently run on a node. This helps in optimizing resource usage and ensures that the node efficiently handles steplets without being overwhelmed.</p><div class=\"note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>When both <code class=\"code\">multiNode</code> and <code class=\"code\">concurrency</code> are used, <code class=\"code\">multiNode</code> takes precedence.</p></div></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512166397136\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">stepletMultipliers</h6></div></div></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">nodePools</code></p></td><td class=\"td\"><p>A collection of node pool names. Recognized only when <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/U6N8MvqKGwzBu9wZBsaltw?section=UUID-f71e028c-9606-192f-73ee-a341a49f15ba_id_UsingtheMatrixStep-Multi-nodeMatrix\" title=\"Multi-node Matrix\" data-ft-internal-link=\"intercept\"><code class=\"code\">multiNode</code> is set to true</a>. When specified, the step will be executed in each of the defined <code class=\"code\">runtimes</code> for each set of <code class=\"code\">environmentVariables</code> on each node pool.</p><p>If not defined, the step will be executed in the default node pool, or the node pool specified in the <code class=\"code\">configuration</code> section.</p><p><span class=\"bold\"><strong>Example</strong></span></p><pre class=\"programlisting\">steps:\n- name: step_1\n  type: Matrix\n  stepMode: Bash\n  configuration:\n    multiNode: true\n  stepletMultipliers:\n    environmentVariables:\n      - foo: foo\n      - bar: bar\n    nodePools:\n      - gcp\n      - aws </pre></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">environmentVariables</code></p></td><td class=\"td\"><p>A collection of sets of environment variable definitions. Each set of definitions will be used in an execution of a steplet in each of the defined <code class=\"code\">runtimes</code>.</p><p>If not defined, then a single steplet will execute for each of the defined <code class=\"code\">runtimes</code> on each of the specified <code class=\"code\">nodePools</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">runtimes</code></p></td><td class=\"td\"><p>A collection of runtime definitions. The step will be executed in each defined runtime, on each of the specified <code class=\"code\">nodePools</code>, for each set of <code class=\"code\">environmentVariables</code>.</p><p>If not defined, then each steplet will be executed in the default runtime, or the runtime specified in the <code class=\"code\">configuration</code> section.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">fastFail</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code> the step fails when any steplet fails, unless permitted to fail in <code class=\"code\">allowFailures.</code></p><p>Default is false.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">allowFailures</code></p></td><td class=\"td\"><p>A collection that specifies the combinations of <code class=\"code\">nodepools</code>, <code class=\"code\">environmentVariables</code>, and <code class=\"code\">runtimes</code> that are permitted to fail without terminating the entire Matrix step. This only has effect when <code class=\"code\">fastFail</code> is set to <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">exclude</code></p></td><td class=\"td\"><p>A collection that specifies the combinations of <code class=\"code\">nodepools</code>, <code class=\"code\">environmentVariables</code>, and <code class=\"code\">runtimes</code> that will not be executed.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512166437904\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Main commands to execute for the step</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><div class=\"caution\" dir=\"ltr\"><h3 class=\"title\">Caution</h3><p><code class=\"code\">onExecute</code>,&nbsp;<code class=\"code\">onStart</code>,&nbsp;<code class=\"code\">onSuccess</code>,&nbsp;<code class=\"code\">onFailure</code>, and&nbsp;<code class=\"code\">onComplete</code>&nbsp;are reserved keywords. Using these keywords in any other context in your execution scripts can cause unexpected behavior.</p></div></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4381733b-39ef-3a7a-6e91-78a42323ce86_section-idm73356357518120\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4381733b-39ef-3a7a-6e91-78a42323ce86_section-idm71678178759062\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Example 1</h6></div></div></div><p>This is an example of how to use the Matrix step to perform a build activity.</p><p><span class=\"bold\"><strong>Matrix Step Example</strong></span></p><pre class=\"programlisting\">      - name: matrix_example\n        type: Matrix\n        stepMode: Bash\n        configuration:\n          inputSteps: \n            - name: matrix_fan_out_example\n\n        stepletMultipliers:\n          environmentVariables:             # Sets of environment variables for steplets\n            - animal:    dog                            # - Set 1\n              mineral:   copper\n              vegetable: carrot\n            - animal:    goat                           # - Set 2\n              mineral:   iron\n              vegetable: broccoli\n            - animal:    lizard             # - Set 3\n              mineral:   lead        \n\n          nodePools:\n                - gcp\n                - aws \n          \n          runtimes:                         # Runtimes for steplets\n            - type: image\n              image:\n                auto:\n                  language: java\n                  versions:\n                    - 13.0\n            - type: image\n              image:\n                auto:\n                  language: node\n                  versions:\n                    - 8.17.0\n        execution:\n          onExecute:\n            - echo \"I am executing matrix steplet ${steplet_id}\"\n            - echo \"Envs animal= $animal , mineral = $mineral , vegetable = $vegetable\"\n            - echo \"Runtime image name: $step_image_name | Runtime image tag: $step_image_tag\"\n</pre><p>When run, the above example will execute in a total of 6 steplets: in 2 runtimes for each of 3 sets of environment variables:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Runtime</p></th><th class=\"th\"><p>Set 1</p></th><th class=\"th\"><p>Set 2</p></th><th class=\"th\"><p>Set 3</p></th></tr><tr><th class=\"th\"><p>java 13.0</p></th><td class=\"td\"><p>dog, copper, carrrot</p></td><td class=\"td\"><p>goat, iron, broccoli</p></td><td class=\"td\"><p>lizard, lead, &lt;null&gt;</p></td></tr></thead><tbody><tr><th class=\"th tableheader\"><p>node 8.17.0</p></th><td class=\"td\"><p>dog, copper, carrrot</p></td><td class=\"td\"><p>goat, iron, broccoli</p></td><td class=\"td\"><p>lizard, lead, &lt;null&gt;</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4381733b-39ef-3a7a-6e91-78a42323ce86_section-idm73356357518122\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Example 2 - allowFailures, Exclude, fastFail</h6></div></div></div><pre class=\"programlisting\">pipelines:\n  - name: S_Matrix_0052\n    steps:           \n      - name: S_Matrix_0052\n        type: Matrix\n        stepMode: Bash\n        stepletMultipliers:\n          fastFail: true\n          allowFailures:\n            - environmentVariables:\n                delay: 1\n                fail: 'true'\n              nodePool: windows\n              runtime: host\n            - environmentVariables:\n                delay: 1\n                fail: 'true'\n              nodePool: ubuntu\n              runtime: host\n          exclude:\n            - environmentVariables:\n                delay: 1\n                fail: 'true'\n              nodePool: windows\n              runtime: host\n            - environmentVariables:\n                delay: 1\n                fail: 'true'\n              nodePool: ubuntu\n              runtime: host \n          environmentVariables:\n            - delay: 1\n              fail: 'true'\n            - delay: 2\n              fail: 'false'\n            - delay: 3\n              fail: 'false'\n            - delay: 5\n              fail: 'false' \n        execution:\n          onStart:\n            - sleep \"$delay\"\n          onExecute:\n            - echo \"I am on matrix step\"\n            - |\n              [ $fail == 'false' ] \n            - ls -l .</pre></section><section class=\"section\" dir=\"ltr\" id=\"UUID-4381733b-39ef-3a7a-6e91-78a42323ce86_section-idm4604744692739233843352611803\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Example 3 - concurrency</h6></div></div></div><pre class=\"programlisting\">pipelines:\n  - name: matrix_check\n    steps:\n      - name: step1\n        type: Matrix\n        stepMode: Bash\n        configuration: \n          concurrency: 50\n        stepletMultipliers:\n          environmentVariables:            # Sets of environment variables for steplets\n          - animal:    dog                 # - Set 1\n            mineral:   copper\n            vegetable: carrot\n          - animal:    goat                # - Set 2\n            mineral:   iron\n            vegetable: broccoli\n          - animal:    lizar1d             # - Set 3\n            mineral:   lea1d\n          - animal:    liza2rd             # - Set 3\n            mineral:   le2ad  \n          - animal:    liza3rd             # - Set 3\n            mineral:   lea3d\n          - animal:    liza4rd             # - Set 3\n            mineral:   lea4d\n          - animal:    liza5rd             # - Set 3\n            mineral:   le5ad  \n          - animal:    liz6ard             # - Set 3\n            mineral:   lea6d  \n          - animal:    lizar7d             # - Set 3\n            mineral:   le7ad  \n          - animal:    lizar8d             # - Set 3\n            mineral:   lea8d \n          - animal:    liza9rd             # - Set 3\n            mineral:   lea9d \n          - animal:    liza10rd            # - Set 3\n            mineral:   lead10 \n          - animal:    liza11rd            # - Set 3\n            mineral:   lead11  \n          - animal:    liza12rd            # - Set 3\n            mineral:   lead12  \n          - animal:    lizar13d            # - Set 3\n            mineral:   lead13\n          - animal:    d1og14              # - Set 1\n            mineral:   copper14\n            vegetable: carrot14\n          - animal:    go1at15             # - Set 2\n            mineral:   ir1on15\n            vegetable: broccoli15\n          - animal:    lizard16            # - Set 3\n            mineral:   lead16\n          - animal:    lizard17            # - Set 3\n            mineral:   lead17\n          - animal:    lizard18            # - Set 3\n            mineral:   lead18\n          - animal:    lizard19            # - Set 3\n            mineral:   lead20\n          - animal:    lizard20            # - Set 3\n            mineral:   lead20\n          - animal:    lizard21            # - Set 3\n            mineral:   lead21\n          - animal:    lizard22            # - Set 3\n            mineral:   lead22\n          - animal:    lizard23            # - Set 3\n            mineral:   lead23\n          - animal:    lizard24            # - Set 3\n            mineral:   lead24\n          - animal:    lizard25            # - Set 3\n            mineral:   lead25 \n          - animal:    lizard26            # - Set 3\n            mineral:   lead26\n          - animal:    lizard27            # - Set 3\n            mineral:   lead27\n          - animal:    lizard28            # - Set 3\n            mineral:   lead28\n          - animal:    dog29               # - Set 1\n            mineral:   copper29\n            vegetable: carrot29\n          - animal:    goat30              # - Set 2\n            mineral:   iron30\n            vegetable: broccoli30\n          - animal:    lizard31            # - Set 3\n            mineral:   lead31\n          - animal:    lizard32            # - Set 3\n            mineral:   lead32  \n          - animal:    lizard33            # - Set 3\n            mineral:   lead33\n          - animal:    lizard34            # - Set 3\n            mineral:   lead34\n          - animal:    lizard35            # - Set 3\n            mineral:   lead35  \n          - animal:    lizard36            # - Set 3\n            mineral:   lead36  \n          - animal:    lizard37            # - Set 3\n            mineral:   lead37  \n          - animal:    lizard38            # - Set 3\n            mineral:   lead38\n          - animal:    lizard39            # - Set 3\n            mineral:   lead39\n          - animal:    lizard40            # - Set 3\n            mineral:   lead40  \n          - animal:    lizard41            # - Set 3\n            mineral:   lead41  \n          - animal:    lizard42            # - Set 3\n            mineral:   lead42\n          - animal:    lizard43            # - Set 3\n            mineral:   lead43     \n          - animal:    dog44               # - Set 1\n            mineral:   copper44\n            vegetable: carrot44\n          - animal:    goat45              # - Set 2\n            mineral:   iron45\n            vegetable: broccoli45\n          - animal:    lizard46            # - Set 3\n            mineral:   lead46\n          - animal:    lizard47            # - Set 3\n            mineral:   lead47  \n          - animal:    lizard48            # - Set 3\n            mineral:   lead48\n          - animal:    lizard49            # - Set 3\n            mineral:   lead49\n          - animal:    lizard50            # - Set 3\n            mineral:   lead50\n \n        execution:\n          onExecute:\n            - echo \"I am executing matrix steplet ${steplet_id}\"\n            - echo \"Envs animal= $animal , mineral = $mineral , vegetable = $vegetable\n</pre></section></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "eHyRtoodF3hKwBKCThEzwQ", "topic": {"id": "eHyRtoodF3hKwBKCThEzwQ", "title": "MvnBuild", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-1f0f67cd-ecc3-8ad1-1be6-db0055c276f2\" data-permalink=\"creating-pipelines/pipelines-steps/mvnbuild.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1695716170\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce\" lang=\"en\" xml:lang=\"en\"><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-Overview\"><div class=\"titlepage\"></div><p>The <span class=\"bold\"><strong>MvnBuild</strong></span> native step performs a Maven project build on files in a Git repository. Optionally, it can also publish build information to Artifactory.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>If your maven project is already using the <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-6b2eff06-1e81-7103-fa64-b9e573d33a9e\" data-ft-xmap-link=\"intercept\">Maven Artifactory plugin</a>, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/woiTvf7CtutKcBTRVoeSLA\" title=\"Setting Up Maven Builds for Pipelines\" data-ft-internal-link=\"intercept\"> Setting Up Maven Builds for Pipelines</a> for information about configuring your Maven settings for use in JFrog Pipelines.<span class=\"linktextprovider\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_N651686d3583d6\" style=\"display:none !important;\">Ecosystem Integration</span></p></div><p>Using this step automatically selects Java as the language and bootstraps the runtime environment in the node appropriately.</p></section><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The <code class=\"code\">MvnBuild</code> native step uses Java runtime image by default. If runtime image of any other type is configured at pipeline-level for this native step, it will be ignored.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p><span class=\"bold\"><strong>MvnBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: MvnBuild\n        configuration:\n          #inherits all the tags from bash\n          mvnCommand:           &lt;string&gt;      # optional\n          sourceLocation:       &lt;string&gt;      # optional\n          resolverSnapshotRepo: &lt;string&gt;      # optional\n          resolverReleaseRepo:  &lt;string&gt;      # optional\n          deployerSnapshotRepo: &lt;string&gt;      # optional\n          deployerReleaseRepo:  &lt;string&gt;      # optional\n          forceXrayScan:        &lt;string&gt;      # optional\n          failOnScan:           &lt;boolean&gt;     # default true\n          autoPublishBuildInfo: &lt;string&gt;      # optional\n          configFileLocation:   &lt;string&gt;      # optional\n          configFileName:       &lt;string&gt;      # optional\n\n          integrations:\n            - name:         &lt;Artifactory integration&gt;  # required\n          inputResources:\n            - name:         &lt;GitRepo resource&gt;         # required\n            - name:         &lt;FileSpec resource&gt;        # optional\n          outputResources:\n            - name:         &lt;BuildInfo resource&gt;       # if autoPublishBuildInfo is true\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete:                                  #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">MvnBuild </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\"> Artifactory Integration</a></p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a>resource. The mvn command performs the build on files in the Git repository at <code class=\"code\">sourceLocation</code>.</p><p>May also optionally specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource that specifies what files to copy to <code class=\"code\">sourceLocation</code> to build.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource if <code class=\"code\">autoPublishBuildInfo</code> is set to <code class=\"code\">true</code>. If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> is set as an environment variable for the pipeline or the step, that name and/or number will be used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number.</code></p></td><td class=\"td\"><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">mvnCommand</code></p></td><td class=\"td\"><p>Specifies a command line string of options to use with Maven.</p><p>Default is <code class=\"code\">clean install</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">sourceLocation</code></p></td><td class=\"td\"><p>Specifies the location of the source files. By default this is set to the root directory of the GitRepo resource. Defaults to the root of the GitRepo.</p><p>Required if the source files are not in the root directory.</p></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">resolverSnapshotRepo</code></p></td><td class=\"td\"><p>Artifactory repository to resolve snapshot dependencies. If set, <code class=\"code\">resolverReleaseRepo</code> is also required.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use with <code class=\"code\">configFileName</code> and <code class=\"code\">configFileLocation</code>.</p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">resolverReleaseRepo</code></p></td><td class=\"td\"><p>Artifactory repository to resolve release dependencies. If set, <code class=\"code\">resolverSnapshotRepo</code> is also required.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use with <code class=\"code\">configFileName</code> and <code class=\"code\">configFileLocation</code>.</p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">deployerSnapshotRepo</code></p></td><td class=\"td\"><p>Snapshot artifacts created by the MvnBuild are uploaded to this Artifactory repository. If set, <code class=\"code\">deployerReleaseRepo</code> is also required.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use with <code class=\"code\">configFileName</code> and <code class=\"code\">configFileLocation</code>.</p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">deployerReleaseRepo</code></p></td><td class=\"td\"><p>Release artifacts created by the MvnBuild are uploaded to this Artifactory repository. If set, deployerSnapshot<code class=\"code\">Repo</code> is also required.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>Do not use with <code class=\"code\">configFileName</code> and <code class=\"code\">configFileLocation</code>.</p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, forces an Xray scan after publishing to Artifactory. Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, and when the Xray Policy Rule <a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\">Fail Build</a> checkbox is checked, a failed Xray scan will result in a failure of the step. Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, publishes build info to Artifactory. Requires a BuildInfo resources in the outputResources list. Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">configFileName</code></p></td><td class=\"td\"><p>Specifies the name of the JFrog CLI mvn-config file. The <code class=\"code\">serverID</code> in the configuration file should match the Artifactory integration name. If set, <code class=\"code\">configFileLocation</code>is also required.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>This option should be used only if you have committed this configuration file to your source</p></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">configFileLocation</code></p></td><td class=\"td\"><p>Specifies the directory containing the JFrog CLI mvn-config file, relative to the <code class=\"code\">sourceLocation</code> . If set, <code class=\"code\">configFileName</code> is also required.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>This option should be used only if you have committed this configuration file to your source</p></div></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show a few ways in which a MvnBuild step can be configured.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-FullPipelineExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Full Pipeline Example</h6></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_N651686d35c48c\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/MvnBuild\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li><li class=\"listitem\"><p>For a full tutorial, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PTjhBYOmyyEYLb2FD_740g\" title=\"Pipeline Example: Maven Build\" data-ft-internal-link=\"intercept\">Pipeline Example: Maven Build</a>.</p></li></ul></div><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  - name: mvn_repo\n    type: GitRepo\n    configuration:\n      path: {{ .Values.repoPath }}\n      gitProvider: {{ .Values.gitProvider }}\n\n  - name: mvn_build_info\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactory }}\n\npipelines:\n  - name: demo_maven\n    steps:\n      - name: mvn_build_step\n        type: MvnBuild\n        configuration:\n          deployerSnapshotRepo: {{ .Values.deployerRepo }}\n          deployerReleaseRepo: {{ .Values.deployerRepo }}\n          inputResources:\n            - name: mvn_repo\n          integrations:\n            - name: {{ .Values.artifactory }}\n\n      - name: publish_build\n        type: PublishBuildInfo\n        configuration:\n          forceXrayScan: false\n          inputSteps:\n            - name: mvn_build_step\n          outputResources:\n            - name: mvn_build_info\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-BasicExampleusingDefaultValues\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Basic Example using Default Values</h6></div></div></div><p>The most basic form of MvnBuild. Uses all default values. This step navigates to the root of the repo specified in the <code class=\"code\">inputResources</code> array, and performs an <code class=\"code\">mvn clean install</code>. It does not publish a build or request an Xray scan.</p><p><span class=\"bold\"><strong>MvnBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: MyMavenPipeline\n    steps:\n      - name: MavenWithArtifactory\n        type: MvnBuild\n        configuration:\n          integrations:\n            - name: art\n          inputResources:\n            - name: mvn_repo</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-example2UsingArtifactoryasResolverandDeployer\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using Artifactory as Resolver and Deployer</h6></div></div></div><p>This example uses Artifactory as a resolver and a deployer, so that your project's dependencies are pulled from the specified repo, and the resulting artifacts are pushed back up to Artifactory. It also publishes build info to Artifactory and requests an Xray scan.</p><p><span class=\"bold\"><strong>MvnBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: MyMavenPipeline\n    steps:\n      - name: MavenWithAll\n        type: MvnBuild\n        configuration:\n          integrations:\n            - name: art\n          inputResources:\n            - name: mvn_repo\n          outputResources:\n            - name: mvn_build_info\n          mvnCommand: clean install test\n          sourceLocation: mvnproject\n          resolverSnapshotRepo: snapshots-remote-maven\n          resolverReleaseRepo: releases-remote-maven\n          deployerSnapshotRepo: snapshots-local-maven\n          deployerReleaseRepo: releases-local-maven\n          forceXrayScan: true\n          failOnScan: true\n          autoPublishBuildInfo: true\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-UsingaConfigFile\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using a Config File</h6></div></div></div><p>This example uses a committed config file to accomplish the same thing that <a class=\"link ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/5Ojvui6F1kvxnuzQWGAX_A?section=UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-example2UsingArtifactoryasResolverandDeployer\" title=\"Using Artifactory as Resolver and Deployer\" data-ft-internal-link=\"intercept\">example 2</a> does.</p><p><span class=\"bold\"><strong>MvnBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: MyMavenPipeline\n    steps:\n      - name: MvnWithConfig\n        type: MvnBuild\n        configuration:\n          integrations:\n            - name: art\n          inputResources:\n            - name: mvn_repo\n          outputResources:\n            - name: mvn_build_info\n          mvnCommand: clean install test\n          sourceLocation: mvnproject\n          configFileLocation: \".\"\n          configFileName: mvn-art-config\n          forceXrayScan: true\n          failOnScan: true\n          autoPublishBuildInfo: true\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>MvnBuild</strong></span> native step in a pipeline, it performs the following actions in the background:</p><p><span class=\"bold\"><strong>MvnBuildCommands</strong></span></p><pre class=\"programlisting\">jfrog rt config                        # configures JFrog CLI with the integration listed in the yaml\njfrog rt mvn-config             # if configFileName and configFileLocation are not set in yaml\njfrog rt mvn $mvnCommand        # the main maven build command\nadd_run_variables                       # saves some information in run state for future steps to reference\njfrog rt build-collect-env      # collects build environment, preparing for build publish\njfrog rt build-publish          # only if autoPublishBuildInfo is true\nwrite_output                            # updates the buildinfo resource, if present\njfrog rt build-scan             # if forceXrayScan is true\nadd_run_files                           # adds BuildInfo to run state</pre></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "d67UjnTXN44hTUnsZe1JCA", "topic": {"id": "d67UjnTXN44hTUnsZe1JCA", "title": "NpmBuild", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-bf02e68f-5c1f-93da-07e8-e329d45696ec\" data-permalink=\"creating-pipelines/pipelines-steps/npmbuild.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1695716227\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>NpmBuild</strong></span> native step builds an npm source. This step automatically performs <code class=\"code\">npm-install</code> on the source in a Git repository.</p><p>If you want to run tests, add a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step to trigger them.</p><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The&nbsp;NpmBuild&nbsp;native step may fail on W19 nodes when JFrog CLI v1 is used. Workaround is to use JFrog CLI v2.</p></div><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The <code class=\"code\">NpmBuild</code> native step uses Node runtime image by default. If runtime image of any other type is configured at pipeline-level for this native step, it will be ignored.</p></div><section class=\"section internal\" data-publication-date=\"1695975148\" data-time-created=\"1664356584\" data-time-modified=\"1675400571\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_UUID-7e6a6fbd-30d2-2747-6d47-5ace3a622fe6\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for NpmBuild native step is as follows:</p><p><span class=\"bold\"><strong>NpmBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: NpmBuild\n        configuration:\n          #inherits all the tags from bash\n          # for payloadType npm:\n          npmArgs:          &lt;string&gt;      # optional\n          repositoryName:   &lt;string&gt;      # optional, npm repository name on artifactory\n          resolverRepo:     &lt;string&gt;      # optional, npm repository name on artifactory\n          sourceLocation:   &lt;string&gt;      # optional, directory containing package.json file\n\n          integrations:\n            - name:         &lt;artifactory integration&gt;  # required, unless there is a FileSpec input\n          inputResources:\n            - name:         &lt;gitrepo resource&gt;         # required\n            - name:         &lt;filespec resource&gt;        # optional\n  \n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete:                                  #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" data-publication-date=\"1695975148\" data-time-created=\"1664356611\" data-time-modified=\"1664356611\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_UUID-a5f91402-7122-8be3-7bb7-1b6b3e08e44c\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">NpmBuild </code>for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Specifies an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\"> Artifactory Integration</a>where modules will be published. If a FileSpec resource is specified in <code class=\"code\">inputResources</code> then this is optional. Otherwise, it is required.</p></td><td class=\"td\"><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a>resource. The <code class=\"code\">npm-install</code> runs on the Git repository at <code class=\"code\">sourceLocation</code>.</p><p>May also optionally specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource that specifies what files to copy to <code class=\"code\">sourceLocation</code> prior to running <code class=\"code\">npm-install</code>.</p></td><td class=\"td\"><p>Required</p><p>Optional</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">npmArgs</code></p></td><td class=\"td\"><p>Specifies a command line string of arguments to use with npm-install.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">resolverRepo</code></p></td><td class=\"td\"><p>The name of the npm repository in Artifactory.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">repositoryName</code></p></td><td class=\"td\"><p>Alternative to <code class=\"code\">resolverRepo</code>. Do not set both tags.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">sourceLocation</code></p></td><td class=\"td\"><p>The directory containing the <code class=\"code\">package.json</code> file, relative to the GitRepo <code class=\"code\">path</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure an NpmBuild step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-UsingDefaultSettings\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using Default Settings</h6></div></div></div><p>An NpmBuild step using default locations and default commands.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_N651686d35db1e\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/NpmBuild\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li><li class=\"listitem\"><p>For more information about running this example, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/aT9Zrmy2Z63_K1guFdHiXw\" title=\"Pipeline Example: Npm Build\" data-ft-internal-link=\"intercept\">Pipeline Example: Npm Build</a>.</p></li></ul></div><p><span class=\"bold\"><strong>NpmBuild</strong></span></p><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  - name: npm_repo_jfp_example\n    type: GitRepo\n    configuration:\n      # SCM integration where the repository is located\n      gitProvider: {{ .Values.myRepo.gitProvider }}\n      # Repository path, including org name/repo name\n      path: {{ .Values.myRepo.path }}\n      branches:\n        # Specifies which branches will trigger dependent steps\n        include: master\n\n  - name: npm_buildinfo_jfp_example\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: demoArt\n\npipelines:\n  - name: npm_pipeline_jfp_example\n    steps:\n      - name: npm_build_step\n        type: NpmBuild\n        configuration:\n          repositoryName: npm-virtual      # required, npm repository name on artifacctory\n          sourceLocation: .      # required, location of package.json file\n          integrations:\n            - name:  demoArt  # required\n          inputResources:\n            - name: npm_repo_jfp_example         # required</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-UsingFileSpecInput\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Using FileSpec Input</h6></div></div></div><p>An NpmBuild step with a FileSpec input providing files for the build that are not in the GitRepo and resolverRepo specifying an Artifactory repository to use when resolving dependencies.</p><p><span class=\"bold\"><strong>NpmBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: npmBuildPipeline\n    steps:\n      - name: npmBuildStep\n        type: NpmBuild\n        configuration: \n          sourceLocation: \"source\"\n          resolverRepo: remote-npm\n          inputResources:\n            - name: gitRepoResource\n            - name: fileSpecResource\n          integrations:\n            - name: artifactory_integration</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>NpmBuild</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (if there is a FileSpec input, to configure the JFrog CLI with the Artifactory credentials in the input FileSpec)</p></li><li class=\"listitem\"><p>jfrog rt use (to set the current default Artifactory configuration)</p></li><li class=\"listitem\"><p>cp (if there is an input FileSpec, copy the files to the root of the cloned GitRepo)</p></li><li class=\"listitem\"><p>jfrog rt npm-config (configure the repository to resolve dependencies)</p></li><li class=\"listitem\"><p>jfrog rt npm-install</p></li><li class=\"listitem\"><p>add_run_variables (save information about this step for future steps)</p></li><li class=\"listitem\"><p>jfrog rt build-collect-env (collect environment variables)</p></li><li class=\"listitem\"><p>add_run_files (save the output and the build information in the run state for later publish steps)</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-1d6e3f4c-d301-ea3f-7610-57fcd72359d1_id_NpmBuild-RelatedTopics\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Related Topics</h5></div></div></div><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/aT9Zrmy2Z63_K1guFdHiXw\" title=\"Pipeline Example: Npm Build\" data-ft-internal-link=\"intercept\">Npm Build Quickstart</a></p></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "8Xyl630PEd2nAS0PM2rTdQ", "topic": {"id": "8Xyl630PEd2nAS0PM2rTdQ", "title": "NpmPublish", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-a6e6c13f-1ceb-1fd7-4468-d95a4e223791\" data-permalink=\"creating-pipelines/pipelines-steps/npmpublish.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1695716275\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a\" lang=\"en\" xml:lang=\"en\"><p>The NpmPublish step publishes an npm package to the registry in Artifactory following an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/44OkpN_tMlW1tYfk2qwhBg\" title=\"NpmBuild\" data-ft-internal-link=\"intercept\">NpmBuild</a> step. It is recommended, but not required, that the NpmBuild and NpmPublish steps be in the same affinity group to optimize sharing files between the two steps.</p><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The&nbsp;NpmPublish&nbsp;native step may fail on W19 nodes when JFrog CLI v1 is used. Workaround is to use JFrog CLI v2.</p></div><div class=\"important\" dir=\"ltr\"><h3 class=\"title\">Important</h3><p>The <code class=\"code\">NpmPublish</code> native step uses Node runtime image by default. If runtime image of any other type is configured at pipeline-level for this native step, it will be ignored.</p></div><section class=\"section internal\" data-publication-date=\"1695975148\" data-time-created=\"1664356253\" data-time-modified=\"1675400591\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_UUID-3e412d42-fbdf-0728-8651-01b59a0e12ca\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for NpmPublish native step is as follows:</p><p><span class=\"bold\"><strong>NpmPublish </strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: NpmPublish\n        configuration:\n                  #inherits all the tags from bash\n          # for payloadType npm:\n          deployerRepo:         &lt;string&gt;   # optional, npm repository name on artifactory\n          repositoryName:       &lt;string&gt;   # optional, npm repository name on artifactory\n          forceXrayScan:                &lt;boolean&gt;  # optional\n          failOnScan:           &lt;boolean&gt;  # default true\n          autoPublishBuildInfo: &lt;boolean&gt;  # optional\n\n          integrations:\n            - name:         &lt;artifactory integration&gt;      # required\n          inputSteps:\n            - name:         &lt;NpmBuild step&gt;                # required\n                  outputResources:\n                        - name:                 &lt;BuildInfo resource&gt;           # optional\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" data-publication-date=\"1695975148\" data-time-created=\"1664356436\" data-time-modified=\"1664356436\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_UUID-379f13e7-3537-64f4-dc01-f2fb0baf5c72\" lang=\"en\" xml:lang=\"en\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">NpmPublish </code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\"> Artifactory Integration</a>.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputSteps</code></p></td><td class=\"td\"><p>Must specify a named <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/44OkpN_tMlW1tYfk2qwhBg\" title=\"NpmBuild\" data-ft-internal-link=\"intercept\">NpmBuild</a> or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource if <code class=\"code\">autoPublishBuildInfo</code> is set to <code class=\"code\">true</code>.</p><p>If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> is set as an environment variable for the pipeline or the input <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/44OkpN_tMlW1tYfk2qwhBg\" title=\"NpmBuild\" data-ft-internal-link=\"intercept\">NpmBuild</a> step, that name and/or number will be used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number.</code></p></td><td class=\"td\"><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">deployerRepo</code></p></td><td class=\"td\"><p>The name of the npm repository to publish in Artifactory.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">repositoryName</code></p></td><td class=\"td\"><p>Alternative to <code class=\"code\">deployerRepo</code>. Do not set both tags.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, forces an Xray scan after publishing to Artifactory.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, and when the Xray Policy Rule <a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\"> Fail Build</a> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, publishes build info to Artifactory.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure an NpmPublish step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-FullPipelineExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Full Pipeline Example</h6></div></div></div><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_N651686d35f204\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/NpmBuild\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li><li class=\"listitem\"><p>For more information about running this example, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/aT9Zrmy2Z63_K1guFdHiXw\" title=\"Pipeline Example: Npm Build\" data-ft-internal-link=\"intercept\">Pipeline Example: Npm Build</a>.</p></li></ul></div><p><span class=\"bold\"><strong>NpmBuild</strong></span></p><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  - name: npm_repo_jfp_example\n    type: GitRepo\n    configuration:\n      # SCM integration where the repository is located\n      gitProvider: {{ .Values.myRepo.gitProvider }}\n      # Repository path, including org name/repo name\n      path: {{ .Values.myRepo.path }}\n      branches:\n        # Specifies which branches will trigger dependent steps\n        include: master\n\n  - name: npm_buildinfo_jfp_example\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: demoArt\n\npipelines:\n  - name: npm_pipeline_jfp_example\n    steps:\n      - name: npm_build_step\n        type: NpmBuild\n        configuration:\n          affinityGroup: npm_pipeline_jfp_example\n          repositoryName: npm-virtual      # required, npm repository name on artifacctory\n          sourceLocation: .      # required, location of package.json file\n          integrations:\n            - name:  demoArt  # required\n          inputResources:\n            - name: npm_repo_jfp_example         # required\n\n      - name: npm_publish_step\n        type: NpmPublish\n        configuration:\n          affinityGroup: npm_pipeline_jfp_example\n          # for payloadType npm:\n          repositoryName: npm-virtual        # required, npm repository name on artifactory\n          autoPublishBuildInfo: true       # optional\n          integrations:\n            - name: demoArt      # required\n          inputSteps:\n            - name: npm_build_step                # required\n          outputResources:\n            - name: npm_buildinfo_jfp_example                 # optional</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-UploadArtifactoryRepo\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Upload Artifactory Repo</h6></div></div></div><p>Uploads to an Artifactory repository named npm-repo.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>This example is not a complete pipeline. An NpmBuild step must be part of the same pipeline.</p></div><p><span class=\"bold\"><strong>NpmPublish</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: npmPublishPipeline\n    steps:\n      - name: npmPublishStep\n        type: NpmPublish\n        configuration:\n          deployerRepo: npm-repo\n          integrations:\n            - name: artifactory_integration\n          inputSteps:\n            - name: npmBuildStep</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-UploadtheResultofNpmBuildSteptoArtifactoryRepo\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Upload the Result of NpmBuild Step to Artifactory Repo</h6></div></div></div><p>Uploads the result of the NpmBuild step to an Artifactory repository named npm-repo and uploads build info. This extends example 1 in the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/44OkpN_tMlW1tYfk2qwhBg\" title=\"NpmBuild\" data-ft-internal-link=\"intercept\">NpmBuild</a> documentation.</p><p><span class=\"bold\"><strong>NpmPublish</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: npmBuildPipeline\n    steps:\n      - name: npmBuildStep\n        type: NpmBuild\n        configuration:\n          affinityGroup: npmBuildPipeline\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n      - name: npmPublishStep\n        type: NpmPublish\n        configuration:\n          affinityGroup: npmBuildPipeline\n          deployerRepo: npm-repo\n          autoPublishBuildInfo: true\n          inputSteps:\n            - name: npmBuildStep\n          outputResources:\n            - name: outputBuildInfo\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-PublishBuildInfoandTriggerXrayScan\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish Build Info and Trigger Xray Scan</h6></div></div></div><p>In this example, build info is published and an Xray scan triggered.</p><p><span class=\"bold\"><strong>NpmPublish</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: npmBuildPipeline\n    steps:\n      - name: npmBuildStep\n        type: NpmBuild\n        configuration:\n          affinityGroup: npmBuildPipeline\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n      - name: npmPublishStep\n        type: NpmPublish\n        configuration:\n          affinityGroup: npmBuildPipeline\n          deployerRepo: npm-repo\n          autoPublishBuildInfo: true\n          forceXrayScan: true\n          inputSteps:\n            - name: npmBuildStep\n          outputResources:\n            - name: outputBuildInfo\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>NpmPublish</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt use (specify the configured credentials to use)</p></li><li class=\"listitem\"><p>restore_run_files (copy the output and build info from the NpmBuild step)</p></li><li class=\"listitem\"><p>jfrog rt npm-config (configure the deploy repo)</p></li><li class=\"listitem\"><p>jfrog rt npm-publish</p></li><li class=\"listitem\"><p>jfrog rt build-publish (if autoPublishBuildInfo is true, publish the build info)</p></li><li class=\"listitem\"><p>write_output (if autoPublishBuildInfo is true, update the output BuildInfo resource)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (if forceXrayScan is true, trigger a scan)</p></li><li class=\"listitem\"><p>add_run_files (update the build info saved in run state)</p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-12c88848-a50c-dfdd-d849-dc786503d44a_id_NpmPublish-RelatedTopics\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Related Topics</h5></div></div></div><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/aT9Zrmy2Z63_K1guFdHiXw\" title=\"Pipeline Example: Npm Build\" data-ft-internal-link=\"intercept\">Pipeline Example: Npm Build</a></p></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "LBHLODSjvjKg5cO1ExMq~w", "topic": {"id": "LBHLODSjvjKg5cO1ExMq~w", "title": "PreMatrix", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-e5a1be0e-5cc5-c635-cca2-8451922d1c0f\" data-permalink=\"creating-pipelines/pipelines-steps/prematrix.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680860036\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-2130e516-f371-c2a1-9086-9a1468b9718b\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>PreMatrix</strong></span> generic step may be used to prepare a build environment for execution of a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/gvScchJe4eqc1uM4mfO7Ew\" title=\"Matrix\" data-ft-internal-link=\"intercept\">Matrix</a> step.</p><p>The PreMatrix step is optional for use with Matrix builds. For more information, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/U6N8MvqKGwzBu9wZBsaltw\" title=\"Using the Matrix Step\" data-ft-internal-link=\"intercept\">Using the Matrix Step</a>.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-2130e516-f371-c2a1-9086-9a1468b9718b_id_PreMatrix-Usage\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Usage</h5></div></div></div><p><span class=\"bold\"><strong>FanOut</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: PreMatrix\n        configuration: \n          # inherits Bash config, except affinityGroup and outputResources\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onExecute:                                                    # required     \n            - echo \"this is a PreMatrix step\"           \n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-2130e516-f371-c2a1-9086-9a1468b9718b_id_PreMatrix-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165962816\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165962208\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">PreMatrix</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165961264\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, <span class=\"underline\">except for</span> thesetags, which are disallowed:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"code\">affinityGroup</code></p></li><li class=\"listitem\"><p><code class=\"code\">outputResources</code></p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165959872\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Main commands to execute for the step</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "KyTdDW7i35gEE4n_myThAw", "topic": {"id": "KyTdDW7i35gEE4n_myThAw", "title": "PostMatrix", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-3ba3e169-3f1b-53be-e33c-4a57e97b2a9e\" data-permalink=\"creating-pipelines/pipelines-steps/postmatrix.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680860000\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-94f8184d-d4cc-59ac-73e6-958c35436360\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>PostMatrix</strong></span> generic step may be used to perform post-execution tasks following a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/gvScchJe4eqc1uM4mfO7Ew\" title=\"Matrix\" data-ft-internal-link=\"intercept\">Matrix</a> step.</p><p>The PostMatrix step is optional for use with Matrix builds. For more information, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/U6N8MvqKGwzBu9wZBsaltw\" title=\"Using the Matrix Step\" data-ft-internal-link=\"intercept\">Using the Matrix Step</a>.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-94f8184d-d4cc-59ac-73e6-958c35436360_id_PostMatrix-Usage\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Usage</h5></div></div></div><p><span class=\"bold\"><strong>FanIn</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: PostMatrix\n        configuration: \n          # inherits Bash config, except affinityGroup and outputResources\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onExecute:                                                    # required     \n            - echo \"this is a PostMatrix step\"           \n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-94f8184d-d4cc-59ac-73e6-958c35436360_id_PostMatrix-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165929040\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165928432\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">PostMatrix</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165927392\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, <span class=\"underline\">except for</span> thesetags, which are disallowed:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"code\">affinityGroup</code></p></li><li class=\"listitem\"><p><code class=\"code\">outputResources</code></p></li></ul></div></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165925968\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Main commands to execute for the step</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "ZETMNvByDNqI46BPH~NdFQ", "topic": {"id": "ZETMNvByDNqI46BPH~NdFQ", "title": "PowerShell", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-d73af370-11c7-e831-77a4-f9afc3b3e5eb\" data-permalink=\"creating-pipelines/pipelines-steps/powershell.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680859966\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-ec74638f-e8af-99f0-b6d9-789a0f8b67e8\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>PowerShell</strong></span> step type is a generic type that enables executing PowerShell commands. PowerShell steps can only run on Windows node pools and are similar to the Bash step on other node pools. As a general-purpose step that can execute any action that can be scripted, even with tools and services that haven't been integrated with JFrog Pipelines, it can be used to perform actions where complete control is required.</p><p>All native steps running in a Windows node pool derive from the PowerShell step. This means that all steps share the same base set of tags from PowerShell, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the PowerShell step definition when running steps on Windows, since it's the core of the definition of all other steps.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ec74638f-e8af-99f0-b6d9-789a0f8b67e8_id_PowerShell-Usage\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Usage</h5></div></div></div><p><span class=\"bold\"><strong>PowerShell</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:                       &lt;string&gt;\n    steps:\n      - name:           &lt;string&gt;\n        type:           PowerShell\n        configuration:\n          affinityGroup:        bldGroup \n          priority:             &lt;[0-10000]&gt;\n          timeoutSeconds:       &lt;job timeout limit&gt;\n          nodePool:             &lt;name of the nodePool&gt;\n          chronological:        &lt;true/false&gt;\n          environmentVariables:\n            env1:                       &lt;string&gt;\n            env2:                       &lt;string&gt;\n            env3:\n              default:      &lt;string&gt;\n              description:  &lt;string&gt;\n              values:       &lt;array&gt;\n              allowCustom:  &lt;true/false&gt;\n          integrations:\n            - name:             &lt;integration name&gt;\n          inputSteps:\n            - name:             &lt;step name&gt;\n          inputResources:\n            - name:             &lt;resource name&gt;\n              trigger:          &lt;true/false&gt;    # default true\n              branch:       &lt;string&gt;        # see description of defaults below\n          outputResources:\n            - name:             &lt;resource name&gt;\n              branch:       &lt;string&gt;        # see description of defaults below\n          runtime:            \n            type:                       &lt;image/host&gt;\n            image:\n              auto:\n                language:\n                versions:\n              custom:\n                name:\n                tag:\n                options:\n                registry:          &lt;integration&gt;   # optional integration for a private registry\n                sourceRepository:  &lt;path&gt;          # required if registry is Artifactory. e.g. docker-local\n                region:                            # required if registry is AWS. e.g. us-east-1\n                autoPull:       &lt;true/false&gt;             # default true; pulls image before run\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onExecute:\n            - echo \"executing task command 1\"\n            - echo \"executing task command 2\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ec74638f-e8af-99f0-b6d9-789a0f8b67e8_id_PowerShell-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165891856\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step. The name should be chosen to accurately describe what the step does, e.g. <code class=\"code\">prov_test_env</code> to represent a job that provisions a test environment. Names of steps must be unique within a pipeline.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165899104\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">PowerShell</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165895952\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all optional configuration selections for the step's execution environment.</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"width: 82.6311%;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">affinityGroup</code></p></td><td class=\"td\"><p>Label that controls affinity to a Node. All the steps with the same affinityGroup will be executed on the same node. This will allow sharing state between the steps. An example is having the same affinityGroup for DockerBuild and DockerPush steps in a Pipeline so that Image being built in the DockerBuild step can be used to published in the DockerPush step</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">priority</code></p></td><td class=\"td\"><p>Controls the priority of a step when there are parallel steps in a pipeline or multiple pipelines executing. It determines which step will run first across all steps that could run if there were no constraints on the number of steps running. Steps with a lower number will run before steps with higher numbers. For example, priority 10 will run before priority 100. The default priority is 9999.</p><p>Priority does not apply to steps that are still waiting for an input to complete or configured to run in a node pool with no available nodes. Also, if there are two steps ready to run and only one available node, the one with the lower priority number runs first, regardless of which pipeline each step belongs to.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">timeoutSeconds</code></p></td><td class=\"td\"><p>Time limit, in the number of seconds, for the step to complete. If the step does not complete in the given time limit, the step will be forced to a completion state of failed.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">nodePool</code></p></td><td class=\"td\"><p>Assigns the node pool on which the step executes. If node pool isn't specified, a step will execute on the default node pool. <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/FgNxqTjxOh974ZxvWxmd4Q?section=UUID-dfe2cd0e-2376-213f-5455-fff9fd0634db_id_ManagingRuntimes-NodePools\" title=\"Node Pools\" data-ft-internal-link=\"intercept\"> See here</a> to learn more about node pools.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">chronological</code></p></td><td class=\"td\"><p>Specifies that the step must execute in chronological order, to ensure receipt of all state updates from preceding steps.</p><p>A step with <code class=\"code\">chronological: true</code> will only execute when that step is complete in all previously triggered runs.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">environmentVariables</code></p></td><td class=\"td\"><p>Assigns any environment variables and their values in key:value format. All environment variables assigned within a step definition are active only for the scope of the execution of that step. Variables will be available in global scope and in the <code class=\"code\">env</code> drive.</p><p>If the following variables are set, they will be used:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"code\">JFROG_CLI_BUILD_NAME</code>: If set, the pipeline uses this value instead of the default pipeline name for the build info collected.</p></li><li class=\"listitem\"><p><code class=\"code\">JFROG_CLI_BUILD_NUMBER</code>: If set, the pipeline uses this value instead of the default run number for the build info collected.</p></li><li class=\"listitem\"><p><code class=\"code\">USE_LOCAL_JFROG_CLI</code>: If set as <code class=\"code\">true</code>, the local JFrog CLI on the host or in the image (depending on <code class=\"code\">runtime</code> configuration) is used instead of the version packaged with JFrog Pipelines. This is not recommended and native steps may not be able to run with the local JFrog CLI version.</p></li></ul></div></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>A collection of integrations that will be used by this step. Integrations can be used directly in step without a resource.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputSteps</code></p></td><td class=\"td\"><p>A collection of named steps whose completion will trigger execution of this step.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>A collection of named resources that will be used by this step as inputs.</p><p>By default, changes to these named resources will trigger execution of this step. This can be changed by declaring <code class=\"code\">trigger</code> to be <code class=\"code\">false</code>.</p><p>A <code class=\"code\">branch</code> is only required when using a resource from another branch of a multi-branch source. By default, the resource from a single-branch source or from the same branch of a multi-branch pipeline is used. To use a multi-branch resource in a single-branch pipeline or another branch in a multi-branch pipeline, <code class=\"code\">branch</code> should be used to specify the branch to which the resource belongs.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>A collection of named resources that will be generated or changed by this step.</p><p>A <code class=\"code\">branch</code> is only required for resources from another branch of a multi-branch source. By default, the resource from a single-branch source or from the same branch of a multi-branch pipeline is assumed. To update a multi-branch resource in a single-branch pipeline or another branch in a multi-branch pipeline, <code class=\"code\">branch</code> should be used to specify the branch to which the resource belongs.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">runtime</code></p></td><td class=\"td\"><p>Specifies the runtime for the execution node.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"idm45512165890288\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declare sets of shell command sequences to perform for different execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Main commands to execute for the step</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion of <code class=\"code\">onExecute</code></p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ec74638f-e8af-99f0-b6d9-789a0f8b67e8_id_PowerShell-Example\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Example</h5></div></div></div><p>This is an example of how to use the PowerShell step to perform a build activity.</p><p><span class=\"bold\"><strong>PowerShell step to build</strong></span></p><pre class=\"programlisting\">- name: build\n  type: PowerShell\n  configuration:\n    nodePool: my_windows_node_pool\n    environmentVariables:\n      env1: value1\n      env2:\n        default: value2\n        description: Example Variable\n        values:\n          - value2\n          - value3\n        allowCustom: false\n    runtime:\n      type: image\n      image:\n        auto:\n          language: node\n          versions:\n            - \"10.18\"\n    inputResources:\n      - name: src\n    integrations:\n      - name: mySlack\n  execution:\n    onExecute:\n      - Push-Location $res_src_resourcePath\n      - npm install\n      - New-Item testresults -Type Directory\n      - New-Item codecoverage -Type Directory\n      - .\\node_modules\\.bin\\mocha --recursive \"tests/**/*.spec.js\" -R mocha-junit-reporter --reporter-options mochaFile=testresults/testresults.xml\n      - .\\node_modules\\.bin\\istanbul --include-all-sources cover -root \"routes\" node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive \"tests/**/*.spec.js\"\n      - .\\node_modules\\.bin\\istanbul report cobertura --dir codecoverage\n      - save_tests testresults/testresults.xml\n    onSuccess:\n      - send_notification mySlack \"build completed\"</pre></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "GXPhuJzcGzL~WMeIv12mAQ", "topic": {"id": "GXPhuJzcGzL~WMeIv12mAQ", "title": "PromoteBuild", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-85a1ca3a-e0dc-748c-0ebf-abf0cba40637\" data-permalink=\"creating-pipelines/pipelines-steps/promotebuild.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1681988105\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>PromoteBuild</strong></span> native step promotes a BuildInfo and moves or copies the related artifacts from one Artifactory repository to another.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>This step requires a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource as an input to successfully execute.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for PromoteBuild native step is as follows:</p><p><span class=\"bold\"><strong>PromoteBuild</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: PromoteBuild\n        configuration:\n          #inherits all the tags from bash\n          targetRepository:      &lt;string&gt;\n          includeDependencies:   &lt;boolean&gt;    # default false\n          status:                                &lt;string&gt;  \n          comment:                               &lt;string&gt;\n          copy:                                  &lt;boolean&gt;\n\n          inputResources:\n            - name:         &lt;BuildInfo resource&gt;     # required\n              trigger: false\n          outputResources:\n            - name:         &lt;BuildInfo resource&gt;     # required\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">PromoteBuild</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a named <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource whose <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> properties identify the build to promote.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a named <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource to map to the promoted build. The BuildInfo will be updated with the <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> of the input BuildInfo resource, and its <code class=\"code\">targetRepo</code> with the value of <code class=\"code\">targetRepository</code>.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">targetRepository</code></p></td><td class=\"td\"><p>The name of the repository in Artifactory to promote the build to.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">includeDependencies</code></p></td><td class=\"td\"><p>When set to true, promotion will include the build dependencies.</p><p>Defaults to false.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">status</code></p></td><td class=\"td\"><p>Name of the status to promote the build to.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">comment</code></p></td><td class=\"td\"><p>Comment to include for the promotion.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">copy</code></p></td><td class=\"td\"><p>When set to true, copies the artifacts to the targetRepository vs moving them to the targetRepository.</p><p>Defaults to false.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a PromoteBuild step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-PromoteBuildtoArtifactory\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Promote Build to Artifactory</h6></div></div></div><p>Promotes a build specified by an input BuildInfo to an Artifactory repository named <code class=\"code\">docker-prod-local</code>. In this example, <code class=\"code\">trigger</code> is set as <code class=\"code\">false</code> on the input resource so that the step will not be automatically triggered.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_N651686d36010d\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/PromoteBuild\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li></ul></div><p><span class=\"bold\"><strong>PromoteBuild</strong></span></p><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  - name: app_repo\n    type: GitRepo\n    configuration:\n      gitProvider: {{ .Values.gitIntegration }}                      \n      path: {{ .Values.gitRepositoryPath }}    \n      branches:\n        include: master\n\n  - name: app_buildinfo\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\n  - name: app_promoted_buildinfo\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\npipelines:\n  - name: app_dev_pipeline_su204\n    steps:\n      - name: app_build\n        type: DockerBuild\n        configuration:\n          affinityGroup: docker_group\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: {{ .Values.artifactoryUrl }}/{{ .Values.sourceRepository }}/{{ .Values.imageName }}  \n          dockerImageTag: ${run_number}\n          inputResources:\n            - name: app_repo\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}         \n            \n      - name: app_push\n        type: DockerPush\n        configuration:\n          affinityGroup: docker_group\n          targetRepository: {{ .Values.sourceRepository }}\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}                            \n          inputSteps:\n            - name: app_build\n\n      - name: publish_app_build\n        type: PublishBuildInfo\n        configuration:\n          affinityGroup: docker_group\n          inputSteps:\n            - name: app_push\n          outputResources:\n            - name: app_buildinfo\n            \n      - name: xrayScanStep\n        type: XrayScan\n        configuration:\n          inputResources:\n            - name: app_buildinfo   \n\n  - name: app_prod_pipeline_su204\n    steps:\n      - name: app_promote_build\n        type: PromoteBuild\n        configuration:\n          targetRepository: {{ .Values.prodRepository }}\n          inputResources:\n            - name: app_buildinfo\n              trigger: false\n          outputResources:\n            - name: app_promoted_buildinfo\n\n      - name: app_deploy\n        type: Bash\n        configuration:\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}\n          inputResources:\n            - name: app_promoted_buildinfo\n        execution:\n          onStart:\n            - jfrog rt docker-pull {{ .Values.artifactoryUrl }}/{{ .Values.prodRepository }}/{{ .Values.imageName }}:$res_app_promoted_buildinfo_buildNumber {{ .Values.prodRepository }}\n            #- jfrog rt dl prod-go-local/app\n            #- ls -latr\n          onExecute:\n            - docker run {{ .Values.artifactoryUrl }}/{{ .Values.prodRepository }}/{{ .Values.imageName }}:$res_app_promoted_buildinfo_buildNumber</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-PromoteBuildwithStatusandComment\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Promote Build with Status and Comment</h6></div></div></div><p>Promotes the build with a status and comment.</p><p><span class=\"bold\"><strong>PromoteBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: promoteBuildPipeline\n    steps:\n      - name: promoteBuildStep\n        type: PromoteBuild\n        configuration:\n          targetRepository: my-promoted-builds\n          status: TEST\n          comment: \"Promoted by run number ${run_number}.\"\n          integrations:\n            - name: artifactory_integration\n          inputResources:\n            - name: inputBuildInfo\n              trigger: false\n          outputResources:\n            - name: outputBuildInfo\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-PromoteBuildandCopy\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Promote Build and Copy</h6></div></div></div><p>In this example, when the build is promoted, it is copied so that a copy remains in the previous repository and the dependencies are copied as well as the build.</p><p><span class=\"bold\"><strong>PromoteBuild</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: promoteBuildPipeline\n    steps:\n      - name: promoteBuildStep\n        type: PromoteBuild\n        configuration:\n          targetRepository: my-promoted-builds\n          includeDependencies: true\n          copy: true\n          integrations:\n            - name: artifactory_integration\n          inputResources:\n            - name: inputBuildInfo\n              trigger: false\n          outputResources:\n            - name: outputBuildInfo</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-a9accf7b-dfa6-b86d-1332-e04c4e3e2eca_id_PromoteBuild-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>PromoteBuild</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (configure the JFrog CLI with the credentials in the BuildInfo input)</p></li><li class=\"listitem\"><p>jfrog rt build-promote</p></li><li class=\"listitem\"><p>write_output (update the output BuildInfo resource)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "8C9ZBBfUugMgPK8d5n9hzA", "topic": {"id": "8C9ZBBfUugMgPK8d5n9hzA", "title": "PublishBuildInfo", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-4184a89c-cf99-b9fa-84e4-d817f5689b37\" data-permalink=\"creating-pipelines/pipelines-steps/publishbuildinfo.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680859817\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>PublishBuildInfo</strong></span> step publishes <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> to Artifactory. BuildInfo provides a manifest for the build and includes metadata about the modules, dependencies and other environment variables.</p><p>BuildInfo can also be published by any of the language-specific publish steps, when its <code class=\"code\">autoPublishBuildInfo</code> tag is set to <code class=\"code\">true</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>A base exclude pattern always applies to published build info from Pipelines, to prevent environment variables containing security information (e.g., secrets) and other unnecessary data from being published. The base exclude pattern is:</p><p><code class=\"code\">buildinfo.env.res_*;buildinfo.env.int_*;buildinfo.env.current_*;*password*;*secret*;*key*;*token*</code></p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for PublishBuildInfo native step is as follows:</p><p><span class=\"bold\"><strong>PublishBuildInfo</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: PublishBuildInfo\n        configuration:\n          #inherits all the tags from bash\n          envInclude:       &lt;string&gt;   \n          envExclude:       &lt;string&gt;   \n          forceXrayScan:    &lt;boolean&gt;    # default false\n          failOnScan:       &lt;boolean&gt;    # default true\n\n          inputSteps:\n            - name:         &lt;any of the build steps or Bash step&gt;  # required\n          outputResources:\n            - name:         &lt;BuildInfo resource&gt;                             # required\n\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">PublishBuildInfo</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputSteps</code></p></td><td class=\"td\"><p>Must specify a named step of one of the following types:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/CBbQUEleXOAdEK~sv3QSIg\" title=\"DockerPush\" data-ft-internal-link=\"intercept\">DockerPush</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/E5HPgKlVIduhL9KURYCrxg\" title=\"GoPublishModule\" data-ft-internal-link=\"intercept\">GoPublishModule</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/eeCPdY_CZTbOtlPJzrgVaw\" title=\"GoPublishBinary\" data-ft-internal-link=\"intercept\">GoPublishBinary</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/YWv9eZVG2Q4SzRQ_N8wxxw\" title=\"GradleBuild\" data-ft-internal-link=\"intercept\">GradleBuild</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/P1nvfSf9oV0MY3jJGqMB_g\" title=\"HelmPublish\" data-ft-internal-link=\"intercept\">HelmPublish</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/5Ojvui6F1kvxnuzQWGAX_A\" title=\"MvnBuild\" data-ft-internal-link=\"intercept\">MvnBuild</a></p></li><li class=\"listitem\"><p><a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/kCuBcVFDeWF6DgSXQWFLjA\" title=\"NpmPublish\" data-ft-internal-link=\"intercept\">NpmPublish</a></p></li></ul></div><p>The step must <span class=\"underline\">not</span> have set <code class=\"code\">autoPublishBuildInfo</code> to <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource to publish. The <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> properties are automatically set to <code class=\"code\">$buildName</code> and <code class=\"code\">$buildNumber</code> if defined, or the <code class=\"code\">JFROG_CLI_BUILD_NAME</code> and/or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> from the environment of the named step for native steps. If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> was not set when the input step ran, the defaults are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number</code>.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>If <code class=\"code\">inputSteps</code> is a Bash step and <code class=\"code\">$buildName</code> or <code class=\"code\">$buildNumber</code> are not defined, then this step will fail.</p></div></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">envInclude</code></p></td><td class=\"td\"><p>Pattern for which environment variables to include. Default is to include all the environment variables.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">envExclude</code></p></td><td class=\"td\"><p>Pattern for which environment variables to exclude. This is applied in addition to the base exclude pattern applied to all build info.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When set to true, forces an Xray scan after publishing to Artifactory.</p><p>Default is false.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to <span class=\"bold\"><strong>true</strong></span>, and when the Xray Policy Rule <span class=\"bold\"><strong><a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\">Fail Build</a></strong></span> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is true.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-execution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a PublishBuildInfo step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-FullPipelineExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Full Pipeline Example</h6></div></div></div><p>Pushes the image created by the DockerBuild input step and published BuildInfo to Artifactory.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a>.<span class=\"linktextprovider\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_N651686d361a17\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/DockerBuild\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li></ul></div><p><span class=\"bold\"><strong>DockerPush</strong></span></p><pre class=\"programlisting\"># This config file is templatized so that it can be easily customized. Values can be provided with a values.yml file.\ntemplate: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  - name: app_repo1\n    type: GitRepo\n    configuration:\n      gitProvider: {{ .Values.gitIntegration }}                      \n      path: {{ .Values.gitRepositoryPath }}    \n      branches:\n        include: master\n\n  - name: app_buildinfo1\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\n  - name: app_promoted_buildinfo1\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\npipelines:\n  - name: app_dev_pipeline\n    steps:\n      - name: app_build\n        type: DockerBuild\n        configuration:\n          affinityGroup: docker_group\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: {{ .Values.artifactoryUrl }}/{{ .Values.sourceRepository }}/{{ .Values.imageName }}  \n          dockerImageTag: ${run_number}\n          inputResources:\n            - name: app_repo\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}         \n            \n      - name: app_push\n        type: DockerPush\n        configuration:\n          affinityGroup: docker_group\n          targetRepository: {{ .Values.sourceRepository }}\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}                            \n          inputSteps:\n            - name: app_build\n\n      - name: publish_app_build\n        type: PublishBuildInfo\n        configuration:\n          affinityGroup: docker_group\n          inputSteps:\n            - name: app_push\n          outputResources:\n            - name: app_buildinfo</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-MvnBuildExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">MvnBuild Example</h6></div></div></div><p>This extends the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/5Ojvui6F1kvxnuzQWGAX_A?section=UUID-7d5a1490-2996-c8be-7ae1-d5d50c1a1dce_id_MvnBuild-BasicExampleusingDefaultValues\" title=\"Basic Example using Default Values\" data-ft-internal-link=\"intercept\">first MvnBuild example</a> to publish the build info using a PublishBuildInfo step.</p><p><span class=\"bold\"><strong>PublishBuildInfo</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: MyMavenPipeline\n    steps:\n      - name: MavenWithArtifactory\n        type: MvnBuild\n        configuration:\n          integrations:\n            - name: art\n          inputResources:\n            - name: mvn_repo\n      - name: publishBuildInfoStep\n        type: PublishBuildInfo\n        configuration:\n          inputSteps:\n            - name: MavenWithArtifactory\n          outputResources:\n            - name: buildInfoResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-andExample\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">NpmBuild and NpmPublish Example</h6></div></div></div><p>An <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/44OkpN_tMlW1tYfk2qwhBg\" title=\"NpmBuild\" data-ft-internal-link=\"intercept\">NpmBuild</a> and <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/kCuBcVFDeWF6DgSXQWFLjA\" title=\"NpmPublish\" data-ft-internal-link=\"intercept\">NpmPublish</a> example publishing the build info using a PublishBuildInfo step and triggering an Xray scan in the PublishBuildInfo step.</p><p><span class=\"bold\"><strong>PublishBuildInfo</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: npmBuildPipeline\n    steps:\n      - name: npmBuildStep\n        type: NpmBuild\n        configuration:\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n      - name: npmPublishStep\n        type: NpmPublish\n        configuration:\n          deployerRepo: npm-repo\n          inputSteps:\n            - name: npmBuildStep\n          outputResources:\n            - name: outputBuildInfo\n      - name: publishBuildInfoStep\n        type: PublishBuildInfo\n        configuration:\n          forceXrayScan: true\n          inputSteps:\n            - name: npmPublishStep\n          outputResources:\n            - name: buildInfoResource\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-BashandGoPublishModuleStep\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Bash and GoPublishModule Step</h6></div></div></div><p>A Bash step input to the PublishBuildInfo step following an earlier <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/E5HPgKlVIduhL9KURYCrxg\" title=\"GoPublishModule\" data-ft-internal-link=\"intercept\">GoPublishModule</a> step.</p><p><span class=\"bold\"><strong>PublishBuildInfo</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name: goPublishModulePipeline\n    steps:\n      - name: goPublishModuleStep\n        type: GoPublishModule\n        configuration:\n          version: \"v0.0.${run_number}\"\n          targetRepository: go-repo\n          self: true\n          deps: ALL\n          inputResources:\n            - name: gitRepoResource\n          integrations:\n            - name: artifactory_integration\n      - name: moduleTestStep\n        type: Bash\n        configuration:\n          inputSteps:\n            - name: goPublishModuleStep\n        execution:\n          onExecute:\n            - \"echo 'Running some tests.'\"\n      - name: publishBuildInfoStep\n        type: PublishBuildInfo\n        configuration:\n          environmentVariables:\n            buildStepName: goPublishModuleStep\n          inputSteps:\n            - name: moduleTestStep\n          outputResources:\n            - name: buildInfoResource</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-ab260b2f-36d3-7c3e-a5c1-a9e4d3aa6dd8_id_PublishBuildInfo-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>PublishBuildInfo</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (configure the JFrog CLI with the BuildInfo output credentials)</p></li><li class=\"listitem\"><p>jfrog rt use (specify the configured credentials to use)</p></li><li class=\"listitem\"><p>restore_run_files (copy the output and build info from the input step)</p></li><li class=\"listitem\"><p>jfrog rt build-publish (publish the build info)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (if forceXrayScan is true, trigger a scan)</p></li><li class=\"listitem\"><p>write_output (if autoPublishBuildInfo is true, update the output BuildInfo resource)</p></li><li class=\"listitem\"><p>add_run_files (update the build info saved in run state)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "2tp8MavxIynkGdTm79_FaQ", "topic": {"id": "2tp8MavxIynkGdTm79_FaQ", "title": "SignReleaseBundle", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-e9e9fe48-0081-4947-d442-b2710f546a54\" data-permalink=\"creating-pipelines/pipelines-steps/signreleasebundle.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680857281\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>SignReleaseBundle</strong></span> native step signs a Release Bundle in preparation for distributing it to Edge nodes.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for SignReleaseBundle native step is as follows:</p><p><span class=\"bold\"><strong>SignReleaseBundle</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: SignReleaseBundle\n        configuration:\n                  #inherits all the tags from bash\n          inputResources:\n            - name:            &lt;release bundle to sign&gt;  # required\n                  trigger: false\n          outputResources:\n            - name:            &lt;signed release bundle&gt;  # required\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">SignReleaseBundle</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinenttags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a>resource whose <code class=\"code\">name</code> and <code class=\"code\">version</code> properties identify the release bundle to be signed.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/HXWtGgZfztd1BIjFl2yYxg\" title=\"ReleaseBundle\" data-ft-internal-link=\"intercept\">ReleaseBundle</a>resource. This ReleaseBundle is updated with the <code class=\"code\">name</code> and <code class=\"code\">version</code> properties of the input ReleaseBundle, and sets the <code class=\"code\">isSigned</code> property to true.</p></td><td class=\"td\"><p>Required</p></td></tr></tbody></table></div><p>There is no additional configuration required.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">GPG Signing Key Passphrase</h3><p>When your Distribution release bundle <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-da8b4d63-cc79-dc15-1e9a-da808a0836f0\" data-ft-xmap-link=\"intercept\">GPG signing key</a>is passphrase protected, remember to provide the GPG Signing Key Passphrase when creating/updating your <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/jpMSqrZc~dy_aOgM9k7ezw\" title=\"Distribution Integration\" data-ft-internal-link=\"intercept\">Distribution Integration</a>.<span class=\"linktextprovider\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_N651686d362844\" style=\"display:none !important;\">GPG Signing</span></p></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following example shows how to configure a SignReleaseBundle step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-SignaReleaseBundle\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Sign a Release Bundle</h6></div></div></div><p>Signs a ReleaseBundle provided as an input.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example requires an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a> and a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/jpMSqrZc~dy_aOgM9k7ezw\" title=\"Distribution Integration\" data-ft-internal-link=\"intercept\">Distribution Integration</a>.</p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/CreateSignDistributeReleaseBundle\" rel=\"noopener\" target=\"_blank\">this repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li></ul></div><p><span class=\"bold\"><strong>SignReleaseBundle</strong></span></p><pre class=\"programlisting\">template: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  # Build info of first build to bundle\n  - name: gosvc_promoted_build_info\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.myArtifactoryIntegration }}\n      buildName: svc_build\n      buildNumber: 1\n\n  # Build info of second build to bundle\n  - name: appl_promoted_build_info\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.demoArtifactoryIntegration }}\n      buildName: backend_build\n      buildNumber: 1\n\n  # Release bundle\n  - name: release_bundle\n    type: ReleaseBundle\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      name: demo_rb\n      version: v1.0.0\n\n  # Signed version of the same release bundle\n  - name: signed_bundle\n    type: ReleaseBundle\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      name: demo_rb\n      version: v1.0.0\n\n  # Distribution rules\n  - name: distribution_rules\n    type: DistributionRule\n    configuration:\n      sourceDistribution: {{ .Values.distributionIntegration }}\n      serviceName: \"*\"\n      siteName: \"*\"\n      cityName: \"*\"\n      countryCodes:\n        - \"CN\"\n        - \"GB\"\n\npipelines:\n  - name: demo_release_mgmt\n    steps:\n      - name: bundle\n        type: CreateReleaseBundle\n        configuration:\n          releaseBundleName: demo_rb\n          releaseBundleVersion: v1.0.${run_number}\n          dryRun: false\n          sign: false\n          description: \"some random test description\"\n          inputResources:\n            - name: gosvc_promoted_build_info\n              trigger: true\n            - name: appl_promoted_build_info\n              trigger: true\n          outputResources:\n            - name: release_bundle\n          releaseNotes:\n            syntax: markdown\n            content: |\n              ## Heading\n                * Bullet\n                * Points\n            \n      - name: sign\n        type: SignReleaseBundle\n        configuration:\n          inputResources:\n            - name: release_bundle\n          outputResources:\n            - name: signed_bundle\n\n      - name: distribute\n        type: DistributeReleaseBundle\n        configuration:\n          dryRun: false\n          inputResources:\n            - name: signed_bundle\n            - name: distribution_rules</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-9e63f476-745f-bc17-a73e-0b265ba0ad61_id_SignReleaseBundle-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>SignReleaseBundle</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>curl $distUrl/api/v1/release_bundle/$releaseBundleName/$releaseBundleVersion/sign (sign the release bundle)</p></li><li class=\"listitem\"><p>write_output (update the output ReleaseBundle resource)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "To8ZV18qIsYD4YvRWKOm0g", "topic": {"id": "To8ZV18qIsYD4YvRWKOm0g", "title": "TriggerPipeline", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-c97f59bf-8c32-5b20-d36b-0ae7a71a438d\" data-permalink=\"creating-pipelines/pipelines-steps/triggerpipeline.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1680857259\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>TriggerPipeline</strong></span> native step will trigger another step and wait for the resulting run to complete before continuing. This allows you to embed another pipeline inside your own.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Note</h3><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This step type will utilize a build node to poll for the status of the triggered run until it is complete. Ensure that the capacity of your node pool is sufficient to support both pipelines executing in parallel.</p></li><li class=\"listitem\"><p>For more information about using the <code class=\"code\">TriggerPipeline</code> native step, see <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/u_nuDYsyJMnyS4XThDKm_w\" title=\"Embedded Pipelines\" data-ft-internal-link=\"intercept\">Embedded Pipelines</a>.</p></li></ul></div></div><p>You can use the <code class=\"code\">set_trigger_payload</code> utility function in the <code class=\"code\">onStart</code> section of this step to set customized parameters for the pipeline that you wish to trigger. In addition, you can add <code class=\"code\">pipelineVariables</code>, which will apply to all steps in the triggered run, as well as <code class=\"code\">stepVariables</code>, which will apply only to the specified step.</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Linux only</h3><p>This step is supported for execution on Linux machines only. PowerShell support is not yet available.</p></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for the TriggerPipeline native step is as follows:</p><p><span class=\"bold\"><strong>TriggerPipeline</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: TriggerPipeline\n        configuration:\n          #inherits all the tags from bash\n\n          pipelineName:   &lt;string&gt;   # required\n          stepName:       &lt;string&gt;   # required\n          branchName:     &lt;string&gt;   # optional. recommended if target is multibranch.\n          projectKey:     &lt;string&gt;   # optional. recommended if target belongs to a project.\n          integrations:\n            - name:       &lt;JFrog Platform Access Token integration&gt;  # required\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n            - set_trigger_payload stepVariables \"test=true\"\n            - set_trigger_payload pipelineVariables \"notify=true\" \"version=5.4.3\"\n                        - export pipelines_poll_interval_seconds=30 # defaults to 10\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"Something went wrong\"\n                        - echo \"Nested run status is: ${nested_run_status}\"\n          onComplete:\n            - echo \"Cleaning up\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">TriggerPipeline</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Specifies an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/vckIcDgDQVw~R1zoN_AAPA\" title=\"JFrog Platform Access Token Integration\" data-ft-internal-link=\"intercept\">JFrog Platform Access Token integration</a>. This integration should contain a token that has the appropriate level of access to trigger the specified pipeline.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">pipelineName</code></p></td><td class=\"td\"><p>The name of the pipeline that you want to trigger</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">stepName</code></p></td><td class=\"td\"><p>The name of the step that you want to trigger</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">branchName</code></p></td><td class=\"td\"><p>The name of the branch that you want to trigger. This should be used if your target pipeline comes from a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/R0NTea0j3GPh5DL5Or635A\" title=\"Creating Multibranch Pipelines\" data-ft-internal-link=\"intercept\"> multibranch pipeline source</a>.</p></td><td class=\"td\"><p>Optional</p><p>May be required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">projectKey</code></p></td><td class=\"td\"><p>The unique key of the Project that contains the pipeline that you want to trigger. This should only be used if your target pipeline belongs to a Project.</p></td><td class=\"td\"><p>Optional</p><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation. This is the ideal place to utilize the <code class=\"code\"> set_trigger_payload</code> utility function to add custom step- and pipeline-level variables to your target.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-environmentvariablesenvironmentvariables\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">environment variables</h6></div></div></div><p>The TriggerPipeline step utilizes several new environment variables to provide as much information as possible.</p><p>These variables can be used to configure the behavior of the <code class=\"code\">TriggerPipeline</code> step</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col></colgroup><thead><tr><th class=\"th\"><p>variable name</p></th><th class=\"th\"><p>value</p></th></tr></thead><tbody><tr><td class=\"td\"><p>pipelines_poll_interval_seconds</p></td><td class=\"td\"><p>How frequently, in seconds, the step should poll for its nested run status.</p><p>Defaults to 10 seconds</p></td></tr></tbody></table></div><p>These variables are injected into the environment of the target pipeline</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col></colgroup><thead><tr><th class=\"th\"><p>variable name</p></th><th class=\"th\"><p>value</p></th></tr></thead><tbody><tr><td class=\"td\"><p>parent_step_id</p></td><td class=\"td\"><p>The unique ID of the TriggerPipeline step</p></td></tr><tr><td class=\"td\"><p>parent_step_name</p></td><td class=\"td\"><p>The name of the TriggerPipeline step</p></td></tr><tr><td class=\"td\"><p>parent_step_url</p></td><td class=\"td\"><p>The URL that links to the TriggerPipeline step</p></td></tr><tr><td class=\"td\"><p>parent_run_id</p></td><td class=\"td\"><p>The unique ID of the run that the TriggerPipeline step belongs to</p></td></tr><tr><td class=\"td\"><p>parent_run_number</p></td><td class=\"td\"><p>The run number of the run that the TriggerPipeline step belongs to</p></td></tr></tbody></table></div><p>These variables are exported into the <code class=\"code\">TriggerPipeline</code> step environment after the target pipeline's run completes.</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col></colgroup><thead><tr><th class=\"th\"><p>variable name</p></th><th class=\"th\"><p>value</p></th></tr></thead><tbody><tr><td class=\"td\"><p>nested_run_status</p></td><td class=\"td\"><p>The final status of the triggered run (can be success, failure, error, canceled, timeout, or skipped)</p></td></tr><tr><td class=\"td\"><p>nested_run_number</p></td><td class=\"td\"><p>The run number of the triggered run.</p></td></tr><tr><td class=\"td\"><p>nested_run_duration_seconds</p></td><td class=\"td\"><p>The total duration of the triggered run (in seconds)</p></td></tr><tr><td class=\"td\"><p>nested_run_url</p></td><td class=\"td\"><p>The URL that links to the triggered step</p></td></tr></tbody></table></div></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following example shows how to configure a <code class=\"code\">TriggerPipeline</code> step.</p><p>This example requires a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/vckIcDgDQVw~R1zoN_AAPA\" title=\"JFrog Platform Access Token Integration\" data-ft-internal-link=\"intercept\">JFrog Platform Access Token integration</a>.</p><pre class=\"programlisting\">pipelines:\n  - name: top_pipeline\n    steps:\n      - name: scan_controller\n        type: TriggerPipeline\n        configuration:\n          pipelineName: scanner_pipeline\n          stepName: scan_it\n          integrations:\n            - name: myPlatformToken\n          environmentVariables:\n            scan_target:\n              default: \"hello-world\"\n              allowCustom: true\n              values:\n                - \"vault\"\n                - \"redis\"\n                - \"postgresql\"\n                - \"hello-world\"\n        execution:\n          onStart:\n            - set_trigger_payload pipelineVariables \"scan_target=${scan_target}\"\n            - set_trigger_payload stepVariables \"notify=email\" \"uploadReport=true\"\n          onComplete:\n            - echo \"Final status is $nested_run_status\"\n\n  - name: scanner_pipeline\n    steps:\n      - name: scan_it\n        type: Bash\n        execution:\n          onExecute:\n            - echo \"Image to scan is $scan_target.\"\n            - echo \"Triggered by parent step at $parent_step_url\"\n\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-6563da71-bf00-3d57-e208-9e05d748ef7c_id_TriggerPipeline-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>TriggerPipeline</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>GET /projects (if projectKey is provided, the projectId is found)</p></li><li class=\"listitem\"><p>GET /pipelines (find the pipeline by its name)</p></li><li class=\"listitem\"><p>GET /pipelineSteps (find the step by its name)</p></li><li class=\"listitem\"><p>POST /pipelineSteps/:id/trigger (trigger a run starting from the specified step)</p></li><li class=\"listitem\"><p>GET /runs/:id (poll the run to check its status)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "fyMFEIXrIpHMSnrPlXwd0Q", "topic": {"id": "fyMFEIXrIpHMSnrPlXwd0Q", "title": "UploadArtifact", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-f1afd937-9afa-5e29-225a-ebcaed65787f\" data-permalink=\"creating-pipelines/pipelines-steps/uploadartifact.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1681723038\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>UploadArtifact</strong></span> native step uploads artifacts to Artifactory. Optionally, it can also publish build information to Artifactory and trigger Xray scans.</p><p>This step utilizes the JFrog CLI to upload an artifact to Artifactory. The file(s) may be provided in a FileSpec, if already in Artifactory, or RemoteFile or GitRepo input.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for UploadArtifact native step is as follows:</p><p><span class=\"bold\"><strong>UploadArtifact</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name:   &lt;string&gt;\n    steps:\n      - name: &lt;string&gt;\n        type: UploadArtifact\n        configuration:\n          targetPath:           &lt;string&gt;  #required\n          sourcePath:           &lt;string&gt;  #optional\n          properties:           &lt;string&gt;  #optional\n                  regExp:                       &lt;boolean&gt; #optional\n          flat:                 &lt;boolean&gt; #optional\n                  module:                       &lt;string&gt;  #optional\n                  deb:                  &lt;string&gt;  #optional\n                  recursive:                &lt;boolean&gt;     #optional\n                  dryRun:                       &lt;boolean&gt; #optional\n          symlinks:                     &lt;boolean&gt; #optional\n          explode:                      &lt;boolean&gt; #optional\n          exclusions:               &lt;string&gt;      #optional\n          includeDirs:              &lt;boolean&gt;     #optional\n          syncDeletes:              &lt;string&gt;      #optional\n          forceXrayScan:                &lt;boolean&gt; #optional\n          failOnScan:           &lt;boolean&gt;   # default true\n                  autoPublishBuildInfo: &lt;boolean&gt; #optional\n          inputResources:\n                        - name: myGitRepo       \n                        - name: artifactoryFileSpec     \n            - name: myRemoteFile        \n                  outputResources:\n            - name: myFileSpec\n                        - name: myBuildInfo\n          integrations:\n                        - name: myArtifactory \n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">UploadArtifact</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-configurationconfiguration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">integrations</code></p></td><td class=\"td\"><p>Must specify an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\"> Artifactory Integration</a>.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>May specify a <a class=\"link ft-external-link\" href=\"urn:resource:component:362369\" target=\"_blank\" rel=\"noopener\">GitRepo</a>, <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a>, or <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/EK9WhjrPikTN~qTJgnKcHg\" title=\"RemoteFile\" data-ft-internal-link=\"intercept\">RemoteFile</a> resource containing the file(s) to be uploaded. One of each type may be specified.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a> resource if <code class=\"code\">autoPublishBuildInfo</code> is set as <code class=\"code\">true</code>.</p><p>If <code class=\"code\">JFROG_CLI_BUILD_NAME</code> or <code class=\"code\">JFROG_CLI_BUILD_NUMBER</code> is set as an environment variable for the pipeline or the step, that name and/or number is used for the output BuildInfo. Otherwise, the default <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> are <code class=\"code\">$pipeline_name</code> and <code class=\"code\">$run_number.</code></p><p>May also specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource to be updated with the pattern and properties of the uploaded Artifact.</p></td><td class=\"td\"><p>May be required</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p>targetPath</p></td><td class=\"td\"><p>Path to upload the files, including repository name.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">sourcePath</code></p></td><td class=\"td\"><p>Files to upload. If this is a relative path pattern, it is relative to the root of a GitRepo/FileSpec/RemoteFile input.</p><p>Default is <code class=\"code\">*</code> when <code class=\"code\">regExp</code> is <code class=\"code\">false</code> and <code class=\"code\">.*</code> when <code class=\"code\">regExp</code> is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">properties</code></p></td><td class=\"td\"><p>Semi-colon separated properties for the uploaded artifact. For example: <code class=\"code\">myFirstProperty=one;mySecondProperty=two</code>.</p><p>Properties <code class=\"code\">pipelines_step_name</code>, <code class=\"code\">pipelines_run_number</code>, <code class=\"code\">pipelines_step_id</code>, <code class=\"code\">pipelines_pipeline_name</code>, <code class=\"code\">pipelines_step_url</code>, <code class=\"code\">pipelines_step_type</code>, and <code class=\"code\">pipelines_step_platform</code> will also be added.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">regExp</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, regular expressions are used in other parameters, such as <code class=\"code\">sourcePath</code>, instead of wildcards. Expressions must be in parentheses.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">flat</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, the uploaded files are flattened, removing the directory structure.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">module</code></p></td><td class=\"td\"><p>A module name for the Build Info.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">deb</code></p></td><td class=\"td\"><p>A <code class=\"code\">distribution/component/architecture</code> for Debian packages. If the distribution, component, or architecture includes a / it must be double-escaped, For example: <code class=\"code\">distribution/my\\\\\\/component/architecture</code> for a <code class=\"code\">my/component</code> component.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">recursive</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">false</code>, do not upload any matches in subdirectories.</p><p>Default is true.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">dryRun</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, nothing is uploaded.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">symlinks</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, symlinks matching the other criteria are uploaded.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">explode</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code> and the uploaded Artifact is an archive, the archive is expanded.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">exclusions</code></p></td><td class=\"td\"><p>Semi-colon separated patterns to exclude.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">includeDirs</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, empty directories matching the criteria are uploaded.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">syncDeletes</code></p></td><td class=\"td\"><p>A path under which to delete any existing files in Artifactory.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">forceXrayScan</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, forces an Xray scan after publishing to Artifactory.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, and when the Xray Policy Rule <a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\"> Fail Build</a> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">autoPublishBuildInfo</code></p></td><td class=\"td\"><p>When set as <code class=\"code\">true</code>, publishes build info to Artifactory.</p><p>Default is <code class=\"code\">false</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-executionexecution\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">execution</h6></div></div></div><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p><div class=\"note\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_note-idm73363446043932\"><h3 class=\"title\">Note</h3><p><code class=\"code\">onExecute</code>,&nbsp;<code class=\"code\">onStart</code>,&nbsp;<code class=\"code\">onSuccess</code>,&nbsp;<code class=\"code\">onFailure</code>, and&nbsp;<code class=\"code\">onComplete</code>&nbsp;are reserved keywords. Using these keywords in any other context in your execution scripts can cause unexpected behavior.</p></div></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show a few ways in which a UploadArtifact step can be configured.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-UploadinganArtifacttoAnotherRepositoryusingaFileSpecResource\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Uploading an Artifact to Another Repository using a FileSpec Resource</h6></div></div></div><p>The most basic form of UploadArtifact. Uses all default values. This step will download the file matching the FileSpec and upload it to the location in <code class=\"code\">targetPath</code>. The optional output <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/iETQf9mtww9f~n_VG_0AwQ\" title=\"FileSpec\" data-ft-internal-link=\"intercept\">FileSpec</a> resource will be updated with the <code class=\"code\">targetPath</code> and the default properties added to the uploaded artifact.</p><p><span class=\"bold\"><strong>UploadArtifact</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: uploadArtifactPipeline\n    steps:\n      - name: uploadArtifactStep\n        type: UploadArtifact\n        configuration:\n          targetPath: my-repository/myDirectory/myFile.txt\n          integrations:\n            - name: myArtifactoryIntegration\n          inputResources:\n            - name: myInputFileSpec\n          outputResources:\n            - name: myOutputFileSpec\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-UploadinganArtifactfromaRemoteFileResource\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Uploading an Artifact from a RemoteFile Resource</h6></div></div></div><p>In this example, the input is a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/EK9WhjrPikTN~qTJgnKcHg\" title=\"RemoteFile\" data-ft-internal-link=\"intercept\">RemoteFile</a> resource. Otherwise, this is very similar to the previous example with an input that downloads a file that is then uploaded and an optional FileSpec output updated for the uploaded file.</p><p><span class=\"bold\"><strong>UploadArtifact</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: uploadArtifactPipeline\n    steps:\n      - name: uploadArtifactStep\n        type: UploadArtifact\n        configuration:\n          targetPath: my-repository/myDirectory/myFile.txt\n          integrations:\n            - name: myArtifactoryIntegration\n          inputResources:\n            - name: myInputRemoteFile\n          outputResources:\n            - name: myOutputFileSpec\n</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-PublishBuildInfoandTriggerXrayScan\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Publish Build Info and Trigger Xray Scan</h6></div></div></div><p>In this example, build info is published as part of the UploadArtifact step and an Xray scan is triggered.</p><p><span class=\"bold\"><strong>UploadArtifact</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: uploadArtifactPipeline\n    steps:\n      - name: uploadArtifactStep\n        type: UploadArtifact\n        configuration:\n          targetPath: my-repository/myDirectory/myFile.txt\n          autoPublishBuildInfo: true\n          forceXrayScan: true\n          integrations:\n            - name: myArtifactoryIntegration\n          inputResources:\n            - name: myFileSpec\n          outputResources:\n                        - name: myBuildInfo\n</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-b38a11f0-7e65-fa24-5656-63a61275299b_id_UploadArtifact-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>UploadArtifact</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (configure JFrog CLI with the integration listed in the yaml)</p></li><li class=\"listitem\"><p>jfrog rt use (configure JFrog CLI to use the config for the integration listed in the yaml)</p></li><li class=\"listitem\"><p>mkdir (create a directory to use as the root of relative paths in the following actions)</p></li><li class=\"listitem\"><p>cp (copy the FileSpec, RemoteFile, or GitRepo files to the new directory, limit one of each input type)</p></li><li class=\"listitem\"><p>jfrog rt upload (upload the Artifact)</p></li><li class=\"listitem\"><p>write_output (update the FileSpec output resource with the uploaded pattern and properties)</p></li><li class=\"listitem\"><p>add_run_variables (save information in run state for future steps to reference)</p></li><li class=\"listitem\"><p>jfrog rt build-collect-env (collect the build environment, preparing for build publish)</p></li><li class=\"listitem\"><p>jfrog rt build-publish (publish the build, only if autoPublishBuildInfo is true)</p></li><li class=\"listitem\"><p>write_output (update the BuildInfo output resource with the published name/number)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (if forceXrayScan is true)</p></li><li class=\"listitem\"><p>add_run_files (adds build info to run state)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}, {"contentId": "pmAY7j3g3zFMDVvRMhCLpQ", "topic": {"id": "pmAY7j3g3zFMDVvRMhCLpQ", "title": "XrayScan", "text": "<div class=\"content-locale-en-US content-locale-en\"><section class=\"section original-topic\" data-origin-id=\"UUID-5ffa1a4d-4c3e-9a44-30f0-2ca4dbd2e8f8\" data-permalink=\"creating-pipelines/pipelines-steps/xrayscan.html\" data-publication-date=\"1695975148\" data-relative-prefix=\"../../\" data-time-created=\"1660601268\" data-time-modified=\"1691585429\" data-topic-level=\"3\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c\" lang=\"en\" xml:lang=\"en\"><p>The <span class=\"bold\"><strong>XrayScan</strong></span> native step triggers a JFrog Xray scan for security vulnerabilities and license compliance. If there was a watch created that covers the selected build, Xray will scan the indexed build artifacts.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-YAMLSchema\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">YAML Schema</h5></div></div></div><p>The YAML schema for XrayScan native step is as follows:</p><p><span class=\"bold\"><strong>XrayScan</strong></span></p><pre class=\"programlisting\">pipelines:\n  - name:   &lt;string&gt;\n    steps:\n      - name: scan\n        type: XrayScan\n        configuration:\n          #inherits all the tags from bash\n          failOnScan:       &lt;boolean&gt;                      # default true\n          inputResources:\n            - name:         &lt;BuildInfo resource&gt;           # required\n              trigger: false\n                  outputResources:\n            - name:         &lt;BuildInfo resource&gt;           # optional\n\n        execution:\n          onStart:\n            - echo \"Preparing for work...\"\n            - echo \"Prepping build environment\"\n          onSuccess:\n            - echo \"Job well done!\"\n          onFailure:\n            - echo \"uh oh, something went wrong\"\n          onComplete: #always\n            - echo \"Cleaning up some stuff\"</pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-Tags\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Tags</h5></div></div></div><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-name\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">name</h6></div></div></div><p>An alphanumeric string (underscores are permitted) that identifies the step.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-type\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">type</h6></div></div></div><p>Must be <code class=\"code\">XrayScan</code> for this step type.</p></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-configuration\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">configuration</h6></div></div></div><p>Specifies all configuration selections for the step's execution environment. This step inherits the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a>/ <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/qjLtCJG9k5z3SIVWUyEMBQ\" title=\"PowerShell\" data-ft-internal-link=\"intercept\">PowerShell</a> step configuration tags, including these pertinent tags:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">inputResources</code></p></td><td class=\"td\"><p>Must specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a>resource . The <code class=\"code\">buildName</code> and <code class=\"code\">buildNumber</code> are used to trigger the scan.</p></td><td class=\"td\"><p>Required</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">outputResources</code></p></td><td class=\"td\"><p>May specify a <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/PqLdPy0dKNLPx5x9NhC56g\" title=\"BuildInfo\" data-ft-internal-link=\"intercept\">BuildInfo</a>resource. The BuildInfo will be updated with the <code class=\"code\">buildName</code>and <code class=\"code\">buildNumber</code>of the input BuildInfo resource.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>In addition, these tags can be defined to support the step's native operation:</p><div class=\"note note\" dir=\"ltr\"><h3 class=\"title\">Tags derived from Bash</h3><p>All native steps derive from the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step. This means that all steps share the same base set of tags from Bash, while native steps have their own additional tags as well that support the step's particular function. So it's important to be familiar with the <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/JuhAfy2o9I7WDuzDyPjI~w\" title=\"Bash\" data-ft-internal-link=\"intercept\">Bash</a> step definition, since it's the core of the definition of all other steps.</p></div><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"width: 79.5508%;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">failOnScan</code></p></td><td class=\"td\"><p>When set to <code class=\"code\">true</code>, and when the Xray Policy Rule <a class=\"link ft-external-link\" href=\"urn:resource:component:361190/id_CreatingXrayPoliciesandRules-PolicyViolationAutomaticActionsautoactions\" target=\"_blank\" rel=\"noopener\">Fail Build</a> checkbox is checked, a failed Xray scan will result in a failure of the step.</p><p>Default is <code class=\"code\">true</code>.</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p><span class=\"bold\"><strong> execution</strong></span></p><p>Declares collections of shell command sequences to perform for pre- and post-execution phases:</p><div class=\"informaltable table-responsive\"><table class=\"informaltable frame-void rules-rows\" style=\"letter-spacing: 0.0px;\"><colgroup><col><col><col></colgroup><thead><tr><th class=\"th\"><p>Tag</p></th><th class=\"th\"><p><span class=\"bold\"><strong>Description of usage</strong></span></p></th><th class=\"th\"><p>Required/Optional</p></th></tr></thead><tbody><tr><td class=\"td\"><p><code class=\"code\">onStart</code></p></td><td class=\"td\"><p>Commands to execute in advance of the native operation</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onSuccess</code></p></td><td class=\"td\"><p>Commands to execute on successful completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onFailure</code></p></td><td class=\"td\"><p>Commands to execute on failed completion</p></td><td class=\"td\"><p>Optional</p></td></tr><tr><td class=\"td\"><p><code class=\"code\">onComplete</code></p></td><td class=\"td\"><p>Commands to execute on any completion</p></td><td class=\"td\"><p>Optional</p></td></tr></tbody></table></div><p>The actions performed for the <code class=\"code\">onExecute</code> phase are inherent to this step type and may not be overridden.</p><div class=\"note\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_note-idm73363445920386\"><h3 class=\"title\">Note</h3><p><code class=\"code\">onExecute</code>,&nbsp;<code class=\"code\">onStart</code>,&nbsp;<code class=\"code\">onSuccess</code>,&nbsp;<code class=\"code\">onFailure</code>, and&nbsp;<code class=\"code\">onComplete</code>&nbsp;are reserved keywords. Using these keywords in any other context in your execution scripts can cause unexpected behavior.</p></div></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-Examples\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">Examples</h5></div></div></div><p>The following examples show how to configure a XrayScan step.</p><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-TriggeranXrayScanforBuildNameandNumber\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Trigger an Xray Scan for Build Name and Number</h6></div></div></div><p>Triggers an Xray scan for the build name and number provided by an input BuildInfo resource.</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>This example require a <a class=\"link linktype-component linktextconsumer ft-internal-xlink\" href=\"javascript:;\" target=\"_blank\" data-ft-resource-id=\"UUID-e0a69429-398f-c14b-0140-1e2b2f8212d4\" data-ft-xmap-link=\"intercept\">GitHub Integration</a> and an <a class=\"link linktype-component ft-internal-link\" href=\"https://jfrog.com/help/r/2zMh0nFOk9FPLZNgd37bwg/UqwBQz1L2mTwkrdD9b5Zeg\" title=\"Artifactory Integration\" data-ft-internal-link=\"intercept\">Artifactory Integration</a>.<span class=\"linktextprovider\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_N651686d36516b\" style=\"display:none !important;\">GitHub Integration</span></p></li><li class=\"listitem\"><p>The Pipelines DSL for this example is available in <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-resources-examples/tree/main/aql\" rel=\"noopener\" target=\"_blank\">t</a> <a class=\"link ft-external-link\" href=\"https://github.com/jfrog/jfrog-pipelines-steps-examples/tree/main/XrayScan\" rel=\"noopener\" target=\"_blank\">his repository</a> in the <a class=\"link ft-external-link\" href=\"https://github.com/jfrog\" rel=\"noopener\" target=\"_blank\">JFrog</a> GitHub account.</p></li></ul></div><p><span class=\"bold\"><strong>XrayScan</strong></span></p><pre class=\"programlisting\">template: true   # required for local templates\nvaluesFilePath: ./values.yml\n\nresources:\n  - name: app_repo\n    type: GitRepo\n    configuration:\n      gitProvider: {{ .Values.gitIntegration }}                      \n      path: {{ .Values.gitRepositoryPath }}    \n      branches:\n        include: master\n\n  - name: app_buildinfo\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\n  - name: app_promoted_buildinfo\n    type: BuildInfo\n    configuration:\n      sourceArtifactory: {{ .Values.artifactoryIntegration }}\n\npipelines:\n  - name: app_dev_pipeline\n    steps:\n      - name: app_build\n        type: DockerBuild\n        configuration:\n          affinityGroup: docker_group\n          dockerFileLocation: .\n          dockerFileName: Dockerfile\n          dockerImageName: {{ .Values.artifactoryUrl }}/{{ .Values.sourceRepository }}/{{ .Values.imageName }}  \n          dockerImageTag: ${run_number}\n          inputResources:\n            - name: app_repo\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}         \n            \n      - name: app_push\n        type: DockerPush\n        configuration:\n          affinityGroup: docker_group\n          targetRepository: {{ .Values.sourceRepository }}\n          integrations:\n            - name: {{ .Values.artifactoryIntegration }}                            \n          inputSteps:\n            - name: app_build\n\n      - name: publish_app_build\n        type: PublishBuildInfo\n        configuration:\n          affinityGroup: docker_group\n          inputSteps:\n            - name: app_push\n          outputResources:\n            - name: app_buildinfo\n            \n      - name: xrayScanStep\n        type: XrayScan\n        configuration:\n          inputResources:\n            - name: app_buildinfo </pre></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-UpdateOutputBuildInfoResource\"><div class=\"titlepage\"><div><div class=\"title\"><h6 class=\"title\">Update Output BuildInfo Resource</h6></div></div></div><p>Updates an output BuildInfo resource that can be used as an input to future steps. Using an output resource means that you can be sure that those versions have been scanned when using that resource as an input.</p><p><span class=\"bold\"><strong>XrayScan</strong></span></p><pre class=\"programlisting\">pipelines: \n  - name: xrayScanPipeline\n    steps:\n      - name: xrayScanStep\n        type: XrayScan\n        configuration:\n          inputResources:\n            - name: inputBuildInfo\n          outputResources:\n            - name: outputBuildInfo</pre></section></section><section class=\"section internal\" dir=\"ltr\" id=\"UUID-4c06a517-16a5-628c-7132-8c2b2ddffe9c_id_XrayScan-HowitWorks\"><div class=\"titlepage\"><div><div class=\"title\"><h5 class=\"title\">How it Works</h5></div></div></div><p>When you use the <span class=\"bold\"><strong>XrayScan</strong></span> native step in a pipeline, it performs the following functions in the background:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p>jfrog rt config (if there is a BuildInfo output, configure the JFrog CLI with the credentials of the input BuildInfo resource)</p></li><li class=\"listitem\"><p>jfrog rt use (specify the configured credentials to use)</p></li><li class=\"listitem\"><p>jfrog rt build-scan (trigger a scan)</p></li><li class=\"listitem\"><p>replicate_resource (if there is an output BuildInfo, copy the properties of the input BuildInfo resource to the output)</p></li><li class=\"listitem\"><p>write_output (if there is an output BuildInfo, update the output BuildInfo resource buildName and buildNumber)</p></li></ul></div></section></section></div>", "lastUpdateDate": "2023-09-29T08:15:28.457+00:00", "missing": false}}]}